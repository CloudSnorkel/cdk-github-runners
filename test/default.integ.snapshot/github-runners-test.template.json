{
 "Resources": {
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "github-runners-test/Vpc"
     }
    ]
   }
  },
  "VpcPublicSubnet1Subnet5C2D37C4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/17",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "github-runners-test/Vpc/PublicSubnet1"
     }
    ]
   }
  },
  "VpcPublicSubnet1RouteTable6C95E38E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "github-runners-test/Vpc/PublicSubnet1"
     }
    ]
   }
  },
  "VpcPublicSubnet1RouteTableAssociation97140677": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   }
  },
  "VpcPublicSubnet1DefaultRoute3DA9E72A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ]
  },
  "VpcPublicSubnet2Subnet691E08A3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/17",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "github-runners-test/Vpc/PublicSubnet2"
     }
    ]
   }
  },
  "VpcPublicSubnet2RouteTable94F7E489": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "github-runners-test/Vpc/PublicSubnet2"
     }
    ]
   }
  },
  "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    }
   }
  },
  "VpcPublicSubnet2DefaultRoute97F91067": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ]
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "github-runners-test/Vpc"
     }
    ]
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    }
   }
  },
  "cluster611F8AFF": {
   "Type": "AWS::ECS::Cluster"
  },
  "clusterA4C38409": {
   "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
   "Properties": {
    "CapacityProviders": [
     "FARGATE",
     "FARGATE_SPOT"
    ],
    "Cluster": {
     "Ref": "cluster611F8AFF"
    },
    "DefaultCapacityProviderStrategy": []
   }
  },
  "FargatebuilderRepository8F7BA13C": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "ImageScanningConfiguration": {
     "ScanOnPush": true
    },
    "ImageTagMutability": "MUTABLE",
    "LifecyclePolicy": {
     "LifecyclePolicyText": "{\"rules\":[{\"rulePriority\":1,\"description\":\"Remove untagged images that have been replaced by CodeBuild\",\"selection\":{\"tagStatus\":\"untagged\",\"countType\":\"sinceImagePushed\",\"countNumber\":1,\"countUnit\":\"days\"},\"action\":{\"type\":\"expire\"}}]}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "FargatebuilderLogs2F794091": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "FargatebuilderCodeBuildRole814DF0A3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "FargatebuilderCodeBuildRoleDefaultPolicy154A06CC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/7016cd24653d28ac7705bc5ec6608f27c8625b2871072fba158790922d95eef1.zip"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargatebuilderLogs2F794091",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "FargatebuilderCodeBuild4F182743"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "FargatebuilderCodeBuild4F182743"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "FargatebuilderCodeBuild4F182743"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargatebuilderRepository8F7BA13C",
         "Arn"
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ecr:PutImage",
        "ecr:InitiateLayerUpload",
        "ecr:UploadLayerPart",
        "ecr:CompleteLayerUpload"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargatebuilderRepository8F7BA13C",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "FargatebuilderCodeBuildRoleDefaultPolicy154A06CC",
    "Roles": [
     {
      "Ref": "FargatebuilderCodeBuildRole814DF0A3"
     }
    ]
   }
  },
  "FargatebuilderCodeBuild4F182743": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:4.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": true,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "FargatebuilderCodeBuildRole814DF0A3",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": {
      "Fn::Join": [
       "",
       [
        "{\n  \"version\": \"0.2\",\n  \"env\": {\n    \"variables\": {\n      \"REPO_ARN\": \"",
        {
         "Fn::GetAtt": [
          "FargatebuilderRepository8F7BA13C",
          "Arn"
         ]
        },
        "\",\n      \"REPO_URI\": \"",
        {
         "Fn::Select": [
          4,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::GetAtt": [
              "FargatebuilderRepository8F7BA13C",
              "Arn"
             ]
            }
           ]
          }
         ]
        },
        ".dkr.ecr.",
        {
         "Fn::Select": [
          3,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::GetAtt": [
              "FargatebuilderRepository8F7BA13C",
              "Arn"
             ]
            }
           ]
          }
         ]
        },
        ".",
        {
         "Ref": "AWS::URLSuffix"
        },
        "/",
        {
         "Ref": "FargatebuilderRepository8F7BA13C"
        },
        "\",\n      \"STACK_ID\": \"unspecified\",\n      \"REQUEST_ID\": \"unspecified\",\n      \"LOGICAL_RESOURCE_ID\": \"unspecified\",\n      \"RESPONSE_URL\": \"unspecified\",\n      \"RUNNER_VERSION\": \"latest\"\n    }\n  },\n  \"phases\": {\n    \"pre_build\": {\n      \"commands\": [\n        \"mkdir -p extra_certs\",\n        \"$(aws ecr get-login --no-include-email --region \\\"$AWS_DEFAULT_REGION\\\")\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"docker build . -t \\\"$REPO_URI\\\"  --build-arg RUNNER_VERSION=\\\"latest\\\"\",\n        \"docker push \\\"$REPO_URI\\\"\"\n      ]\n    },\n    \"post_build\": {\n      \"commands\": [\n        \"STATUS=\\\"SUCCESS\\\"\",\n        \"if [ $CODEBUILD_BUILD_SUCCEEDING -ne 1 ]; then STATUS=\\\"FAILED\\\"; fi\",\n        \"cat <<EOF > /tmp/payload.json\\n{\\n  \\\"StackId\\\": \\\"$STACK_ID\\\",\\n  \\\"RequestId\\\": \\\"$REQUEST_ID\\\",\\n  \\\"LogicalResourceId\\\": \\\"$LOGICAL_RESOURCE_ID\\\",\\n  \\\"PhysicalResourceId\\\": \\\"$REPO_ARN\\\",\\n  \\\"Status\\\": \\\"$STATUS\\\",\\n  \\\"Reason\\\": \\\"See logs in ",
        {
         "Ref": "FargatebuilderLogs2F794091"
        },
        "/$CODEBUILD_LOG_PATH (deploy again with 'cdk deploy -R' or logRemovalPolicy=RemovalPolicy.RETAIN if they are already deleted)\\\",\\n  \\\"Data\\\": {\\\"Name\\\": \\\"",
        {
         "Ref": "FargatebuilderRepository8F7BA13C"
        },
        "\\\"}\\n}\\nEOF\",\n        \"if [ \\\"$RESPONSE_URL\\\" != \\\"unspecified\\\" ]; then jq . /tmp/payload.json; curl -fsSL -X PUT -H \\\"Content-Type:\\\" -d \\\"@/tmp/payload.json\\\" \\\"$RESPONSE_URL\\\"; fi\"\n      ]\n    }\n  }\n}"
       ]
      ]
     },
     "Location": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
        },
        "/7016cd24653d28ac7705bc5ec6608f27c8625b2871072fba158790922d95eef1.zip"
       ]
      ]
     },
     "Type": "S3"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Build docker image for self-hosted GitHub runner github-runners-test/Fargate builder (Linux/X86_64)",
    "EncryptionKey": "alias/aws/s3",
    "LogsConfig": {
     "CloudWatchLogs": {
      "GroupName": {
       "Ref": "FargatebuilderLogs2F794091"
      },
      "Status": "ENABLED"
     }
    },
    "TimeoutInMinutes": 60
   }
  },
  "FargatebuilderCodeBuildEventsRole92F2259E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "FargatebuilderCodeBuildEventsRoleDefaultPolicyD2B048CD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codebuild:StartBuild",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargatebuilderCodeBuild4F182743",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "FargatebuilderCodeBuildEventsRoleDefaultPolicyD2B048CD",
    "Roles": [
     {
      "Ref": "FargatebuilderCodeBuildEventsRole92F2259E"
     }
    ]
   }
  },
  "FargatebuilderCRPolicy22FB4B05": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codebuild:StartBuild",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargatebuilderCodeBuild4F182743",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchDeleteImage",
        "ecr:ListImages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargatebuilderRepository8F7BA13C",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "FargatebuilderCRPolicy22FB4B05",
    "Roles": [
     {
      "Ref": "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837"
     }
    ]
   }
  },
  "FargatebuilderBuilder0834CD0B": {
   "Type": "Custom::ImageBuilder",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A",
      "Arn"
     ]
    },
    "RepoName": {
     "Ref": "FargatebuilderRepository8F7BA13C"
    },
    "ProjectName": {
     "Ref": "FargatebuilderCodeBuild4F182743"
    },
    "BuildHash": "ac1ffc5169a5fe69907bb4638ebb989e"
   },
   "DependsOn": [
    "buildimagedcc036c8876b451ea2c1552f9e06e9e1LogRetention13129CEB",
    "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A",
    "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837",
    "FargatebuilderCodeBuildEventsRoleDefaultPolicyD2B048CD",
    "FargatebuilderCodeBuildEventsRole92F2259E",
    "FargatebuilderCodeBuild4F182743",
    "FargatebuilderCodeBuildRoleDefaultPolicy154A06CC",
    "FargatebuilderCodeBuildRole814DF0A3",
    "FargatebuilderCRPolicy22FB4B05"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "FargatebuilderBuildSchedule0B083A73": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Rebuild runner image for ",
       {
        "Ref": "FargatebuilderRepository8F7BA13C"
       }
      ]
     ]
    },
    "ScheduleExpression": "rate(7 days)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "FargatebuilderCodeBuild4F182743",
        "Arn"
       ]
      },
      "Id": "Target0",
      "RoleArn": {
       "Fn::GetAtt": [
        "FargatebuilderCodeBuildEventsRole92F2259E",
        "Arn"
       ]
      }
     }
    ]
   }
  },
  "FargatebuilderarmRepository77DCC132": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "ImageScanningConfiguration": {
     "ScanOnPush": true
    },
    "ImageTagMutability": "MUTABLE",
    "LifecyclePolicy": {
     "LifecyclePolicyText": "{\"rules\":[{\"rulePriority\":1,\"description\":\"Remove untagged images that have been replaced by CodeBuild\",\"selection\":{\"tagStatus\":\"untagged\",\"countType\":\"sinceImagePushed\",\"countNumber\":1,\"countUnit\":\"days\"},\"action\":{\"type\":\"expire\"}}]}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "FargatebuilderarmLogs63D60F4D": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "FargatebuilderarmCodeBuildRole10194D7D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "FargatebuilderarmCodeBuildRoleDefaultPolicy43BE6861": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/fcdd8c8653be84158994fea0b9638c46cdd8fa303dec32dc3ea5f506b8ecff39.zip"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargatebuilderarmLogs63D60F4D",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "FargatebuilderarmCodeBuild0D30679A"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "FargatebuilderarmCodeBuild0D30679A"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "FargatebuilderarmCodeBuild0D30679A"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargatebuilderarmRepository77DCC132",
         "Arn"
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ecr:PutImage",
        "ecr:InitiateLayerUpload",
        "ecr:UploadLayerPart",
        "ecr:CompleteLayerUpload"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargatebuilderarmRepository77DCC132",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "FargatebuilderarmCodeBuildRoleDefaultPolicy43BE6861",
    "Roles": [
     {
      "Ref": "FargatebuilderarmCodeBuildRole10194D7D"
     }
    ]
   }
  },
  "FargatebuilderarmCodeBuild0D30679A": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/amazonlinux2-aarch64-standard:2.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": true,
     "Type": "ARM_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "FargatebuilderarmCodeBuildRole10194D7D",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": {
      "Fn::Join": [
       "",
       [
        "{\n  \"version\": \"0.2\",\n  \"env\": {\n    \"variables\": {\n      \"REPO_ARN\": \"",
        {
         "Fn::GetAtt": [
          "FargatebuilderarmRepository77DCC132",
          "Arn"
         ]
        },
        "\",\n      \"REPO_URI\": \"",
        {
         "Fn::Select": [
          4,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::GetAtt": [
              "FargatebuilderarmRepository77DCC132",
              "Arn"
             ]
            }
           ]
          }
         ]
        },
        ".dkr.ecr.",
        {
         "Fn::Select": [
          3,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::GetAtt": [
              "FargatebuilderarmRepository77DCC132",
              "Arn"
             ]
            }
           ]
          }
         ]
        },
        ".",
        {
         "Ref": "AWS::URLSuffix"
        },
        "/",
        {
         "Ref": "FargatebuilderarmRepository77DCC132"
        },
        "\",\n      \"STACK_ID\": \"unspecified\",\n      \"REQUEST_ID\": \"unspecified\",\n      \"LOGICAL_RESOURCE_ID\": \"unspecified\",\n      \"RESPONSE_URL\": \"unspecified\",\n      \"RUNNER_VERSION\": \"latest\"\n    }\n  },\n  \"phases\": {\n    \"pre_build\": {\n      \"commands\": [\n        \"mkdir -p extra_certs\",\n        \"$(aws ecr get-login --no-include-email --region \\\"$AWS_DEFAULT_REGION\\\")\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"docker build . -t \\\"$REPO_URI\\\"  --build-arg RUNNER_VERSION=\\\"latest\\\"\",\n        \"docker push \\\"$REPO_URI\\\"\"\n      ]\n    },\n    \"post_build\": {\n      \"commands\": [\n        \"STATUS=\\\"SUCCESS\\\"\",\n        \"if [ $CODEBUILD_BUILD_SUCCEEDING -ne 1 ]; then STATUS=\\\"FAILED\\\"; fi\",\n        \"cat <<EOF > /tmp/payload.json\\n{\\n  \\\"StackId\\\": \\\"$STACK_ID\\\",\\n  \\\"RequestId\\\": \\\"$REQUEST_ID\\\",\\n  \\\"LogicalResourceId\\\": \\\"$LOGICAL_RESOURCE_ID\\\",\\n  \\\"PhysicalResourceId\\\": \\\"$REPO_ARN\\\",\\n  \\\"Status\\\": \\\"$STATUS\\\",\\n  \\\"Reason\\\": \\\"See logs in ",
        {
         "Ref": "FargatebuilderarmLogs63D60F4D"
        },
        "/$CODEBUILD_LOG_PATH (deploy again with 'cdk deploy -R' or logRemovalPolicy=RemovalPolicy.RETAIN if they are already deleted)\\\",\\n  \\\"Data\\\": {\\\"Name\\\": \\\"",
        {
         "Ref": "FargatebuilderarmRepository77DCC132"
        },
        "\\\"}\\n}\\nEOF\",\n        \"if [ \\\"$RESPONSE_URL\\\" != \\\"unspecified\\\" ]; then jq . /tmp/payload.json; curl -fsSL -X PUT -H \\\"Content-Type:\\\" -d \\\"@/tmp/payload.json\\\" \\\"$RESPONSE_URL\\\"; fi\"\n      ]\n    }\n  }\n}"
       ]
      ]
     },
     "Location": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
        },
        "/fcdd8c8653be84158994fea0b9638c46cdd8fa303dec32dc3ea5f506b8ecff39.zip"
       ]
      ]
     },
     "Type": "S3"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Build docker image for self-hosted GitHub runner github-runners-test/Fargate builder arm (Linux/ARM64)",
    "EncryptionKey": "alias/aws/s3",
    "LogsConfig": {
     "CloudWatchLogs": {
      "GroupName": {
       "Ref": "FargatebuilderarmLogs63D60F4D"
      },
      "Status": "ENABLED"
     }
    },
    "TimeoutInMinutes": 60
   }
  },
  "FargatebuilderarmCodeBuildEventsRole20E8CE66": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "FargatebuilderarmCodeBuildEventsRoleDefaultPolicy39CAA8CB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codebuild:StartBuild",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargatebuilderarmCodeBuild0D30679A",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "FargatebuilderarmCodeBuildEventsRoleDefaultPolicy39CAA8CB",
    "Roles": [
     {
      "Ref": "FargatebuilderarmCodeBuildEventsRole20E8CE66"
     }
    ]
   }
  },
  "FargatebuilderarmCRPolicyD241BB66": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codebuild:StartBuild",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargatebuilderarmCodeBuild0D30679A",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchDeleteImage",
        "ecr:ListImages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargatebuilderarmRepository77DCC132",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "FargatebuilderarmCRPolicyD241BB66",
    "Roles": [
     {
      "Ref": "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837"
     }
    ]
   }
  },
  "FargatebuilderarmBuilder48D1AF5A": {
   "Type": "Custom::ImageBuilder",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A",
      "Arn"
     ]
    },
    "RepoName": {
     "Ref": "FargatebuilderarmRepository77DCC132"
    },
    "ProjectName": {
     "Ref": "FargatebuilderarmCodeBuild0D30679A"
    },
    "BuildHash": "2d28bc55d37386fa2d542ed1c80b78b8"
   },
   "DependsOn": [
    "buildimagedcc036c8876b451ea2c1552f9e06e9e1LogRetention13129CEB",
    "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A",
    "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837",
    "FargatebuilderarmCodeBuildEventsRoleDefaultPolicy39CAA8CB",
    "FargatebuilderarmCodeBuildEventsRole20E8CE66",
    "FargatebuilderarmCodeBuild0D30679A",
    "FargatebuilderarmCodeBuildRoleDefaultPolicy43BE6861",
    "FargatebuilderarmCodeBuildRole10194D7D",
    "FargatebuilderarmCRPolicyD241BB66"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "FargatebuilderarmBuildSchedule854B2895": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Rebuild runner image for ",
       {
        "Ref": "FargatebuilderarmRepository77DCC132"
       }
      ]
     ]
    },
    "ScheduleExpression": "rate(7 days)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "FargatebuilderarmCodeBuild0D30679A",
        "Arn"
       ]
      },
      "Id": "Target0",
      "RoleArn": {
       "Fn::GetAtt": [
        "FargatebuilderarmCodeBuildEventsRole20E8CE66",
        "Arn"
       ]
      }
     }
    ]
   }
  },
  "LambdaImageBuilderx64Repository57F632F1": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "ImageScanningConfiguration": {
     "ScanOnPush": true
    },
    "ImageTagMutability": "MUTABLE",
    "LifecyclePolicy": {
     "LifecyclePolicyText": "{\"rules\":[{\"rulePriority\":1,\"description\":\"Remove untagged images that have been replaced by CodeBuild\",\"selection\":{\"tagStatus\":\"untagged\",\"countType\":\"sinceImagePushed\",\"countNumber\":1,\"countUnit\":\"days\"},\"action\":{\"type\":\"expire\"}}]}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "LambdaImageBuilderx64Logs1C003BB4": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "LambdaImageBuilderx64CodeBuildRole144A321F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "LambdaImageBuilderx64CodeBuildRoleDefaultPolicy3268409C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/c6586c763100b9311cadceb2a66b5cd94d96d0f4f402d8c4c26b09b74cb79712.zip"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaImageBuilderx64Logs1C003BB4",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "LambdaImageBuilderx64CodeBuild67DE14C8"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "LambdaImageBuilderx64CodeBuild67DE14C8"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "LambdaImageBuilderx64CodeBuild67DE14C8"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaImageBuilderx64Repository57F632F1",
         "Arn"
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ecr:PutImage",
        "ecr:InitiateLayerUpload",
        "ecr:UploadLayerPart",
        "ecr:CompleteLayerUpload"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaImageBuilderx64Repository57F632F1",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaImageBuilderx64CodeBuildRoleDefaultPolicy3268409C",
    "Roles": [
     {
      "Ref": "LambdaImageBuilderx64CodeBuildRole144A321F"
     }
    ]
   }
  },
  "LambdaImageBuilderx64CodeBuild67DE14C8": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:4.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": true,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "LambdaImageBuilderx64CodeBuildRole144A321F",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": {
      "Fn::Join": [
       "",
       [
        "{\n  \"version\": \"0.2\",\n  \"env\": {\n    \"variables\": {\n      \"REPO_ARN\": \"",
        {
         "Fn::GetAtt": [
          "LambdaImageBuilderx64Repository57F632F1",
          "Arn"
         ]
        },
        "\",\n      \"REPO_URI\": \"",
        {
         "Fn::Select": [
          4,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::GetAtt": [
              "LambdaImageBuilderx64Repository57F632F1",
              "Arn"
             ]
            }
           ]
          }
         ]
        },
        ".dkr.ecr.",
        {
         "Fn::Select": [
          3,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::GetAtt": [
              "LambdaImageBuilderx64Repository57F632F1",
              "Arn"
             ]
            }
           ]
          }
         ]
        },
        ".",
        {
         "Ref": "AWS::URLSuffix"
        },
        "/",
        {
         "Ref": "LambdaImageBuilderx64Repository57F632F1"
        },
        "\",\n      \"STACK_ID\": \"unspecified\",\n      \"REQUEST_ID\": \"unspecified\",\n      \"LOGICAL_RESOURCE_ID\": \"unspecified\",\n      \"RESPONSE_URL\": \"unspecified\",\n      \"RUNNER_VERSION\": \"latest\"\n    }\n  },\n  \"phases\": {\n    \"pre_build\": {\n      \"commands\": [\n        \"mkdir -p extra_certs\",\n        \"$(aws ecr get-login --no-include-email --region \\\"$AWS_DEFAULT_REGION\\\")\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"docker build . -t \\\"$REPO_URI\\\"  --build-arg RUNNER_VERSION=\\\"latest\\\"\",\n        \"docker push \\\"$REPO_URI\\\"\"\n      ]\n    },\n    \"post_build\": {\n      \"commands\": [\n        \"STATUS=\\\"SUCCESS\\\"\",\n        \"if [ $CODEBUILD_BUILD_SUCCEEDING -ne 1 ]; then STATUS=\\\"FAILED\\\"; fi\",\n        \"cat <<EOF > /tmp/payload.json\\n{\\n  \\\"StackId\\\": \\\"$STACK_ID\\\",\\n  \\\"RequestId\\\": \\\"$REQUEST_ID\\\",\\n  \\\"LogicalResourceId\\\": \\\"$LOGICAL_RESOURCE_ID\\\",\\n  \\\"PhysicalResourceId\\\": \\\"$REPO_ARN\\\",\\n  \\\"Status\\\": \\\"$STATUS\\\",\\n  \\\"Reason\\\": \\\"See logs in ",
        {
         "Ref": "LambdaImageBuilderx64Logs1C003BB4"
        },
        "/$CODEBUILD_LOG_PATH (deploy again with 'cdk deploy -R' or logRemovalPolicy=RemovalPolicy.RETAIN if they are already deleted)\\\",\\n  \\\"Data\\\": {\\\"Name\\\": \\\"",
        {
         "Ref": "LambdaImageBuilderx64Repository57F632F1"
        },
        "\\\"}\\n}\\nEOF\",\n        \"if [ \\\"$RESPONSE_URL\\\" != \\\"unspecified\\\" ]; then jq . /tmp/payload.json; curl -fsSL -X PUT -H \\\"Content-Type:\\\" -d \\\"@/tmp/payload.json\\\" \\\"$RESPONSE_URL\\\"; fi\"\n      ]\n    }\n  }\n}"
       ]
      ]
     },
     "Location": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
        },
        "/c6586c763100b9311cadceb2a66b5cd94d96d0f4f402d8c4c26b09b74cb79712.zip"
       ]
      ]
     },
     "Type": "S3"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Build docker image for self-hosted GitHub runner github-runners-test/Lambda Image Builder x64 (Linux/X86_64)",
    "EncryptionKey": "alias/aws/s3",
    "LogsConfig": {
     "CloudWatchLogs": {
      "GroupName": {
       "Ref": "LambdaImageBuilderx64Logs1C003BB4"
      },
      "Status": "ENABLED"
     }
    },
    "TimeoutInMinutes": 60
   }
  },
  "LambdaImageBuilderx64CodeBuildEventsRoleF8B03C21": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "LambdaImageBuilderx64CodeBuildEventsRoleDefaultPolicy2B894997": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codebuild:StartBuild",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaImageBuilderx64CodeBuild67DE14C8",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaImageBuilderx64CodeBuildEventsRoleDefaultPolicy2B894997",
    "Roles": [
     {
      "Ref": "LambdaImageBuilderx64CodeBuildEventsRoleF8B03C21"
     }
    ]
   }
  },
  "LambdaImageBuilderx64CRPolicy6DBE0D1F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codebuild:StartBuild",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaImageBuilderx64CodeBuild67DE14C8",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchDeleteImage",
        "ecr:ListImages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaImageBuilderx64Repository57F632F1",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaImageBuilderx64CRPolicy6DBE0D1F",
    "Roles": [
     {
      "Ref": "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837"
     }
    ]
   }
  },
  "LambdaImageBuilderx64Builder42F384AF": {
   "Type": "Custom::ImageBuilder",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A",
      "Arn"
     ]
    },
    "RepoName": {
     "Ref": "LambdaImageBuilderx64Repository57F632F1"
    },
    "ProjectName": {
     "Ref": "LambdaImageBuilderx64CodeBuild67DE14C8"
    },
    "BuildHash": "616a9a0d9fd5bd03cbfa717386a62d88"
   },
   "DependsOn": [
    "buildimagedcc036c8876b451ea2c1552f9e06e9e1LogRetention13129CEB",
    "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A",
    "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837",
    "LambdaImageBuilderx64CodeBuildEventsRoleDefaultPolicy2B894997",
    "LambdaImageBuilderx64CodeBuildEventsRoleF8B03C21",
    "LambdaImageBuilderx64CodeBuild67DE14C8",
    "LambdaImageBuilderx64CodeBuildRoleDefaultPolicy3268409C",
    "LambdaImageBuilderx64CodeBuildRole144A321F",
    "LambdaImageBuilderx64CRPolicy6DBE0D1F"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "LambdaImageBuilderx64BuildScheduleFA3DBF6A": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Rebuild runner image for ",
       {
        "Ref": "LambdaImageBuilderx64Repository57F632F1"
       }
      ]
     ]
    },
    "ScheduleExpression": "rate(7 days)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "LambdaImageBuilderx64CodeBuild67DE14C8",
        "Arn"
       ]
      },
      "Id": "Target0",
      "RoleArn": {
       "Fn::GetAtt": [
        "LambdaImageBuilderx64CodeBuildEventsRoleF8B03C21",
        "Arn"
       ]
      }
     }
    ]
   }
  },
  "LambdaImageBuilderx64DependableImagePushruleDEB26F21": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Update GitHub Actions runner Lambda on ECR image push",
    "EventPattern": {
     "detail-type": [
      "ECR Image Action"
     ],
     "detail": {
      "action-type": [
       "PUSH"
      ],
      "repository-name": [
       {
        "Fn::GetAtt": [
         "LambdaImageBuilderx64Builder42F384AF",
         "Name"
        ]
       }
      ],
      "image-tag": [
       "latest"
      ],
      "result": [
       "SUCCESS"
      ]
     },
     "source": [
      "aws.ecr"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "updatelambdadcc036c8876b451ea2c1552f9e06e9e180810ABA",
        "Arn"
       ]
      },
      "Id": "Target0",
      "Input": {
       "Fn::Join": [
        "",
        [
         "{\"lambdaName\":\"",
         {
          "Ref": "LambdaFunction9233991D"
         },
         "\",\"repositoryUri\":\"",
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             ":",
             {
              "Ref": "LambdaImageBuilderx64Builder42F384AF"
             }
            ]
           }
          ]
         },
         ".dkr.ecr.",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             ":",
             {
              "Ref": "LambdaImageBuilderx64Builder42F384AF"
             }
            ]
           }
          ]
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/",
         {
          "Fn::GetAtt": [
           "LambdaImageBuilderx64Builder42F384AF",
           "Name"
          ]
         },
         "\",\"repositoryTag\":\"latest\"}"
        ]
       ]
      }
     }
    ]
   }
  },
  "LambdaImageBuilderx64DependableImagePushruleAllowEventRulegithubrunnerstestupdatelambdadcc036c8876b451ea2c1552f9e06e9e17433A98E7BC3031D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "updatelambdadcc036c8876b451ea2c1552f9e06e9e180810ABA",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "LambdaImageBuilderx64DependableImagePushruleDEB26F21",
      "Arn"
     ]
    }
   }
  },
  "WindowsImageBuilderSG5ACD1618": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "github-runners-test/Windows Image Builder/SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "WindowsImageBuilderRepositoryA4CBB6D8": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "ImageScanningConfiguration": {
     "ScanOnPush": true
    },
    "ImageTagMutability": "MUTABLE",
    "LifecyclePolicy": {
     "LifecyclePolicyText": "{\"rules\":[{\"rulePriority\":1,\"description\":\"Remove all but the latest image\",\"selection\":{\"tagStatus\":\"any\",\"countType\":\"imageCountMoreThan\",\"countNumber\":1},\"action\":{\"type\":\"expire\"}}]}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "WindowsImageBuilderAWSCLIVersion7C70BA9E": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-WindowsImageBuilder-AWSCLI-2F2337FE",
    "VersionedData": {
     "platform": "Windows",
     "data": {
      "name": "AWS CLI",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecutePowerShell",
          "inputs": {
           "commands": [
            "$ErrorActionPreference = 'Stop'",
            "Start-Process msiexec.exe -Wait -ArgumentList '/i https://awscli.amazonaws.com/AWSCLIV2.msi /qn'"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of AWS CLI"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "WindowsImageBuilderAWSCLIComponentC38DBB5C": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-WindowsImageBuilder-AWSCLI-2F2337FE",
    "Platform": "Windows",
    "Version": {
     "Ref": "WindowsImageBuilderAWSCLIVersion7C70BA9E"
    },
    "Data": "{\"name\":\"AWS CLI\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecutePowerShell\",\"inputs\":{\"commands\":[\"$ErrorActionPreference = 'Stop'\",\"Start-Process msiexec.exe -Wait -ArgumentList '/i https://awscli.amazonaws.com/AWSCLIV2.msi /qn'\"]}}]}]}",
    "Description": "Install latest version of AWS CLI"
   }
  },
  "WindowsImageBuilderGitHubCLIVersionBF0CA21E": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-WindowsImageBuilder-GitHubCLI-A93C9338",
    "VersionedData": {
     "platform": "Windows",
     "data": {
      "name": "GitHub CLI",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecutePowerShell",
          "inputs": {
           "commands": [
            "$ErrorActionPreference = 'Stop'",
            "$ProgressPreference = 'SilentlyContinue'",
            "cmd /c curl -w \"%{redirect_url}\" -fsS https://github.com/cli/cli/releases/latest > $Env:TEMP\\latest-gh",
            "$LatestUrl = Get-Content $Env:TEMP\\latest-gh",
            "$GH_VERSION = ($LatestUrl -Split '/')[-1].substring(1)",
            "$ProgressPreference = 'SilentlyContinue'",
            "Invoke-WebRequest -UseBasicParsing -Uri \"https://github.com/cli/cli/releases/download/v${GH_VERSION}/gh_${GH_VERSION}_windows_amd64.msi\" -OutFile gh.msi",
            "Start-Process msiexec.exe -Wait -ArgumentList '/i gh.msi /qn'",
            "del gh.msi"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of gh"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "WindowsImageBuilderGitHubCLIComponent01DB322F": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-WindowsImageBuilder-GitHubCLI-A93C9338",
    "Platform": "Windows",
    "Version": {
     "Ref": "WindowsImageBuilderGitHubCLIVersionBF0CA21E"
    },
    "Data": "{\"name\":\"GitHub CLI\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecutePowerShell\",\"inputs\":{\"commands\":[\"$ErrorActionPreference = 'Stop'\",\"$ProgressPreference = 'SilentlyContinue'\",\"cmd /c curl -w \\\"%{redirect_url}\\\" -fsS https://github.com/cli/cli/releases/latest > $Env:TEMP\\\\latest-gh\",\"$LatestUrl = Get-Content $Env:TEMP\\\\latest-gh\",\"$GH_VERSION = ($LatestUrl -Split '/')[-1].substring(1)\",\"$ProgressPreference = 'SilentlyContinue'\",\"Invoke-WebRequest -UseBasicParsing -Uri \\\"https://github.com/cli/cli/releases/download/v${GH_VERSION}/gh_${GH_VERSION}_windows_amd64.msi\\\" -OutFile gh.msi\",\"Start-Process msiexec.exe -Wait -ArgumentList '/i gh.msi /qn'\",\"del gh.msi\"]}}]}]}",
    "Description": "Install latest version of gh"
   }
  },
  "WindowsImageBuildergitVersion78548E80": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-WindowsImageBuilder-git-D282309C",
    "VersionedData": {
     "platform": "Windows",
     "data": {
      "name": "Git",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecutePowerShell",
          "inputs": {
           "commands": [
            "$ErrorActionPreference = 'Stop'",
            "$ProgressPreference = 'SilentlyContinue'",
            "cmd /c curl -w \"%{redirect_url}\" -fsS https://github.com/git-for-windows/git/releases/latest > $Env:TEMP\\latest-git",
            "$LatestUrl = Get-Content $Env:TEMP\\latest-git",
            "$GIT_VERSION = ($LatestUrl -Split '/')[-1].substring(1)",
            "$GIT_VERSION_SHORT = ($GIT_VERSION -Split '.windows.')[0]",
            "Invoke-WebRequest -UseBasicParsing -Uri https://github.com/git-for-windows/git/releases/download/v${GIT_VERSION}/Git-${GIT_VERSION_SHORT}-64-bit.exe -OutFile git-setup.exe",
            "Start-Process git-setup.exe -Wait -ArgumentList '/VERYSILENT'",
            "del git-setup.exe"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of git"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "WindowsImageBuildergitComponent39E4D9CB": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-WindowsImageBuilder-git-D282309C",
    "Platform": "Windows",
    "Version": {
     "Ref": "WindowsImageBuildergitVersion78548E80"
    },
    "Data": "{\"name\":\"Git\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecutePowerShell\",\"inputs\":{\"commands\":[\"$ErrorActionPreference = 'Stop'\",\"$ProgressPreference = 'SilentlyContinue'\",\"cmd /c curl -w \\\"%{redirect_url}\\\" -fsS https://github.com/git-for-windows/git/releases/latest > $Env:TEMP\\\\latest-git\",\"$LatestUrl = Get-Content $Env:TEMP\\\\latest-git\",\"$GIT_VERSION = ($LatestUrl -Split '/')[-1].substring(1)\",\"$GIT_VERSION_SHORT = ($GIT_VERSION -Split '.windows.')[0]\",\"Invoke-WebRequest -UseBasicParsing -Uri https://github.com/git-for-windows/git/releases/download/v${GIT_VERSION}/Git-${GIT_VERSION_SHORT}-64-bit.exe -OutFile git-setup.exe\",\"Start-Process git-setup.exe -Wait -ArgumentList '/VERYSILENT'\",\"del git-setup.exe\"]}}]}]}",
    "Description": "Install latest version of git"
   }
  },
  "WindowsImageBuilderGitHubActionsRunnerVersion9E35A9C2": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-WindowsImageBuilder-GitHubActionsRunner-A167823A",
    "VersionedData": {
     "platform": "Windows",
     "data": {
      "name": "GitHub Actions Runner",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecutePowerShell",
          "inputs": {
           "commands": [
            "$ErrorActionPreference = 'Stop'",
            "$ProgressPreference = 'SilentlyContinue'",
            "cmd /c curl -w \"%{redirect_url}\" -fsS https://github.com/actions/runner/releases/latest > $Env:TEMP\\latest-gha",
            "$LatestUrl = Get-Content $Env:TEMP\\latest-gha",
            "$RUNNER_VERSION = ($LatestUrl -Split '/')[-1].substring(1)",
            "Invoke-WebRequest -UseBasicParsing -Uri \"https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-win-x64-${RUNNER_VERSION}.zip\" -OutFile actions.zip",
            "Expand-Archive actions.zip -DestinationPath C:\\actions",
            "del actions.zip"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of GitHub Actions Runner"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "WindowsImageBuilderGitHubActionsRunnerComponent248E9189": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-WindowsImageBuilder-GitHubActionsRunner-A167823A",
    "Platform": "Windows",
    "Version": {
     "Ref": "WindowsImageBuilderGitHubActionsRunnerVersion9E35A9C2"
    },
    "Data": "{\"name\":\"GitHub Actions Runner\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecutePowerShell\",\"inputs\":{\"commands\":[\"$ErrorActionPreference = 'Stop'\",\"$ProgressPreference = 'SilentlyContinue'\",\"cmd /c curl -w \\\"%{redirect_url}\\\" -fsS https://github.com/actions/runner/releases/latest > $Env:TEMP\\\\latest-gha\",\"$LatestUrl = Get-Content $Env:TEMP\\\\latest-gha\",\"$RUNNER_VERSION = ($LatestUrl -Split '/')[-1].substring(1)\",\"Invoke-WebRequest -UseBasicParsing -Uri \\\"https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-win-x64-${RUNNER_VERSION}.zip\\\" -OutFile actions.zip\",\"Expand-Archive actions.zip -DestinationPath C:\\\\actions\",\"del actions.zip\"]}}]}]}",
    "Description": "Install latest version of GitHub Actions Runner"
   }
  },
  "WindowsImageBuilderDistribution843AF65B": {
   "Type": "AWS::ImageBuilder::DistributionConfiguration",
   "Properties": {
    "Distributions": [
     {
      "ContainerDistributionConfiguration": {
       "ContainerTags": [
        "latest"
       ],
       "TargetRepository": {
        "Service": "ECR",
        "RepositoryName": {
         "Ref": "WindowsImageBuilderRepositoryA4CBB6D8"
        }
       }
      },
      "Region": {
       "Ref": "AWS::Region"
      }
     }
    ],
    "Name": "github-runners-test-WindowsImageBuilder-18C0E1B2",
    "Description": "Build image for GitHub Actions runner github-runners-test/Windows Image Builder (Windows/X86_64)"
   }
  },
  "WindowsImageBuilderContainerRecipeVersion13A2E3FD": {
   "Type": "Custom::ImageBuilder-ContainerRecipe-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "ContainerRecipe",
    "ObjectName": "github-runners-test-WindowsImageBuilder-ContainerRecipe-C577A80B",
    "VersionedData": {
     "platform": "Windows",
     "components": [
      {
       "componentArn": {
        "Fn::GetAtt": [
         "WindowsImageBuilderAWSCLIComponentC38DBB5C",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "WindowsImageBuilderGitHubCLIComponent01DB322F",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "WindowsImageBuildergitComponent39E4D9CB",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "WindowsImageBuilderGitHubActionsRunnerComponent248E9189",
         "Arn"
        ]
       }
      }
     ],
     "dockerfileTemplate": "FROM {{{ imagebuilder:parentImage }}}\nENV RUNNER_VERSION=___RUNNER_VERSION___\n{{{ imagebuilder:environments }}}\n{{{ imagebuilder:components }}}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "WindowsImageBuilderContainerRecipeB2A421D7": {
   "Type": "AWS::ImageBuilder::ContainerRecipe",
   "Properties": {
    "Components": [
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "WindowsImageBuilderAWSCLIComponentC38DBB5C",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "WindowsImageBuilderGitHubCLIComponent01DB322F",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "WindowsImageBuildergitComponent39E4D9CB",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "WindowsImageBuilderGitHubActionsRunnerComponent248E9189",
        "Arn"
       ]
      }
     }
    ],
    "ContainerType": "DOCKER",
    "Name": "github-runners-test-WindowsImageBuilder-ContainerRecipe-C577A80B",
    "ParentImage": "mcr.microsoft.com/windows/servercore:ltsc2019-amd64",
    "TargetRepository": {
     "RepositoryName": {
      "Ref": "WindowsImageBuilderRepositoryA4CBB6D8"
     },
     "Service": "ECR"
    },
    "Version": {
     "Ref": "WindowsImageBuilderContainerRecipeVersion13A2E3FD"
    },
    "DockerfileTemplateData": "FROM {{{ imagebuilder:parentImage }}}\nENV RUNNER_VERSION=latest\n{{{ imagebuilder:environments }}}\n{{{ imagebuilder:components }}}"
   }
  },
  "WindowsImageBuilderLog0E03408E": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/imagebuilder/github-runners-test-WindowsImageBuilder-ContainerRecipe-C577A80B",
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "WindowsImageBuilderRole717C46A6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "ec2.",
           {
            "Ref": "AWS::URLSuffix"
           }
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/EC2InstanceProfileForImageBuilderECRContainerBuilds"
       ]
      ]
     }
    ]
   }
  },
  "WindowsImageBuilderInstanceProfileBFCCEC08": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "WindowsImageBuilderRole717C46A6"
     }
    ]
   }
  },
  "WindowsImageBuilderInfrastructureFF99A30B": {
   "Type": "AWS::ImageBuilder::InfrastructureConfiguration",
   "Properties": {
    "InstanceProfileName": {
     "Ref": "WindowsImageBuilderInstanceProfileBFCCEC08"
    },
    "Name": "github-runners-test-WindowsImageBuilder-18C0E1B2",
    "Description": "Build image for GitHub Actions runner github-runners-test/Windows Image Builder (Windows/X86_64)",
    "InstanceTypes": [
     "m5.large"
    ],
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "WindowsImageBuilderSG5ACD1618",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   }
  },
  "WindowsImageBuilderImage7065BB07": {
   "Type": "AWS::ImageBuilder::Image",
   "Properties": {
    "InfrastructureConfigurationArn": {
     "Fn::GetAtt": [
      "WindowsImageBuilderInfrastructureFF99A30B",
      "Arn"
     ]
    },
    "ContainerRecipeArn": {
     "Fn::GetAtt": [
      "WindowsImageBuilderContainerRecipeB2A421D7",
      "Arn"
     ]
    },
    "DistributionConfigurationArn": {
     "Fn::GetAtt": [
      "WindowsImageBuilderDistribution843AF65B",
      "Arn"
     ]
    },
    "ImageTestsConfiguration": {
     "ImageTestsEnabled": false
    }
   },
   "DependsOn": [
    "WindowsImageBuilderInfrastructureFF99A30B",
    "WindowsImageBuilderLog0E03408E"
   ]
  },
  "WindowsImageBuilderPipeline29B7B6E1": {
   "Type": "AWS::ImageBuilder::ImagePipeline",
   "Properties": {
    "InfrastructureConfigurationArn": {
     "Fn::GetAtt": [
      "WindowsImageBuilderInfrastructureFF99A30B",
      "Arn"
     ]
    },
    "Name": "github-runners-test-WindowsImageBuilder-18C0E1B2",
    "ContainerRecipeArn": {
     "Fn::GetAtt": [
      "WindowsImageBuilderContainerRecipeB2A421D7",
      "Arn"
     ]
    },
    "Description": "Build image for GitHub Actions runner github-runners-test/Windows Image Builder (Windows/X86_64)",
    "DistributionConfigurationArn": {
     "Fn::GetAtt": [
      "WindowsImageBuilderDistribution843AF65B",
      "Arn"
     ]
    },
    "ImageTestsConfiguration": {
     "ImageTestsEnabled": false
    },
    "Schedule": {
     "PipelineExecutionStartCondition": "EXPRESSION_MATCH_ONLY",
     "ScheduleExpression": "rate(7 days)"
    }
   },
   "DependsOn": [
    "WindowsImageBuilderInfrastructureFF99A30B",
    "WindowsImageBuilderLog0E03408E"
   ]
  },
  "WindowsImageBuilderCRPolicy81A41F62": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchDeleteImage",
        "ecr:ListImages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "WindowsImageBuilderRepositoryA4CBB6D8",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "imagebuilder:ListImages",
        "imagebuilder:ListImageBuildVersions",
        "imagebuilder:DeleteImage"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "WindowsImageBuilderCRPolicy81A41F62",
    "Roles": [
     {
      "Ref": "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837"
     }
    ]
   }
  },
  "WindowsImageBuilderDeleterB5A108CD": {
   "Type": "Custom::ImageDeleter",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A",
      "Arn"
     ]
    },
    "RepoName": {
     "Ref": "WindowsImageBuilderRepositoryA4CBB6D8"
    },
    "ImageBuilderName": "github-runners-test-WindowsImageBuilder-ContainerRecipe-C577A80B",
    "DeleteOnly": true
   },
   "DependsOn": [
    "buildimagedcc036c8876b451ea2c1552f9e06e9e1LogRetention13129CEB",
    "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A",
    "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837",
    "WindowsImageBuilderCRPolicy81A41F62",
    "WindowsImageBuilderImage7065BB07"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1ServiceRoleE25C1A58": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1ServiceRoleDefaultPolicy93D80BBD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "imagebuilder:ListComponents",
        "imagebuilder:ListContainerRecipes",
        "imagebuilder:ListImageRecipes"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1ServiceRoleDefaultPolicy93D80BBD",
    "Roles": [
     {
      "Ref": "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1ServiceRoleE25C1A58"
     }
    ]
   }
  },
  "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "01c5f064d10ce243310200a60c9a4d91e69a03745fec76ab55d2c357ac49c680.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1ServiceRoleE25C1A58",
      "Arn"
     ]
    },
    "Description": "Custom resource handler that bumps up Image Builder versions",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1ServiceRoleDefaultPolicy93D80BBD",
    "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1ServiceRoleE25C1A58"
   ]
  },
  "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1LogRetentionA8337CBD": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "eb5b005c858404ea0c8f68098ed5dcdf5340e02461f149751d10f59c210d5ef8.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ]
  },
  "AMILinuxBuilderSGEDC86329": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "github-runners-test/AMI Linux Builder/SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "AMILinuxBuilderUpgradepackagesandinstallbasicsVersionA685EC4B": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-AMILinuxBuilder-Upgradepackagesandinstallbasics-EDE11EB9",
    "VersionedData": {
     "platform": "Linux",
     "data": {
      "name": "Required packages",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecuteBash",
          "inputs": {
           "commands": [
            "set -ex",
            "apt-get update",
            "DEBIAN_FRONTEND=noninteractive apt-get upgrade -y",
            "DEBIAN_FRONTEND=noninteractive apt-get install -y curl sudo jq bash zip unzip iptables software-properties-common ca-certificates",
            "curl -sfLo /tmp/amazon-cloudwatch-agent.deb https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb",
            "dpkg -i -E /tmp/amazon-cloudwatch-agent.deb",
            "rm /tmp/amazon-cloudwatch-agent.deb"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install packages required for GitHub Runner and upgrade all packages"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxBuilderUpgradepackagesandinstallbasicsComponentE35966D5": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-AMILinuxBuilder-Upgradepackagesandinstallbasics-EDE11EB9",
    "Platform": "Linux",
    "Version": {
     "Ref": "AMILinuxBuilderUpgradepackagesandinstallbasicsVersionA685EC4B"
    },
    "Data": "{\"name\":\"Required packages\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecuteBash\",\"inputs\":{\"commands\":[\"set -ex\",\"apt-get update\",\"DEBIAN_FRONTEND=noninteractive apt-get upgrade -y\",\"DEBIAN_FRONTEND=noninteractive apt-get install -y curl sudo jq bash zip unzip iptables software-properties-common ca-certificates\",\"curl -sfLo /tmp/amazon-cloudwatch-agent.deb https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb\",\"dpkg -i -E /tmp/amazon-cloudwatch-agent.deb\",\"rm /tmp/amazon-cloudwatch-agent.deb\"]}}]}]}",
    "Description": "Install packages required for GitHub Runner and upgrade all packages"
   }
  },
  "AMILinuxBuilderUserVersion6E8E8CF9": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-AMILinuxBuilder-User-1E6E0B38",
    "VersionedData": {
     "platform": "Linux",
     "data": {
      "name": "GitHub Runner user",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecuteBash",
          "inputs": {
           "commands": [
            "set -ex",
            "addgroup runner",
            "adduser --system --disabled-password --home /home/runner --ingroup runner runner"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of AWS CLI"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxBuilderUserComponent5AE6CCAD": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-AMILinuxBuilder-User-1E6E0B38",
    "Platform": "Linux",
    "Version": {
     "Ref": "AMILinuxBuilderUserVersion6E8E8CF9"
    },
    "Data": "{\"name\":\"GitHub Runner user\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecuteBash\",\"inputs\":{\"commands\":[\"set -ex\",\"addgroup runner\",\"adduser --system --disabled-password --home /home/runner --ingroup runner runner\"]}}]}]}",
    "Description": "Install latest version of AWS CLI"
   }
  },
  "AMILinuxBuilderAWSCLIVersion7E4EC258": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-AMILinuxBuilder-AWSCLI-29AF5A97",
    "VersionedData": {
     "platform": "Linux",
     "data": {
      "name": "AWS CLI",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecuteBash",
          "inputs": {
           "commands": [
            "set -ex",
            "curl -fsSL \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o awscliv2.zip",
            "unzip -q awscliv2.zip",
            "./aws/install",
            "rm -rf awscliv2.zip aws"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of AWS CLI"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxBuilderAWSCLIComponent8161BB77": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-AMILinuxBuilder-AWSCLI-29AF5A97",
    "Platform": "Linux",
    "Version": {
     "Ref": "AMILinuxBuilderAWSCLIVersion7E4EC258"
    },
    "Data": "{\"name\":\"AWS CLI\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecuteBash\",\"inputs\":{\"commands\":[\"set -ex\",\"curl -fsSL \\\"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\\\" -o awscliv2.zip\",\"unzip -q awscliv2.zip\",\"./aws/install\",\"rm -rf awscliv2.zip aws\"]}}]}]}",
    "Description": "Install latest version of AWS CLI"
   }
  },
  "AMILinuxBuilderGitHubCLIVersionDC235969": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-AMILinuxBuilder-GitHubCLI-AA9081A6",
    "VersionedData": {
     "platform": "Linux",
     "data": {
      "name": "GitHub CLI",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecuteBash",
          "inputs": {
           "commands": [
            "set -ex",
            "curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg",
            "echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg]   https://cli.github.com/packages stable main\" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null",
            "apt-get update",
            "DEBIAN_FRONTEND=noninteractive apt-get install -y gh"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of gh"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxBuilderGitHubCLIComponentFCD1D3AD": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-AMILinuxBuilder-GitHubCLI-AA9081A6",
    "Platform": "Linux",
    "Version": {
     "Ref": "AMILinuxBuilderGitHubCLIVersionDC235969"
    },
    "Data": "{\"name\":\"GitHub CLI\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecuteBash\",\"inputs\":{\"commands\":[\"set -ex\",\"curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg\",\"echo \\\"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg]   https://cli.github.com/packages stable main\\\" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null\",\"apt-get update\",\"DEBIAN_FRONTEND=noninteractive apt-get install -y gh\"]}}]}]}",
    "Description": "Install latest version of gh"
   }
  },
  "AMILinuxBuildergitVersionE19C42C8": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-AMILinuxBuilder-git-D2E780A5",
    "VersionedData": {
     "platform": "Linux",
     "data": {
      "name": "Git",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecuteBash",
          "inputs": {
           "commands": [
            "set -ex",
            "add-apt-repository ppa:git-core/ppa",
            "apt-get update",
            "DEBIAN_FRONTEND=noninteractive apt-get install -y git"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of git"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxBuildergitComponentE5675D45": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-AMILinuxBuilder-git-D2E780A5",
    "Platform": "Linux",
    "Version": {
     "Ref": "AMILinuxBuildergitVersionE19C42C8"
    },
    "Data": "{\"name\":\"Git\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecuteBash\",\"inputs\":{\"commands\":[\"set -ex\",\"add-apt-repository ppa:git-core/ppa\",\"apt-get update\",\"DEBIAN_FRONTEND=noninteractive apt-get install -y git\"]}}]}]}",
    "Description": "Install latest version of git"
   }
  },
  "AMILinuxBuilderGitHubActionsRunnerVersion97672B31": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-AMILinuxBuilder-GitHubActionsRunner-1461A95B",
    "VersionedData": {
     "platform": "Linux",
     "data": {
      "name": "GitHub Actions Runner",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecuteBash",
          "inputs": {
           "commands": [
            "set -ex",
            "RUNNER_VERSION=`curl -w \"%{redirect_url}\" -fsS https://github.com/actions/runner/releases/latest | grep -oE \"[^/v]+$\"`",
            "curl -fsSLO \"https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz\"",
            "tar xzf \"actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz\"",
            "rm actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz",
            "./bin/installdependencies.sh"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of GitHub Actions Runner"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxBuilderGitHubActionsRunnerComponent62D9BC91": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-AMILinuxBuilder-GitHubActionsRunner-1461A95B",
    "Platform": "Linux",
    "Version": {
     "Ref": "AMILinuxBuilderGitHubActionsRunnerVersion97672B31"
    },
    "Data": "{\"name\":\"GitHub Actions Runner\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecuteBash\",\"inputs\":{\"commands\":[\"set -ex\",\"RUNNER_VERSION=`curl -w \\\"%{redirect_url}\\\" -fsS https://github.com/actions/runner/releases/latest | grep -oE \\\"[^/v]+$\\\"`\",\"curl -fsSLO \\\"https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz\\\"\",\"tar xzf \\\"actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz\\\"\",\"rm actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz\",\"./bin/installdependencies.sh\"]}}]}]}",
    "Description": "Install latest version of GitHub Actions Runner"
   }
  },
  "AMILinuxBuilderDockerVersion3F741AF0": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-AMILinuxBuilder-Docker-09E28BD3",
    "VersionedData": {
     "platform": "Linux",
     "data": {
      "name": "Docker",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecuteBash",
          "inputs": {
           "commands": [
            "set -ex",
            "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker.gpg",
            "echo   \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu   $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null",
            "apt-get update",
            "DEBIAN_FRONTEND=noninteractive apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin",
            "usermod -aG docker runner",
            "ln -s /usr/libexec/docker/cli-plugins/docker-compose /usr/bin/docker-compose"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of Docker"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxBuilderDockerComponentC4D1AB14": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-AMILinuxBuilder-Docker-09E28BD3",
    "Platform": "Linux",
    "Version": {
     "Ref": "AMILinuxBuilderDockerVersion3F741AF0"
    },
    "Data": "{\"name\":\"Docker\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecuteBash\",\"inputs\":{\"commands\":[\"set -ex\",\"curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker.gpg\",\"echo   \\\"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu   $(lsb_release -cs) stable\\\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\",\"apt-get update\",\"DEBIAN_FRONTEND=noninteractive apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin\",\"usermod -aG docker runner\",\"ln -s /usr/libexec/docker/cli-plugins/docker-compose /usr/bin/docker-compose\"]}}]}]}",
    "Description": "Install latest version of Docker"
   }
  },
  "AMILinuxBuilderLaunchtemplateA29452C4": {
   "Type": "AWS::EC2::LaunchTemplate",
   "Properties": {
    "LaunchTemplateData": {
     "TagSpecifications": [
      {
       "ResourceType": "instance",
       "Tags": [
        {
         "Key": "Name",
         "Value": "github-runners-test/AMI Linux Builder/Launch template"
        }
       ]
      },
      {
       "ResourceType": "volume",
       "Tags": [
        {
         "Key": "Name",
         "Value": "github-runners-test/AMI Linux Builder/Launch template"
        }
       ]
      }
     ]
    },
    "TagSpecifications": [
     {
      "ResourceType": "launch-template",
      "Tags": [
       {
        "Key": "Name",
        "Value": "github-runners-test/AMI Linux Builder/Launch template"
       }
      ]
     }
    ]
   }
  },
  "AMILinuxBuilderDistribution045596CF": {
   "Type": "AWS::ImageBuilder::DistributionConfiguration",
   "Properties": {
    "Distributions": [
     {
      "AmiDistributionConfiguration": {
       "Name": "github-runners-test-AMILinuxBuilder-67243E6D-{{ imagebuilder:buildDate }}",
       "AmiTags": {
        "Name": "AMI Linux Builder",
        "GitHubRunners:Stack": "github-runners-test",
        "GitHubRunners:Builder": "github-runners-test/AMI Linux Builder"
       }
      },
      "LaunchTemplateConfigurations": [
       {
        "LaunchTemplateId": {
         "Ref": "AMILinuxBuilderLaunchtemplateA29452C4"
        }
       }
      ],
      "Region": {
       "Ref": "AWS::Region"
      }
     }
    ],
    "Name": "github-runners-test-AMILinuxBuilder-67243E6D",
    "Description": "Build AMI for GitHub Actions runner github-runners-test/AMI Linux Builder (Linux/X86_64)"
   }
  },
  "AMILinuxBuilderAmiRecipeVersionFBE9C9AE": {
   "Type": "Custom::ImageBuilder-ImageRecipe-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "ImageRecipe",
    "ObjectName": "github-runners-test-AMILinuxBuilder-AmiRecipe-2B5C5A8B",
    "VersionedData": {
     "platform": "Linux",
     "components": [
      {
       "componentArn": {
        "Fn::GetAtt": [
         "AMILinuxBuilderUpgradepackagesandinstallbasicsComponentE35966D5",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "AMILinuxBuilderUserComponent5AE6CCAD",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "AMILinuxBuilderAWSCLIComponent8161BB77",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "AMILinuxBuilderGitHubCLIComponentFCD1D3AD",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "AMILinuxBuildergitComponentE5675D45",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "AMILinuxBuilderGitHubActionsRunnerComponent62D9BC91",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "AMILinuxBuilderDockerComponentC4D1AB14",
         "Arn"
        ]
       }
      }
     ],
     "parentAmi": {
      "Ref": "SsmParameterValueawsservicecanonicalubuntuserverfocalstablecurrentamd64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter"
     }
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxBuilderAmiRecipe7C7ED6C7": {
   "Type": "AWS::ImageBuilder::ImageRecipe",
   "Properties": {
    "Components": [
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "AMILinuxBuilderUpgradepackagesandinstallbasicsComponentE35966D5",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "AMILinuxBuilderUserComponent5AE6CCAD",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "AMILinuxBuilderAWSCLIComponent8161BB77",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "AMILinuxBuilderGitHubCLIComponentFCD1D3AD",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "AMILinuxBuildergitComponentE5675D45",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "AMILinuxBuilderGitHubActionsRunnerComponent62D9BC91",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "AMILinuxBuilderDockerComponentC4D1AB14",
        "Arn"
       ]
      }
     }
    ],
    "Name": "github-runners-test-AMILinuxBuilder-AmiRecipe-2B5C5A8B",
    "ParentImage": {
     "Ref": "SsmParameterValueawsservicecanonicalubuntuserverfocalstablecurrentamd64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "Version": {
     "Ref": "AMILinuxBuilderAmiRecipeVersionFBE9C9AE"
    },
    "WorkingDirectory": "/home/runner"
   }
  },
  "AMILinuxBuilderLogAA902D79": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/imagebuilder/github-runners-test-AMILinuxBuilder-AmiRecipe-2B5C5A8B",
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AMILinuxBuilderRole0C42378A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "ec2.",
           {
            "Ref": "AWS::URLSuffix"
           }
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/EC2InstanceProfileForImageBuilder"
       ]
      ]
     }
    ]
   }
  },
  "AMILinuxBuilderInstanceProfile3CA638BE": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "AMILinuxBuilderRole0C42378A"
     }
    ]
   }
  },
  "AMILinuxBuilderInfrastructure6FCD154A": {
   "Type": "AWS::ImageBuilder::InfrastructureConfiguration",
   "Properties": {
    "InstanceProfileName": {
     "Ref": "AMILinuxBuilderInstanceProfile3CA638BE"
    },
    "Name": "github-runners-test-AMILinuxBuilder-67243E6D",
    "Description": "Build AMI for GitHub Actions runner github-runners-test/AMI Linux Builder (Linux/X86_64)",
    "InstanceTypes": [
     "m5.large"
    ],
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "AMILinuxBuilderSGEDC86329",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   }
  },
  "AMILinuxBuilderImage1049E111": {
   "Type": "AWS::ImageBuilder::Image",
   "Properties": {
    "InfrastructureConfigurationArn": {
     "Fn::GetAtt": [
      "AMILinuxBuilderInfrastructure6FCD154A",
      "Arn"
     ]
    },
    "DistributionConfigurationArn": {
     "Fn::GetAtt": [
      "AMILinuxBuilderDistribution045596CF",
      "Arn"
     ]
    },
    "ImageRecipeArn": {
     "Fn::GetAtt": [
      "AMILinuxBuilderAmiRecipe7C7ED6C7",
      "Arn"
     ]
    },
    "ImageTestsConfiguration": {
     "ImageTestsEnabled": false
    }
   },
   "DependsOn": [
    "AMILinuxBuilderInfrastructure6FCD154A",
    "AMILinuxBuilderLogAA902D79"
   ]
  },
  "AMILinuxBuilderPipelineA080CF10": {
   "Type": "AWS::ImageBuilder::ImagePipeline",
   "Properties": {
    "InfrastructureConfigurationArn": {
     "Fn::GetAtt": [
      "AMILinuxBuilderInfrastructure6FCD154A",
      "Arn"
     ]
    },
    "Name": "github-runners-test-AMILinuxBuilder-67243E6D",
    "Description": "Build AMI for GitHub Actions runner github-runners-test/AMI Linux Builder (Linux/X86_64)",
    "DistributionConfigurationArn": {
     "Fn::GetAtt": [
      "AMILinuxBuilderDistribution045596CF",
      "Arn"
     ]
    },
    "ImageRecipeArn": {
     "Fn::GetAtt": [
      "AMILinuxBuilderAmiRecipe7C7ED6C7",
      "Arn"
     ]
    },
    "ImageTestsConfiguration": {
     "ImageTestsEnabled": false
    },
    "Schedule": {
     "PipelineExecutionStartCondition": "EXPRESSION_MATCH_ONLY",
     "ScheduleExpression": "rate(7 days)"
    }
   },
   "DependsOn": [
    "AMILinuxBuilderInfrastructure6FCD154A",
    "AMILinuxBuilderLogAA902D79"
   ]
  },
  "AMILinuxBuilderDeleteAMISchedule0109DEF5": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Delete old AMIs for github-runners-test/AMI Linux Builder",
    "ScheduleExpression": "rate(1 day)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "deleteamidcc036c8876b451ea2c1552f9e06e9e1BE713303",
        "Arn"
       ]
      },
      "Id": "Target0",
      "Input": {
       "Fn::Join": [
        "",
        [
         "{\"RequestType\":\"Scheduled\",\"LaunchTemplateId\":\"",
         {
          "Ref": "AMILinuxBuilderLaunchtemplateA29452C4"
         },
         "\",\"StackName\":\"github-runners-test\",\"BuilderName\":\"github-runners-test/AMI Linux Builder\"}"
        ]
       ]
      }
     }
    ]
   }
  },
  "AMILinuxBuilderDeleteAMIScheduleAllowEventRulegithubrunnerstestdeleteamidcc036c8876b451ea2c1552f9e06e9e147BECA88525B596C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteamidcc036c8876b451ea2c1552f9e06e9e1BE713303",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "AMILinuxBuilderDeleteAMISchedule0109DEF5",
      "Arn"
     ]
    }
   }
  },
  "AMILinuxBuilderAMIDeleter58658716": {
   "Type": "Custom::AmiDeleter",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "deleteamidcc036c8876b451ea2c1552f9e06e9e1BE713303",
      "Arn"
     ]
    },
    "StackName": "github-runners-test",
    "BuilderName": "github-runners-test/AMI Linux Builder"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CodeBuildImageBuilderRepository9DE3B6F0": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "ImageScanningConfiguration": {
     "ScanOnPush": true
    },
    "ImageTagMutability": "MUTABLE",
    "LifecyclePolicy": {
     "LifecyclePolicyText": "{\"rules\":[{\"rulePriority\":1,\"description\":\"Remove untagged images that have been replaced by CodeBuild\",\"selection\":{\"tagStatus\":\"untagged\",\"countType\":\"sinceImagePushed\",\"countNumber\":1,\"countUnit\":\"days\"},\"action\":{\"type\":\"expire\"}}]}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CodeBuildImageBuilderLogsE4CADFCC": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CodeBuildImageBuilderCodeBuildRoleF8F57ECB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "CodeBuildImageBuilderCodeBuildRoleDefaultPolicy1060FBF9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/cf6c81647b444e50910bbd38ad5bd5b74170fa75de8878c6b108a0be22fe8da2.zip"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildImageBuilderLogsE4CADFCC",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "CodeBuildImageBuilderCodeBuild38ECAA44"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "CodeBuildImageBuilderCodeBuild38ECAA44"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "CodeBuildImageBuilderCodeBuild38ECAA44"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildImageBuilderRepository9DE3B6F0",
         "Arn"
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ecr:PutImage",
        "ecr:InitiateLayerUpload",
        "ecr:UploadLayerPart",
        "ecr:CompleteLayerUpload"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildImageBuilderRepository9DE3B6F0",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CodeBuildImageBuilderCodeBuildRoleDefaultPolicy1060FBF9",
    "Roles": [
     {
      "Ref": "CodeBuildImageBuilderCodeBuildRoleF8F57ECB"
     }
    ]
   }
  },
  "CodeBuildImageBuilderCodeBuild38ECAA44": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:4.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": true,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "CodeBuildImageBuilderCodeBuildRoleF8F57ECB",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": {
      "Fn::Join": [
       "",
       [
        "{\n  \"version\": \"0.2\",\n  \"env\": {\n    \"variables\": {\n      \"REPO_ARN\": \"",
        {
         "Fn::GetAtt": [
          "CodeBuildImageBuilderRepository9DE3B6F0",
          "Arn"
         ]
        },
        "\",\n      \"REPO_URI\": \"",
        {
         "Fn::Select": [
          4,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::GetAtt": [
              "CodeBuildImageBuilderRepository9DE3B6F0",
              "Arn"
             ]
            }
           ]
          }
         ]
        },
        ".dkr.ecr.",
        {
         "Fn::Select": [
          3,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::GetAtt": [
              "CodeBuildImageBuilderRepository9DE3B6F0",
              "Arn"
             ]
            }
           ]
          }
         ]
        },
        ".",
        {
         "Ref": "AWS::URLSuffix"
        },
        "/",
        {
         "Ref": "CodeBuildImageBuilderRepository9DE3B6F0"
        },
        "\",\n      \"STACK_ID\": \"unspecified\",\n      \"REQUEST_ID\": \"unspecified\",\n      \"LOGICAL_RESOURCE_ID\": \"unspecified\",\n      \"RESPONSE_URL\": \"unspecified\",\n      \"RUNNER_VERSION\": \"latest\"\n    }\n  },\n  \"phases\": {\n    \"pre_build\": {\n      \"commands\": [\n        \"mkdir -p extra_certs\",\n        \"$(aws ecr get-login --no-include-email --region \\\"$AWS_DEFAULT_REGION\\\")\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"docker build . -t \\\"$REPO_URI\\\"  --build-arg RUNNER_VERSION=\\\"latest\\\"\",\n        \"docker push \\\"$REPO_URI\\\"\"\n      ]\n    },\n    \"post_build\": {\n      \"commands\": [\n        \"STATUS=\\\"SUCCESS\\\"\",\n        \"if [ $CODEBUILD_BUILD_SUCCEEDING -ne 1 ]; then STATUS=\\\"FAILED\\\"; fi\",\n        \"cat <<EOF > /tmp/payload.json\\n{\\n  \\\"StackId\\\": \\\"$STACK_ID\\\",\\n  \\\"RequestId\\\": \\\"$REQUEST_ID\\\",\\n  \\\"LogicalResourceId\\\": \\\"$LOGICAL_RESOURCE_ID\\\",\\n  \\\"PhysicalResourceId\\\": \\\"$REPO_ARN\\\",\\n  \\\"Status\\\": \\\"$STATUS\\\",\\n  \\\"Reason\\\": \\\"See logs in ",
        {
         "Ref": "CodeBuildImageBuilderLogsE4CADFCC"
        },
        "/$CODEBUILD_LOG_PATH (deploy again with 'cdk deploy -R' or logRemovalPolicy=RemovalPolicy.RETAIN if they are already deleted)\\\",\\n  \\\"Data\\\": {\\\"Name\\\": \\\"",
        {
         "Ref": "CodeBuildImageBuilderRepository9DE3B6F0"
        },
        "\\\"}\\n}\\nEOF\",\n        \"if [ \\\"$RESPONSE_URL\\\" != \\\"unspecified\\\" ]; then jq . /tmp/payload.json; curl -fsSL -X PUT -H \\\"Content-Type:\\\" -d \\\"@/tmp/payload.json\\\" \\\"$RESPONSE_URL\\\"; fi\"\n      ]\n    }\n  }\n}"
       ]
      ]
     },
     "Location": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
        },
        "/cf6c81647b444e50910bbd38ad5bd5b74170fa75de8878c6b108a0be22fe8da2.zip"
       ]
      ]
     },
     "Type": "S3"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Build docker image for self-hosted GitHub runner github-runners-test/CodeBuild Image Builder (Linux/X86_64)",
    "EncryptionKey": "alias/aws/s3",
    "LogsConfig": {
     "CloudWatchLogs": {
      "GroupName": {
       "Ref": "CodeBuildImageBuilderLogsE4CADFCC"
      },
      "Status": "ENABLED"
     }
    },
    "TimeoutInMinutes": 60
   }
  },
  "CodeBuildImageBuilderCodeBuildEventsRole4277A55E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "CodeBuildImageBuilderCodeBuildEventsRoleDefaultPolicyF7AE539D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codebuild:StartBuild",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildImageBuilderCodeBuild38ECAA44",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CodeBuildImageBuilderCodeBuildEventsRoleDefaultPolicyF7AE539D",
    "Roles": [
     {
      "Ref": "CodeBuildImageBuilderCodeBuildEventsRole4277A55E"
     }
    ]
   }
  },
  "CodeBuildImageBuilderCRPolicyAFC63F28": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codebuild:StartBuild",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildImageBuilderCodeBuild38ECAA44",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchDeleteImage",
        "ecr:ListImages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildImageBuilderRepository9DE3B6F0",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CodeBuildImageBuilderCRPolicyAFC63F28",
    "Roles": [
     {
      "Ref": "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837"
     }
    ]
   }
  },
  "CodeBuildImageBuilderB8638EC8": {
   "Type": "Custom::ImageBuilder",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A",
      "Arn"
     ]
    },
    "RepoName": {
     "Ref": "CodeBuildImageBuilderRepository9DE3B6F0"
    },
    "ProjectName": {
     "Ref": "CodeBuildImageBuilderCodeBuild38ECAA44"
    },
    "BuildHash": "f84032774d6cd70e4b154460cac04f6b"
   },
   "DependsOn": [
    "buildimagedcc036c8876b451ea2c1552f9e06e9e1LogRetention13129CEB",
    "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A",
    "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837",
    "CodeBuildImageBuilderCodeBuildEventsRoleDefaultPolicyF7AE539D",
    "CodeBuildImageBuilderCodeBuildEventsRole4277A55E",
    "CodeBuildImageBuilderCodeBuild38ECAA44",
    "CodeBuildImageBuilderCodeBuildRoleDefaultPolicy1060FBF9",
    "CodeBuildImageBuilderCodeBuildRoleF8F57ECB",
    "CodeBuildImageBuilderCRPolicyAFC63F28"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CodeBuildImageBuilderBuildSchedule66D9D18A": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Rebuild runner image for ",
       {
        "Ref": "CodeBuildImageBuilderRepository9DE3B6F0"
       }
      ]
     ]
    },
    "ScheduleExpression": "rate(7 days)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "CodeBuildImageBuilderCodeBuild38ECAA44",
        "Arn"
       ]
      },
      "Id": "Target0",
      "RoleArn": {
       "Fn::GetAtt": [
        "CodeBuildImageBuilderCodeBuildEventsRole4277A55E",
        "Arn"
       ]
      }
     }
    ]
   }
  },
  "CodeBuildx64LogsA21ECD59": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CodeBuildx64CodeBuildRole32E5C764": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "CodeBuildx64CodeBuildRoleDefaultPolicy221DA642": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "CodeBuildImageBuilderB8638EC8"
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildx64LogsA21ECD59",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "CodeBuildx64CodeBuild7DC01A1E"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "CodeBuildx64CodeBuild7DC01A1E"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "CodeBuildx64CodeBuild7DC01A1E"
          },
          "-*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CodeBuildx64CodeBuildRoleDefaultPolicy221DA642",
    "Roles": [
     {
      "Ref": "CodeBuildx64CodeBuildRole32E5C764"
     }
    ]
   }
  },
  "CodeBuildx64CodeBuild7DC01A1E": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Select": [
          4,
          {
           "Fn::Split": [
            ":",
            {
             "Ref": "CodeBuildImageBuilderB8638EC8"
            }
           ]
          }
         ]
        },
        ".dkr.ecr.",
        {
         "Fn::Select": [
          3,
          {
           "Fn::Split": [
            ":",
            {
             "Ref": "CodeBuildImageBuilderB8638EC8"
            }
           ]
          }
         ]
        },
        ".",
        {
         "Ref": "AWS::URLSuffix"
        },
        "/",
        {
         "Fn::GetAtt": [
          "CodeBuildImageBuilderB8638EC8",
          "Name"
         ]
        },
        ":latest"
       ]
      ]
     },
     "ImagePullCredentialsType": "SERVICE_ROLE",
     "PrivilegedMode": true,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "CodeBuildx64CodeBuildRole32E5C764",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"env\": {\n    \"variables\": {\n      \"RUNNER_TOKEN\": \"unspecified\",\n      \"RUNNER_NAME\": \"unspecified\",\n      \"RUNNER_LABEL\": \"unspecified\",\n      \"OWNER\": \"unspecified\",\n      \"REPO\": \"unspecified\",\n      \"GITHUB_DOMAIN\": \"github.com\"\n    }\n  },\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &\",\n        \"timeout 15 sh -c \\\"until docker info; do echo .; sleep 1; done\\\"\",\n        \"if [ \\\"${RUNNER_VERSION}\\\" = \\\"latest\\\" ]; then RUNNER_FLAGS=\\\"\\\"; else RUNNER_FLAGS=\\\"--disableupdate\\\"; fi\",\n        \"sudo -Hu runner /home/runner/config.sh --unattended --url \\\"https://${GITHUB_DOMAIN}/${OWNER}/${REPO}\\\" --token \\\"${RUNNER_TOKEN}\\\" --ephemeral --work _work --labels \\\"${RUNNER_LABEL}\\\" ${RUNNER_FLAGS} --name \\\"${RUNNER_NAME}\\\"\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"sudo --preserve-env=AWS_CONTAINER_CREDENTIALS_RELATIVE_URI,AWS_DEFAULT_REGION,AWS_REGION -Hu runner /home/runner/run.sh\"\n      ]\n    }\n  }\n}",
     "Type": "NO_SOURCE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "GitHub Actions self-hosted runner for labels codebuild-x64",
    "EncryptionKey": "alias/aws/s3",
    "LogsConfig": {
     "CloudWatchLogs": {
      "GroupName": {
       "Ref": "CodeBuildx64LogsA21ECD59"
      },
      "Status": "ENABLED"
     }
    },
    "TimeoutInMinutes": 60
   }
  },
  "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ed7d1958d487b4f1bc06546e4a09b9791b2cafa01c969b4916033b6b615ffbb8.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837",
      "Arn"
     ]
    },
    "Description": "Custom resource handler that triggers CodeBuild to build runner images, and cleans-up images on deletion",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Timeout": 180
   },
   "DependsOn": [
    "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837"
   ]
  },
  "buildimagedcc036c8876b451ea2c1552f9e06e9e1LogRetention13129CEB": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "CodeBuildImageBuilderarmRepositoryE967421B": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "ImageScanningConfiguration": {
     "ScanOnPush": true
    },
    "ImageTagMutability": "MUTABLE",
    "LifecyclePolicy": {
     "LifecyclePolicyText": "{\"rules\":[{\"rulePriority\":1,\"description\":\"Remove untagged images that have been replaced by CodeBuild\",\"selection\":{\"tagStatus\":\"untagged\",\"countType\":\"sinceImagePushed\",\"countNumber\":1,\"countUnit\":\"days\"},\"action\":{\"type\":\"expire\"}}]}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CodeBuildImageBuilderarmLogs5A60CB81": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CodeBuildImageBuilderarmCodeBuildRoleEF082AD2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "CodeBuildImageBuilderarmCodeBuildRoleDefaultPolicyB642F141": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/c521fa041f1b5714edf8fab8f33b2c6e7fa2c95cb57217bdb0a663d2245a28d6.zip"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildImageBuilderarmLogs5A60CB81",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "CodeBuildImageBuilderarmCodeBuildBFF1CF57"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "CodeBuildImageBuilderarmCodeBuildBFF1CF57"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "CodeBuildImageBuilderarmCodeBuildBFF1CF57"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildImageBuilderarmRepositoryE967421B",
         "Arn"
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ecr:PutImage",
        "ecr:InitiateLayerUpload",
        "ecr:UploadLayerPart",
        "ecr:CompleteLayerUpload"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildImageBuilderarmRepositoryE967421B",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CodeBuildImageBuilderarmCodeBuildRoleDefaultPolicyB642F141",
    "Roles": [
     {
      "Ref": "CodeBuildImageBuilderarmCodeBuildRoleEF082AD2"
     }
    ]
   }
  },
  "CodeBuildImageBuilderarmCodeBuildBFF1CF57": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/amazonlinux2-aarch64-standard:2.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": true,
     "Type": "ARM_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "CodeBuildImageBuilderarmCodeBuildRoleEF082AD2",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": {
      "Fn::Join": [
       "",
       [
        "{\n  \"version\": \"0.2\",\n  \"env\": {\n    \"variables\": {\n      \"REPO_ARN\": \"",
        {
         "Fn::GetAtt": [
          "CodeBuildImageBuilderarmRepositoryE967421B",
          "Arn"
         ]
        },
        "\",\n      \"REPO_URI\": \"",
        {
         "Fn::Select": [
          4,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::GetAtt": [
              "CodeBuildImageBuilderarmRepositoryE967421B",
              "Arn"
             ]
            }
           ]
          }
         ]
        },
        ".dkr.ecr.",
        {
         "Fn::Select": [
          3,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::GetAtt": [
              "CodeBuildImageBuilderarmRepositoryE967421B",
              "Arn"
             ]
            }
           ]
          }
         ]
        },
        ".",
        {
         "Ref": "AWS::URLSuffix"
        },
        "/",
        {
         "Ref": "CodeBuildImageBuilderarmRepositoryE967421B"
        },
        "\",\n      \"STACK_ID\": \"unspecified\",\n      \"REQUEST_ID\": \"unspecified\",\n      \"LOGICAL_RESOURCE_ID\": \"unspecified\",\n      \"RESPONSE_URL\": \"unspecified\",\n      \"RUNNER_VERSION\": \"latest\"\n    }\n  },\n  \"phases\": {\n    \"pre_build\": {\n      \"commands\": [\n        \"mkdir -p extra_certs\",\n        \"$(aws ecr get-login --no-include-email --region \\\"$AWS_DEFAULT_REGION\\\")\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"docker build . -t \\\"$REPO_URI\\\"  --build-arg RUNNER_VERSION=\\\"latest\\\"\",\n        \"docker push \\\"$REPO_URI\\\"\"\n      ]\n    },\n    \"post_build\": {\n      \"commands\": [\n        \"STATUS=\\\"SUCCESS\\\"\",\n        \"if [ $CODEBUILD_BUILD_SUCCEEDING -ne 1 ]; then STATUS=\\\"FAILED\\\"; fi\",\n        \"cat <<EOF > /tmp/payload.json\\n{\\n  \\\"StackId\\\": \\\"$STACK_ID\\\",\\n  \\\"RequestId\\\": \\\"$REQUEST_ID\\\",\\n  \\\"LogicalResourceId\\\": \\\"$LOGICAL_RESOURCE_ID\\\",\\n  \\\"PhysicalResourceId\\\": \\\"$REPO_ARN\\\",\\n  \\\"Status\\\": \\\"$STATUS\\\",\\n  \\\"Reason\\\": \\\"See logs in ",
        {
         "Ref": "CodeBuildImageBuilderarmLogs5A60CB81"
        },
        "/$CODEBUILD_LOG_PATH (deploy again with 'cdk deploy -R' or logRemovalPolicy=RemovalPolicy.RETAIN if they are already deleted)\\\",\\n  \\\"Data\\\": {\\\"Name\\\": \\\"",
        {
         "Ref": "CodeBuildImageBuilderarmRepositoryE967421B"
        },
        "\\\"}\\n}\\nEOF\",\n        \"if [ \\\"$RESPONSE_URL\\\" != \\\"unspecified\\\" ]; then jq . /tmp/payload.json; curl -fsSL -X PUT -H \\\"Content-Type:\\\" -d \\\"@/tmp/payload.json\\\" \\\"$RESPONSE_URL\\\"; fi\"\n      ]\n    }\n  }\n}"
       ]
      ]
     },
     "Location": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
        },
        "/c521fa041f1b5714edf8fab8f33b2c6e7fa2c95cb57217bdb0a663d2245a28d6.zip"
       ]
      ]
     },
     "Type": "S3"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Build docker image for self-hosted GitHub runner github-runners-test/CodeBuild Image Builder arm (Linux/ARM64)",
    "EncryptionKey": "alias/aws/s3",
    "LogsConfig": {
     "CloudWatchLogs": {
      "GroupName": {
       "Ref": "CodeBuildImageBuilderarmLogs5A60CB81"
      },
      "Status": "ENABLED"
     }
    },
    "TimeoutInMinutes": 60
   }
  },
  "CodeBuildImageBuilderarmCodeBuildEventsRole5ADCAD89": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "CodeBuildImageBuilderarmCodeBuildEventsRoleDefaultPolicyEA24770D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codebuild:StartBuild",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildImageBuilderarmCodeBuildBFF1CF57",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CodeBuildImageBuilderarmCodeBuildEventsRoleDefaultPolicyEA24770D",
    "Roles": [
     {
      "Ref": "CodeBuildImageBuilderarmCodeBuildEventsRole5ADCAD89"
     }
    ]
   }
  },
  "CodeBuildImageBuilderarmCRPolicy75CB8D91": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codebuild:StartBuild",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildImageBuilderarmCodeBuildBFF1CF57",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchDeleteImage",
        "ecr:ListImages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildImageBuilderarmRepositoryE967421B",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CodeBuildImageBuilderarmCRPolicy75CB8D91",
    "Roles": [
     {
      "Ref": "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837"
     }
    ]
   }
  },
  "CodeBuildImageBuilderarmBuilder755EB37D": {
   "Type": "Custom::ImageBuilder",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A",
      "Arn"
     ]
    },
    "RepoName": {
     "Ref": "CodeBuildImageBuilderarmRepositoryE967421B"
    },
    "ProjectName": {
     "Ref": "CodeBuildImageBuilderarmCodeBuildBFF1CF57"
    },
    "BuildHash": "b9438c08aa22255bdaefe9ec669a80aa"
   },
   "DependsOn": [
    "buildimagedcc036c8876b451ea2c1552f9e06e9e1LogRetention13129CEB",
    "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A",
    "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837",
    "CodeBuildImageBuilderarmCodeBuildEventsRoleDefaultPolicyEA24770D",
    "CodeBuildImageBuilderarmCodeBuildEventsRole5ADCAD89",
    "CodeBuildImageBuilderarmCodeBuildBFF1CF57",
    "CodeBuildImageBuilderarmCodeBuildRoleDefaultPolicyB642F141",
    "CodeBuildImageBuilderarmCodeBuildRoleEF082AD2",
    "CodeBuildImageBuilderarmCRPolicy75CB8D91"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CodeBuildImageBuilderarmBuildSchedule909D75E9": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Rebuild runner image for ",
       {
        "Ref": "CodeBuildImageBuilderarmRepositoryE967421B"
       }
      ]
     ]
    },
    "ScheduleExpression": "rate(7 days)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "CodeBuildImageBuilderarmCodeBuildBFF1CF57",
        "Arn"
       ]
      },
      "Id": "Target0",
      "RoleArn": {
       "Fn::GetAtt": [
        "CodeBuildImageBuilderarmCodeBuildEventsRole5ADCAD89",
        "Arn"
       ]
      }
     }
    ]
   }
  },
  "CodeBuildARMLogs7C7FC5A7": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CodeBuildARMCodeBuildRole74DB4985": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "CodeBuildARMCodeBuildRoleDefaultPolicyFC84CEAE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "CodeBuildImageBuilderarmBuilder755EB37D"
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildARMLogs7C7FC5A7",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "CodeBuildARMCodeBuildC5F301F2"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "CodeBuildARMCodeBuildC5F301F2"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "CodeBuildARMCodeBuildC5F301F2"
          },
          "-*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CodeBuildARMCodeBuildRoleDefaultPolicyFC84CEAE",
    "Roles": [
     {
      "Ref": "CodeBuildARMCodeBuildRole74DB4985"
     }
    ]
   }
  },
  "CodeBuildARMCodeBuildC5F301F2": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Select": [
          4,
          {
           "Fn::Split": [
            ":",
            {
             "Ref": "CodeBuildImageBuilderarmBuilder755EB37D"
            }
           ]
          }
         ]
        },
        ".dkr.ecr.",
        {
         "Fn::Select": [
          3,
          {
           "Fn::Split": [
            ":",
            {
             "Ref": "CodeBuildImageBuilderarmBuilder755EB37D"
            }
           ]
          }
         ]
        },
        ".",
        {
         "Ref": "AWS::URLSuffix"
        },
        "/",
        {
         "Fn::GetAtt": [
          "CodeBuildImageBuilderarmBuilder755EB37D",
          "Name"
         ]
        },
        ":latest"
       ]
      ]
     },
     "ImagePullCredentialsType": "SERVICE_ROLE",
     "PrivilegedMode": true,
     "Type": "ARM_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "CodeBuildARMCodeBuildRole74DB4985",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"env\": {\n    \"variables\": {\n      \"RUNNER_TOKEN\": \"unspecified\",\n      \"RUNNER_NAME\": \"unspecified\",\n      \"RUNNER_LABEL\": \"unspecified\",\n      \"OWNER\": \"unspecified\",\n      \"REPO\": \"unspecified\",\n      \"GITHUB_DOMAIN\": \"github.com\"\n    }\n  },\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &\",\n        \"timeout 15 sh -c \\\"until docker info; do echo .; sleep 1; done\\\"\",\n        \"if [ \\\"${RUNNER_VERSION}\\\" = \\\"latest\\\" ]; then RUNNER_FLAGS=\\\"\\\"; else RUNNER_FLAGS=\\\"--disableupdate\\\"; fi\",\n        \"sudo -Hu runner /home/runner/config.sh --unattended --url \\\"https://${GITHUB_DOMAIN}/${OWNER}/${REPO}\\\" --token \\\"${RUNNER_TOKEN}\\\" --ephemeral --work _work --labels \\\"${RUNNER_LABEL}\\\" ${RUNNER_FLAGS} --name \\\"${RUNNER_NAME}\\\"\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"sudo --preserve-env=AWS_CONTAINER_CREDENTIALS_RELATIVE_URI,AWS_DEFAULT_REGION,AWS_REGION -Hu runner /home/runner/run.sh\"\n      ]\n    }\n  }\n}",
     "Type": "NO_SOURCE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "GitHub Actions self-hosted runner for labels codebuild,linux,arm64",
    "EncryptionKey": "alias/aws/s3",
    "LogsConfig": {
     "CloudWatchLogs": {
      "GroupName": {
       "Ref": "CodeBuildARMLogs7C7FC5A7"
      },
      "Status": "ENABLED"
     }
    },
    "TimeoutInMinutes": 60
   }
  },
  "CodeBuildWindowsLogsF4DD93A5": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CodeBuildWindowsCodeBuildRoleDC93697E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "CodeBuildWindowsCodeBuildRoleDefaultPolicyA932AC4D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Select": [
            0,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::Select": [
                1,
                {
                 "Fn::Split": [
                  "/",
                  {
                   "Fn::GetAtt": [
                    "WindowsImageBuilderImage7065BB07",
                    "ImageUri"
                   ]
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildWindowsLogsF4DD93A5",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "CodeBuildWindowsCodeBuildC39F35C1"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "CodeBuildWindowsCodeBuildC39F35C1"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "CodeBuildWindowsCodeBuildC39F35C1"
          },
          "-*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CodeBuildWindowsCodeBuildRoleDefaultPolicyA932AC4D",
    "Roles": [
     {
      "Ref": "CodeBuildWindowsCodeBuildRoleDC93697E"
     }
    ]
   }
  },
  "CodeBuildWindowsCodeBuildC39F35C1": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_MEDIUM",
     "Image": {
      "Fn::Join": [
       "",
       [
        {
         "Ref": "AWS::AccountId"
        },
        ".dkr.ecr.",
        {
         "Ref": "AWS::Region"
        },
        ".",
        {
         "Ref": "AWS::URLSuffix"
        },
        "/",
        {
         "Fn::Select": [
          0,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::Select": [
              1,
              {
               "Fn::Split": [
                "/",
                {
                 "Fn::GetAtt": [
                  "WindowsImageBuilderImage7065BB07",
                  "ImageUri"
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         ]
        },
        ":latest"
       ]
      ]
     },
     "ImagePullCredentialsType": "SERVICE_ROLE",
     "PrivilegedMode": false,
     "Type": "WINDOWS_SERVER_2019_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "CodeBuildWindowsCodeBuildRoleDC93697E",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"env\": {\n    \"variables\": {\n      \"RUNNER_TOKEN\": \"unspecified\",\n      \"RUNNER_NAME\": \"unspecified\",\n      \"RUNNER_LABEL\": \"unspecified\",\n      \"OWNER\": \"unspecified\",\n      \"REPO\": \"unspecified\",\n      \"GITHUB_DOMAIN\": \"github.com\"\n    }\n  },\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"cd \\\\actions\",\n        \"if (${Env:RUNNER_VERSION} -eq \\\"latest\\\") { $RunnerFlags = \\\"\\\" } else { $RunnerFlags = \\\"--disableupdate\\\" }\",\n        \"./config.cmd --unattended --url \\\"https://${Env:GITHUB_DOMAIN}/${Env:OWNER}/${Env:REPO}\\\" --token \\\"${Env:RUNNER_TOKEN}\\\" --ephemeral --work _work --labels \\\"${Env:RUNNER_LABEL}\\\" ${RunnerFlags} --name \\\"${Env:RUNNER_NAME}\\\"\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"cd \\\\actions\",\n        \"./run.cmd\"\n      ]\n    }\n  }\n}",
     "Type": "NO_SOURCE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "GitHub Actions self-hosted runner for labels codebuild,windows,x64",
    "EncryptionKey": "alias/aws/s3",
    "LogsConfig": {
     "CloudWatchLogs": {
      "GroupName": {
       "Ref": "CodeBuildWindowsLogsF4DD93A5"
      },
      "Status": "ENABLED"
     }
    },
    "TimeoutInMinutes": 60
   }
  },
  "LambdaImageDigestReaderE0842577": {
   "Type": "Custom::EcrImageDigest",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"ECR\",\"action\":\"describeImages\",\"parameters\":{\"repositoryName\":\"",
       {
        "Fn::GetAtt": [
         "LambdaImageBuilderx64Builder42F384AF",
         "Name"
        ]
       },
       "\",\"imageIds\":[{\"imageTag\":\"latest\"}]},\"physicalResourceId\":{\"id\":\"ImageDigest\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"ECR\",\"action\":\"describeImages\",\"parameters\":{\"repositoryName\":\"",
       {
        "Fn::GetAtt": [
         "LambdaImageBuilderx64Builder42F384AF",
         "Name"
        ]
       },
       "\",\"imageIds\":[{\"imageTag\":\"latest\"}]},\"physicalResourceId\":{\"id\":\"ImageDigest\"}}"
      ]
     ]
    },
    "Delete": "{\"service\":\"fake\",\"action\":\"fake\",\"parameters\":{\"version\":1,\"labels\":[\"lambda\",\"x64\"],\"architecture\":\"x86_64\"}}",
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "LambdaImageDigestReaderCustomResourcePolicyE8E146E6"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "LambdaImageDigestReaderCustomResourcePolicyE8E146E6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ecr:DescribeImages",
       "Effect": "Allow",
       "Resource": {
        "Ref": "LambdaImageBuilderx64Builder42F384AF"
       }
      },
      {
       "Action": "fake:Fake",
       "Effect": "Allow",
       "Resource": {
        "Ref": "LambdaImageBuilderx64Builder42F384AF"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaImageDigestReaderCustomResourcePolicyE8E146E6",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   }
  },
  "LambdaFunctionServiceRoleB1826A50": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "LambdaFunction9233991D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Select": [
          4,
          {
           "Fn::Split": [
            ":",
            {
             "Ref": "LambdaImageBuilderx64Builder42F384AF"
            }
           ]
          }
         ]
        },
        ".dkr.ecr.",
        {
         "Fn::Select": [
          3,
          {
           "Fn::Split": [
            ":",
            {
             "Ref": "LambdaImageBuilderx64Builder42F384AF"
            }
           ]
          }
         ]
        },
        ".",
        {
         "Ref": "AWS::URLSuffix"
        },
        "/",
        {
         "Fn::GetAtt": [
          "LambdaImageBuilderx64Builder42F384AF",
          "Name"
         ]
        },
        "@sha256:",
        {
         "Fn::Select": [
          1,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::GetAtt": [
              "LambdaImageDigestReaderE0842577",
              "imageDetails.0.imageDigest"
             ]
            }
           ]
          }
         ]
        }
       ]
      ]
     }
    },
    "Role": {
     "Fn::GetAtt": [
      "LambdaFunctionServiceRoleB1826A50",
      "Arn"
     ]
    },
    "Architectures": [
     "x86_64"
    ],
    "Description": "GitHub Actions runner for labels lambda,x64",
    "EphemeralStorage": {
     "Size": 10240
    },
    "MemorySize": 2048,
    "PackageType": "Image",
    "Timeout": 900
   },
   "DependsOn": [
    "LambdaFunctionServiceRoleB1826A50"
   ]
  },
  "LambdaFunctionLogRetentionB6D78D6D": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "LambdaFunction9233991D"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e845402ce43b66fc6f20df4a239f20f8662eb6c7f920b94cf6542dd0e64ce0f7.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Timeout": 120
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ]
  },
  "AWS679f53fac002430cb0da5b7982bd2287LogRetentionCE72797A": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "AWS679f53fac002430cb0da5b7982bd22872D164C4C"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "updatelambdadcc036c8876b451ea2c1552f9e06e9e1ServiceRoleE163ADCA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "updatelambdadcc036c8876b451ea2c1552f9e06e9e1ServiceRoleDefaultPolicy1EF644A6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:UpdateFunctionCode",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaFunction9233991D",
         "Arn"
        ]
       }
      },
      {
       "Action": "lambda:UpdateFunctionCode",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaARMFunctionDD4B5FF7",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "updatelambdadcc036c8876b451ea2c1552f9e06e9e1ServiceRoleDefaultPolicy1EF644A6",
    "Roles": [
     {
      "Ref": "updatelambdadcc036c8876b451ea2c1552f9e06e9e1ServiceRoleE163ADCA"
     }
    ]
   }
  },
  "updatelambdadcc036c8876b451ea2c1552f9e06e9e180810ABA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e15a9ac068f13d6257477a7ba01093c6d3d615feb842dce57dbab77a5fff07ac.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "updatelambdadcc036c8876b451ea2c1552f9e06e9e1ServiceRoleE163ADCA",
      "Arn"
     ]
    },
    "Description": "Function that updates a GitHub Actions runner function with the latest image digest after the image has been rebuilt",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Timeout": 900
   },
   "DependsOn": [
    "updatelambdadcc036c8876b451ea2c1552f9e06e9e1ServiceRoleDefaultPolicy1EF644A6",
    "updatelambdadcc036c8876b451ea2c1552f9e06e9e1ServiceRoleE163ADCA"
   ]
  },
  "updatelambdadcc036c8876b451ea2c1552f9e06e9e1LogRetentionEF9C436F": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "updatelambdadcc036c8876b451ea2c1552f9e06e9e180810ABA"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "LambdaImageBuilderzRepository7C7AD146": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "ImageScanningConfiguration": {
     "ScanOnPush": true
    },
    "ImageTagMutability": "MUTABLE",
    "LifecyclePolicy": {
     "LifecyclePolicyText": "{\"rules\":[{\"rulePriority\":1,\"description\":\"Remove untagged images that have been replaced by CodeBuild\",\"selection\":{\"tagStatus\":\"untagged\",\"countType\":\"sinceImagePushed\",\"countNumber\":1,\"countUnit\":\"days\"},\"action\":{\"type\":\"expire\"}}]}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "LambdaImageBuilderzLogsC9FB42C8": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "LambdaImageBuilderzCodeBuildRole2CC96DA0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "LambdaImageBuilderzCodeBuildRoleDefaultPolicy30B67E5A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/8c55ea107f6e2196a0031415c01f5379272fd74e2e444a90fee3c356b9ecf5a2.zip"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaImageBuilderzLogsC9FB42C8",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "LambdaImageBuilderzCodeBuild73AB6718"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "LambdaImageBuilderzCodeBuild73AB6718"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "LambdaImageBuilderzCodeBuild73AB6718"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaImageBuilderzRepository7C7AD146",
         "Arn"
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ecr:PutImage",
        "ecr:InitiateLayerUpload",
        "ecr:UploadLayerPart",
        "ecr:CompleteLayerUpload"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaImageBuilderzRepository7C7AD146",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaImageBuilderzCodeBuildRoleDefaultPolicy30B67E5A",
    "Roles": [
     {
      "Ref": "LambdaImageBuilderzCodeBuildRole2CC96DA0"
     }
    ]
   }
  },
  "LambdaImageBuilderzCodeBuild73AB6718": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/amazonlinux2-aarch64-standard:2.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": true,
     "Type": "ARM_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "LambdaImageBuilderzCodeBuildRole2CC96DA0",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": {
      "Fn::Join": [
       "",
       [
        "{\n  \"version\": \"0.2\",\n  \"env\": {\n    \"variables\": {\n      \"REPO_ARN\": \"",
        {
         "Fn::GetAtt": [
          "LambdaImageBuilderzRepository7C7AD146",
          "Arn"
         ]
        },
        "\",\n      \"REPO_URI\": \"",
        {
         "Fn::Select": [
          4,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::GetAtt": [
              "LambdaImageBuilderzRepository7C7AD146",
              "Arn"
             ]
            }
           ]
          }
         ]
        },
        ".dkr.ecr.",
        {
         "Fn::Select": [
          3,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::GetAtt": [
              "LambdaImageBuilderzRepository7C7AD146",
              "Arn"
             ]
            }
           ]
          }
         ]
        },
        ".",
        {
         "Ref": "AWS::URLSuffix"
        },
        "/",
        {
         "Ref": "LambdaImageBuilderzRepository7C7AD146"
        },
        "\",\n      \"STACK_ID\": \"unspecified\",\n      \"REQUEST_ID\": \"unspecified\",\n      \"LOGICAL_RESOURCE_ID\": \"unspecified\",\n      \"RESPONSE_URL\": \"unspecified\",\n      \"RUNNER_VERSION\": \"latest\"\n    }\n  },\n  \"phases\": {\n    \"pre_build\": {\n      \"commands\": [\n        \"mkdir -p extra_certs\",\n        \"$(aws ecr get-login --no-include-email --region \\\"$AWS_DEFAULT_REGION\\\")\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"docker build . -t \\\"$REPO_URI\\\"  --build-arg RUNNER_VERSION=\\\"latest\\\"\",\n        \"docker push \\\"$REPO_URI\\\"\"\n      ]\n    },\n    \"post_build\": {\n      \"commands\": [\n        \"STATUS=\\\"SUCCESS\\\"\",\n        \"if [ $CODEBUILD_BUILD_SUCCEEDING -ne 1 ]; then STATUS=\\\"FAILED\\\"; fi\",\n        \"cat <<EOF > /tmp/payload.json\\n{\\n  \\\"StackId\\\": \\\"$STACK_ID\\\",\\n  \\\"RequestId\\\": \\\"$REQUEST_ID\\\",\\n  \\\"LogicalResourceId\\\": \\\"$LOGICAL_RESOURCE_ID\\\",\\n  \\\"PhysicalResourceId\\\": \\\"$REPO_ARN\\\",\\n  \\\"Status\\\": \\\"$STATUS\\\",\\n  \\\"Reason\\\": \\\"See logs in ",
        {
         "Ref": "LambdaImageBuilderzLogsC9FB42C8"
        },
        "/$CODEBUILD_LOG_PATH (deploy again with 'cdk deploy -R' or logRemovalPolicy=RemovalPolicy.RETAIN if they are already deleted)\\\",\\n  \\\"Data\\\": {\\\"Name\\\": \\\"",
        {
         "Ref": "LambdaImageBuilderzRepository7C7AD146"
        },
        "\\\"}\\n}\\nEOF\",\n        \"if [ \\\"$RESPONSE_URL\\\" != \\\"unspecified\\\" ]; then jq . /tmp/payload.json; curl -fsSL -X PUT -H \\\"Content-Type:\\\" -d \\\"@/tmp/payload.json\\\" \\\"$RESPONSE_URL\\\"; fi\"\n      ]\n    }\n  }\n}"
       ]
      ]
     },
     "Location": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
        },
        "/8c55ea107f6e2196a0031415c01f5379272fd74e2e444a90fee3c356b9ecf5a2.zip"
       ]
      ]
     },
     "Type": "S3"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Build docker image for self-hosted GitHub runner github-runners-test/Lambda Image Builderz (Linux/ARM64)",
    "EncryptionKey": "alias/aws/s3",
    "LogsConfig": {
     "CloudWatchLogs": {
      "GroupName": {
       "Ref": "LambdaImageBuilderzLogsC9FB42C8"
      },
      "Status": "ENABLED"
     }
    },
    "TimeoutInMinutes": 60
   }
  },
  "LambdaImageBuilderzCodeBuildEventsRoleE9E50664": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "LambdaImageBuilderzCodeBuildEventsRoleDefaultPolicyE0DB8E23": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codebuild:StartBuild",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaImageBuilderzCodeBuild73AB6718",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaImageBuilderzCodeBuildEventsRoleDefaultPolicyE0DB8E23",
    "Roles": [
     {
      "Ref": "LambdaImageBuilderzCodeBuildEventsRoleE9E50664"
     }
    ]
   }
  },
  "LambdaImageBuilderzCRPolicyC9B09855": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codebuild:StartBuild",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaImageBuilderzCodeBuild73AB6718",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchDeleteImage",
        "ecr:ListImages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaImageBuilderzRepository7C7AD146",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaImageBuilderzCRPolicyC9B09855",
    "Roles": [
     {
      "Ref": "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837"
     }
    ]
   }
  },
  "LambdaImageBuilderzBuilder235DD147": {
   "Type": "Custom::ImageBuilder",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A",
      "Arn"
     ]
    },
    "RepoName": {
     "Ref": "LambdaImageBuilderzRepository7C7AD146"
    },
    "ProjectName": {
     "Ref": "LambdaImageBuilderzCodeBuild73AB6718"
    },
    "BuildHash": "d6bdc06d728db2eea9d3dfc09adc2865"
   },
   "DependsOn": [
    "buildimagedcc036c8876b451ea2c1552f9e06e9e1LogRetention13129CEB",
    "buildimagedcc036c8876b451ea2c1552f9e06e9e173B4162A",
    "buildimagedcc036c8876b451ea2c1552f9e06e9e1ServiceRoleC3DE4837",
    "LambdaImageBuilderzCodeBuildEventsRoleDefaultPolicyE0DB8E23",
    "LambdaImageBuilderzCodeBuildEventsRoleE9E50664",
    "LambdaImageBuilderzCodeBuild73AB6718",
    "LambdaImageBuilderzCodeBuildRoleDefaultPolicy30B67E5A",
    "LambdaImageBuilderzCodeBuildRole2CC96DA0",
    "LambdaImageBuilderzCRPolicyC9B09855"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "LambdaImageBuilderzBuildSchedule81F79A6A": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Rebuild runner image for ",
       {
        "Ref": "LambdaImageBuilderzRepository7C7AD146"
       }
      ]
     ]
    },
    "ScheduleExpression": "rate(7 days)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "LambdaImageBuilderzCodeBuild73AB6718",
        "Arn"
       ]
      },
      "Id": "Target0",
      "RoleArn": {
       "Fn::GetAtt": [
        "LambdaImageBuilderzCodeBuildEventsRoleE9E50664",
        "Arn"
       ]
      }
     }
    ]
   }
  },
  "LambdaImageBuilderzDependableImagePushrule2E3269CC": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Update GitHub Actions runner Lambda on ECR image push",
    "EventPattern": {
     "detail-type": [
      "ECR Image Action"
     ],
     "detail": {
      "action-type": [
       "PUSH"
      ],
      "repository-name": [
       {
        "Fn::GetAtt": [
         "LambdaImageBuilderzBuilder235DD147",
         "Name"
        ]
       }
      ],
      "image-tag": [
       "latest"
      ],
      "result": [
       "SUCCESS"
      ]
     },
     "source": [
      "aws.ecr"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "updatelambdadcc036c8876b451ea2c1552f9e06e9e180810ABA",
        "Arn"
       ]
      },
      "Id": "Target0",
      "Input": {
       "Fn::Join": [
        "",
        [
         "{\"lambdaName\":\"",
         {
          "Ref": "LambdaARMFunctionDD4B5FF7"
         },
         "\",\"repositoryUri\":\"",
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             ":",
             {
              "Ref": "LambdaImageBuilderzBuilder235DD147"
             }
            ]
           }
          ]
         },
         ".dkr.ecr.",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             ":",
             {
              "Ref": "LambdaImageBuilderzBuilder235DD147"
             }
            ]
           }
          ]
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/",
         {
          "Fn::GetAtt": [
           "LambdaImageBuilderzBuilder235DD147",
           "Name"
          ]
         },
         "\",\"repositoryTag\":\"latest\"}"
        ]
       ]
      }
     }
    ]
   }
  },
  "LambdaImageBuilderzDependableImagePushruleAllowEventRulegithubrunnerstestupdatelambdadcc036c8876b451ea2c1552f9e06e9e17433A98ECD865F34": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "updatelambdadcc036c8876b451ea2c1552f9e06e9e180810ABA",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "LambdaImageBuilderzDependableImagePushrule2E3269CC",
      "Arn"
     ]
    }
   }
  },
  "LambdaARMImageDigestReaderF3DD55C4": {
   "Type": "Custom::EcrImageDigest",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"ECR\",\"action\":\"describeImages\",\"parameters\":{\"repositoryName\":\"",
       {
        "Fn::GetAtt": [
         "LambdaImageBuilderzBuilder235DD147",
         "Name"
        ]
       },
       "\",\"imageIds\":[{\"imageTag\":\"latest\"}]},\"physicalResourceId\":{\"id\":\"ImageDigest\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"ECR\",\"action\":\"describeImages\",\"parameters\":{\"repositoryName\":\"",
       {
        "Fn::GetAtt": [
         "LambdaImageBuilderzBuilder235DD147",
         "Name"
        ]
       },
       "\",\"imageIds\":[{\"imageTag\":\"latest\"}]},\"physicalResourceId\":{\"id\":\"ImageDigest\"}}"
      ]
     ]
    },
    "Delete": "{\"service\":\"fake\",\"action\":\"fake\",\"parameters\":{\"version\":1,\"labels\":[\"lambda\",\"arm64\"],\"architecture\":\"arm64\"}}",
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "LambdaARMImageDigestReaderCustomResourcePolicy2980B36A"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "LambdaARMImageDigestReaderCustomResourcePolicy2980B36A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ecr:DescribeImages",
       "Effect": "Allow",
       "Resource": {
        "Ref": "LambdaImageBuilderzBuilder235DD147"
       }
      },
      {
       "Action": "fake:Fake",
       "Effect": "Allow",
       "Resource": {
        "Ref": "LambdaImageBuilderzBuilder235DD147"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaARMImageDigestReaderCustomResourcePolicy2980B36A",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   }
  },
  "LambdaARMFunctionServiceRole136069A0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "LambdaARMFunctionDD4B5FF7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Select": [
          4,
          {
           "Fn::Split": [
            ":",
            {
             "Ref": "LambdaImageBuilderzBuilder235DD147"
            }
           ]
          }
         ]
        },
        ".dkr.ecr.",
        {
         "Fn::Select": [
          3,
          {
           "Fn::Split": [
            ":",
            {
             "Ref": "LambdaImageBuilderzBuilder235DD147"
            }
           ]
          }
         ]
        },
        ".",
        {
         "Ref": "AWS::URLSuffix"
        },
        "/",
        {
         "Fn::GetAtt": [
          "LambdaImageBuilderzBuilder235DD147",
          "Name"
         ]
        },
        "@sha256:",
        {
         "Fn::Select": [
          1,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::GetAtt": [
              "LambdaARMImageDigestReaderF3DD55C4",
              "imageDetails.0.imageDigest"
             ]
            }
           ]
          }
         ]
        }
       ]
      ]
     }
    },
    "Role": {
     "Fn::GetAtt": [
      "LambdaARMFunctionServiceRole136069A0",
      "Arn"
     ]
    },
    "Architectures": [
     "arm64"
    ],
    "Description": "GitHub Actions runner for labels lambda,arm64",
    "EphemeralStorage": {
     "Size": 10240
    },
    "MemorySize": 2048,
    "PackageType": "Image",
    "Timeout": 900
   },
   "DependsOn": [
    "LambdaARMFunctionServiceRole136069A0"
   ]
  },
  "LambdaARMFunctionLogRetention67E9FEF8": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "LambdaARMFunctionDD4B5FF7"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "FargatesecuritygroupAFCAFD34": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "github-runners-test/Fargate/security group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "FargatetaskTaskRoleEFFCDAF8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "FargatetaskFDFF3302": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Command": [
       "sh",
       "-c",
       "./config.sh --unattended --url \"https://$GITHUB_DOMAIN/$OWNER/$REPO\" --token \"$RUNNER_TOKEN\" --ephemeral --work _work --labels \"$RUNNER_LABEL\" --disableupdate --name \"$RUNNER_NAME\" && ./run.sh"
      ],
      "Essential": true,
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             ":",
             {
              "Ref": "FargatebuilderBuilder0834CD0B"
             }
            ]
           }
          ]
         },
         ".dkr.ecr.",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             ":",
             {
              "Ref": "FargatebuilderBuilder0834CD0B"
             }
            ]
           }
          ]
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/",
         {
          "Fn::GetAtt": [
           "FargatebuilderBuilder0834CD0B",
           "Name"
          ]
         },
         ":latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "FargatelogsCB753638"
        },
        "awslogs-stream-prefix": "runner",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "runner"
     }
    ],
    "Cpu": "256",
    "EphemeralStorage": {
     "SizeInGiB": 25
    },
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "FargatetaskExecutionRole88A42307",
      "Arn"
     ]
    },
    "Family": "githubrunnerstestFargatetaskA755E0CE",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "RuntimePlatform": {
     "CpuArchitecture": "X86_64",
     "OperatingSystemFamily": "LINUX"
    },
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "FargatetaskTaskRoleEFFCDAF8",
      "Arn"
     ]
    }
   }
  },
  "FargatetaskExecutionRole88A42307": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "FargatetaskExecutionRoleDefaultPolicy72A5073A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "FargatebuilderBuilder0834CD0B"
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargatelogsCB753638",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "FargatetaskExecutionRoleDefaultPolicy72A5073A",
    "Roles": [
     {
      "Ref": "FargatetaskExecutionRole88A42307"
     }
    ]
   }
  },
  "FargatelogsCB753638": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "Fargatex64spotsecuritygroup2A9F4299": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "github-runners-test/Fargate-x64-spot/security group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "Fargatex64spottaskTaskRole02893C25": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "Fargatex64spottask4C8B023D": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Command": [
       "sh",
       "-c",
       "./config.sh --unattended --url \"https://$GITHUB_DOMAIN/$OWNER/$REPO\" --token \"$RUNNER_TOKEN\" --ephemeral --work _work --labels \"$RUNNER_LABEL\" --disableupdate --name \"$RUNNER_NAME\" && ./run.sh"
      ],
      "Essential": true,
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             ":",
             {
              "Ref": "FargatebuilderBuilder0834CD0B"
             }
            ]
           }
          ]
         },
         ".dkr.ecr.",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             ":",
             {
              "Ref": "FargatebuilderBuilder0834CD0B"
             }
            ]
           }
          ]
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/",
         {
          "Fn::GetAtt": [
           "FargatebuilderBuilder0834CD0B",
           "Name"
          ]
         },
         ":latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "Fargatex64spotlogs0BCF618B"
        },
        "awslogs-stream-prefix": "runner",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "runner"
     }
    ],
    "Cpu": "256",
    "EphemeralStorage": {
     "SizeInGiB": 25
    },
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "Fargatex64spottaskExecutionRoleD0E0B7D6",
      "Arn"
     ]
    },
    "Family": "githubrunnerstestFargatex64spottask7B2E300E",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "RuntimePlatform": {
     "CpuArchitecture": "X86_64",
     "OperatingSystemFamily": "LINUX"
    },
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "Fargatex64spottaskTaskRole02893C25",
      "Arn"
     ]
    }
   }
  },
  "Fargatex64spottaskExecutionRoleD0E0B7D6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "Fargatex64spottaskExecutionRoleDefaultPolicyA51A696A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "FargatebuilderBuilder0834CD0B"
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "Fargatex64spotlogs0BCF618B",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "Fargatex64spottaskExecutionRoleDefaultPolicyA51A696A",
    "Roles": [
     {
      "Ref": "Fargatex64spottaskExecutionRoleD0E0B7D6"
     }
    ]
   }
  },
  "Fargatex64spotlogs0BCF618B": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "Fargatearm64securitygroup08ABAD9E": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "github-runners-test/Fargate-arm64/security group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "Fargatearm64taskTaskRoleD3C2CD58": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "Fargatearm64taskECD67399": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Command": [
       "sh",
       "-c",
       "./config.sh --unattended --url \"https://$GITHUB_DOMAIN/$OWNER/$REPO\" --token \"$RUNNER_TOKEN\" --ephemeral --work _work --labels \"$RUNNER_LABEL\" --disableupdate --name \"$RUNNER_NAME\" && ./run.sh"
      ],
      "Essential": true,
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             ":",
             {
              "Ref": "FargatebuilderarmBuilder48D1AF5A"
             }
            ]
           }
          ]
         },
         ".dkr.ecr.",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             ":",
             {
              "Ref": "FargatebuilderarmBuilder48D1AF5A"
             }
            ]
           }
          ]
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/",
         {
          "Fn::GetAtt": [
           "FargatebuilderarmBuilder48D1AF5A",
           "Name"
          ]
         },
         ":latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "Fargatearm64logs00171A52"
        },
        "awslogs-stream-prefix": "runner",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "runner"
     }
    ],
    "Cpu": "256",
    "EphemeralStorage": {
     "SizeInGiB": 25
    },
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "Fargatearm64taskExecutionRoleD10B61DC",
      "Arn"
     ]
    },
    "Family": "githubrunnerstestFargatearm64task6B95C05B",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "RuntimePlatform": {
     "CpuArchitecture": "ARM64",
     "OperatingSystemFamily": "LINUX"
    },
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "Fargatearm64taskTaskRoleD3C2CD58",
      "Arn"
     ]
    }
   }
  },
  "Fargatearm64taskExecutionRoleD10B61DC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "Fargatearm64taskExecutionRoleDefaultPolicy0E3D42DB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "FargatebuilderarmBuilder48D1AF5A"
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "Fargatearm64logs00171A52",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "Fargatearm64taskExecutionRoleDefaultPolicy0E3D42DB",
    "Roles": [
     {
      "Ref": "Fargatearm64taskExecutionRoleD10B61DC"
     }
    ]
   }
  },
  "Fargatearm64logs00171A52": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "Fargatearm64spotsecuritygroup20C885E4": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "github-runners-test/Fargate-arm64-spot/security group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "Fargatearm64spottaskTaskRole0F078C81": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "Fargatearm64spottaskD21E60F2": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Command": [
       "sh",
       "-c",
       "./config.sh --unattended --url \"https://$GITHUB_DOMAIN/$OWNER/$REPO\" --token \"$RUNNER_TOKEN\" --ephemeral --work _work --labels \"$RUNNER_LABEL\" --disableupdate --name \"$RUNNER_NAME\" && ./run.sh"
      ],
      "Essential": true,
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             ":",
             {
              "Ref": "FargatebuilderarmBuilder48D1AF5A"
             }
            ]
           }
          ]
         },
         ".dkr.ecr.",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             ":",
             {
              "Ref": "FargatebuilderarmBuilder48D1AF5A"
             }
            ]
           }
          ]
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/",
         {
          "Fn::GetAtt": [
           "FargatebuilderarmBuilder48D1AF5A",
           "Name"
          ]
         },
         ":latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "Fargatearm64spotlogsEFCCEC59"
        },
        "awslogs-stream-prefix": "runner",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "runner"
     }
    ],
    "Cpu": "256",
    "EphemeralStorage": {
     "SizeInGiB": 25
    },
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "Fargatearm64spottaskExecutionRole90E5A05B",
      "Arn"
     ]
    },
    "Family": "githubrunnerstestFargatearm64spottaskF9ADF192",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "RuntimePlatform": {
     "CpuArchitecture": "ARM64",
     "OperatingSystemFamily": "LINUX"
    },
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "Fargatearm64spottaskTaskRole0F078C81",
      "Arn"
     ]
    }
   }
  },
  "Fargatearm64spottaskExecutionRole90E5A05B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "Fargatearm64spottaskExecutionRoleDefaultPolicyB9BB282A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "FargatebuilderarmBuilder48D1AF5A"
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "Fargatearm64spotlogsEFCCEC59",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "Fargatearm64spottaskExecutionRoleDefaultPolicyB9BB282A",
    "Roles": [
     {
      "Ref": "Fargatearm64spottaskExecutionRole90E5A05B"
     }
    ]
   }
  },
  "Fargatearm64spotlogsEFCCEC59": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "FargateWindowssecuritygroupE684A7B0": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "github-runners-test/Fargate-Windows/security group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "FargateWindowstaskTaskRole364508C8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "FargateWindowstask9F9B942D": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Command": [
       "powershell",
       "-Command",
       "cd \\actions ; ./config.cmd --unattended --url \"https://${Env:GITHUB_DOMAIN}/${Env:OWNER}/${Env:REPO}\" --token \"${Env:RUNNER_TOKEN}\" --ephemeral --work _work --labels \"${Env:RUNNER_LABEL}\" --disableupdate --name \"${Env:RUNNER_NAME}\" ; ./run.cmd"
      ],
      "Essential": true,
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "AWS::AccountId"
         },
         ".dkr.ecr.",
         {
          "Ref": "AWS::Region"
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/",
         {
          "Fn::Select": [
           0,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::Select": [
               1,
               {
                "Fn::Split": [
                 "/",
                 {
                  "Fn::GetAtt": [
                   "WindowsImageBuilderImage7065BB07",
                   "ImageUri"
                  ]
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         },
         ":latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "FargateWindowslogs52881DBF"
        },
        "awslogs-stream-prefix": "runner",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "runner"
     }
    ],
    "Cpu": "1024",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "FargateWindowstaskExecutionRoleEE562927",
      "Arn"
     ]
    },
    "Family": "githubrunnerstestFargateWindowstask95BB2245",
    "Memory": "2048",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "RuntimePlatform": {
     "CpuArchitecture": "X86_64",
     "OperatingSystemFamily": "WINDOWS_SERVER_2019_CORE"
    },
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "FargateWindowstaskTaskRole364508C8",
      "Arn"
     ]
    }
   }
  },
  "FargateWindowstaskExecutionRoleEE562927": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "FargateWindowstaskExecutionRoleDefaultPolicy2EF7D3FD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Select": [
            0,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::Select": [
                1,
                {
                 "Fn::Split": [
                  "/",
                  {
                   "Fn::GetAtt": [
                    "WindowsImageBuilderImage7065BB07",
                    "ImageUri"
                   ]
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargateWindowslogs52881DBF",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "FargateWindowstaskExecutionRoleDefaultPolicy2EF7D3FD",
    "Roles": [
     {
      "Ref": "FargateWindowstaskExecutionRoleEE562927"
     }
    ]
   }
  },
  "FargateWindowslogs52881DBF": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "EC2LinuxSGF5B89300": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "github-runners-test/EC2 Linux/SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "EC2LinuxRole8B6519A2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "ec2.",
           {
            "Ref": "AWS::URLSuffix"
           }
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     }
    ]
   }
  },
  "EC2LinuxRoleDefaultPolicy1369791B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "states:SendTaskFailure",
        "states:SendTaskSuccess",
        "states:SendTaskHeartbeat"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EC2LinuxLogsC4CD8F14",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EC2LinuxRoleDefaultPolicy1369791B",
    "Roles": [
     {
      "Ref": "EC2LinuxRole8B6519A2"
     }
    ]
   }
  },
  "EC2LinuxLogsC4CD8F14": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "EC2LinuxInstanceProfile2D2BB473": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "EC2LinuxRole8B6519A2"
     }
    ]
   }
  },
  "deleteamidcc036c8876b451ea2c1552f9e06e9e1ServiceRole1CC58A6F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "deleteamidcc036c8876b451ea2c1552f9e06e9e1ServiceRoleDefaultPolicy0C44BF83": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:DescribeLaunchTemplateVersions",
        "ec2:DescribeImages",
        "ec2:DeregisterImage",
        "ec2:DeleteSnapshot"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "deleteamidcc036c8876b451ea2c1552f9e06e9e1ServiceRoleDefaultPolicy0C44BF83",
    "Roles": [
     {
      "Ref": "deleteamidcc036c8876b451ea2c1552f9e06e9e1ServiceRole1CC58A6F"
     }
    ]
   }
  },
  "deleteamidcc036c8876b451ea2c1552f9e06e9e1BE713303": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "75363707e2756a09f31a94eec0a191c8f38b873bd96bf4fd5d21b6c6e7612ba4.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "deleteamidcc036c8876b451ea2c1552f9e06e9e1ServiceRole1CC58A6F",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Timeout": 300
   },
   "DependsOn": [
    "deleteamidcc036c8876b451ea2c1552f9e06e9e1ServiceRoleDefaultPolicy0C44BF83",
    "deleteamidcc036c8876b451ea2c1552f9e06e9e1ServiceRole1CC58A6F"
   ]
  },
  "deleteamidcc036c8876b451ea2c1552f9e06e9e1LogRetention85F808EB": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "deleteamidcc036c8876b451ea2c1552f9e06e9e1BE713303"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "EC2SpotLinuxSG8D846B64": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "github-runners-test/EC2 Spot Linux/SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "EC2SpotLinuxRole86333E5D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "ec2.",
           {
            "Ref": "AWS::URLSuffix"
           }
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     }
    ]
   }
  },
  "EC2SpotLinuxRoleDefaultPolicy061AD1D0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "states:SendTaskFailure",
        "states:SendTaskSuccess",
        "states:SendTaskHeartbeat"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EC2SpotLinuxLogsF78D5F0E",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EC2SpotLinuxRoleDefaultPolicy061AD1D0",
    "Roles": [
     {
      "Ref": "EC2SpotLinuxRole86333E5D"
     }
    ]
   }
  },
  "EC2SpotLinuxLogsF78D5F0E": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "EC2SpotLinuxInstanceProfileB12320D4": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "EC2SpotLinuxRole86333E5D"
     }
    ]
   }
  },
  "AMILinuxarm64BuilderSG94315968": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "github-runners-test/AMI Linux arm64 Builder/SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "AMILinuxarm64BuilderUpgradepackagesandinstallbasicsVersionCD58A101": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-AMILinuxarm64Builder-Upgradepackagesandinstallbasics-29D3C869",
    "VersionedData": {
     "platform": "Linux",
     "data": {
      "name": "Required packages",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecuteBash",
          "inputs": {
           "commands": [
            "set -ex",
            "apt-get update",
            "DEBIAN_FRONTEND=noninteractive apt-get upgrade -y",
            "DEBIAN_FRONTEND=noninteractive apt-get install -y curl sudo jq bash zip unzip iptables software-properties-common ca-certificates",
            "curl -sfLo /tmp/amazon-cloudwatch-agent.deb https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/arm64/latest/amazon-cloudwatch-agent.deb",
            "dpkg -i -E /tmp/amazon-cloudwatch-agent.deb",
            "rm /tmp/amazon-cloudwatch-agent.deb"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install packages required for GitHub Runner and upgrade all packages"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxarm64BuilderUpgradepackagesandinstallbasicsComponentBE33D1FC": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-AMILinuxarm64Builder-Upgradepackagesandinstallbasics-29D3C869",
    "Platform": "Linux",
    "Version": {
     "Ref": "AMILinuxarm64BuilderUpgradepackagesandinstallbasicsVersionCD58A101"
    },
    "Data": "{\"name\":\"Required packages\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecuteBash\",\"inputs\":{\"commands\":[\"set -ex\",\"apt-get update\",\"DEBIAN_FRONTEND=noninteractive apt-get upgrade -y\",\"DEBIAN_FRONTEND=noninteractive apt-get install -y curl sudo jq bash zip unzip iptables software-properties-common ca-certificates\",\"curl -sfLo /tmp/amazon-cloudwatch-agent.deb https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/arm64/latest/amazon-cloudwatch-agent.deb\",\"dpkg -i -E /tmp/amazon-cloudwatch-agent.deb\",\"rm /tmp/amazon-cloudwatch-agent.deb\"]}}]}]}",
    "Description": "Install packages required for GitHub Runner and upgrade all packages"
   }
  },
  "AMILinuxarm64BuilderUserVersion39FD60DE": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-AMILinuxarm64Builder-User-93B25D03",
    "VersionedData": {
     "platform": "Linux",
     "data": {
      "name": "GitHub Runner user",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecuteBash",
          "inputs": {
           "commands": [
            "set -ex",
            "addgroup runner",
            "adduser --system --disabled-password --home /home/runner --ingroup runner runner"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of AWS CLI"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxarm64BuilderUserComponent938F2367": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-AMILinuxarm64Builder-User-93B25D03",
    "Platform": "Linux",
    "Version": {
     "Ref": "AMILinuxarm64BuilderUserVersion39FD60DE"
    },
    "Data": "{\"name\":\"GitHub Runner user\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecuteBash\",\"inputs\":{\"commands\":[\"set -ex\",\"addgroup runner\",\"adduser --system --disabled-password --home /home/runner --ingroup runner runner\"]}}]}]}",
    "Description": "Install latest version of AWS CLI"
   }
  },
  "AMILinuxarm64BuilderAWSCLIVersion0F90337D": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-AMILinuxarm64Builder-AWSCLI-40A3A460",
    "VersionedData": {
     "platform": "Linux",
     "data": {
      "name": "AWS CLI",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecuteBash",
          "inputs": {
           "commands": [
            "set -ex",
            "curl -fsSL \"https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip\" -o awscliv2.zip",
            "unzip -q awscliv2.zip",
            "./aws/install",
            "rm -rf awscliv2.zip aws"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of AWS CLI"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxarm64BuilderAWSCLIComponent597EC392": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-AMILinuxarm64Builder-AWSCLI-40A3A460",
    "Platform": "Linux",
    "Version": {
     "Ref": "AMILinuxarm64BuilderAWSCLIVersion0F90337D"
    },
    "Data": "{\"name\":\"AWS CLI\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecuteBash\",\"inputs\":{\"commands\":[\"set -ex\",\"curl -fsSL \\\"https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip\\\" -o awscliv2.zip\",\"unzip -q awscliv2.zip\",\"./aws/install\",\"rm -rf awscliv2.zip aws\"]}}]}]}",
    "Description": "Install latest version of AWS CLI"
   }
  },
  "AMILinuxarm64BuilderGitHubCLIVersionDE6BF6E3": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-AMILinuxarm64Builder-GitHubCLI-9616C810",
    "VersionedData": {
     "platform": "Linux",
     "data": {
      "name": "GitHub CLI",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecuteBash",
          "inputs": {
           "commands": [
            "set -ex",
            "curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg",
            "echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg]   https://cli.github.com/packages stable main\" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null",
            "apt-get update",
            "DEBIAN_FRONTEND=noninteractive apt-get install -y gh"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of gh"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxarm64BuilderGitHubCLIComponentD2BEF6D6": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-AMILinuxarm64Builder-GitHubCLI-9616C810",
    "Platform": "Linux",
    "Version": {
     "Ref": "AMILinuxarm64BuilderGitHubCLIVersionDE6BF6E3"
    },
    "Data": "{\"name\":\"GitHub CLI\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecuteBash\",\"inputs\":{\"commands\":[\"set -ex\",\"curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg\",\"echo \\\"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg]   https://cli.github.com/packages stable main\\\" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null\",\"apt-get update\",\"DEBIAN_FRONTEND=noninteractive apt-get install -y gh\"]}}]}]}",
    "Description": "Install latest version of gh"
   }
  },
  "AMILinuxarm64BuildergitVersion036A7A85": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-AMILinuxarm64Builder-git-9631389E",
    "VersionedData": {
     "platform": "Linux",
     "data": {
      "name": "Git",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecuteBash",
          "inputs": {
           "commands": [
            "set -ex",
            "add-apt-repository ppa:git-core/ppa",
            "apt-get update",
            "DEBIAN_FRONTEND=noninteractive apt-get install -y git"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of git"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxarm64BuildergitComponent2DD770C7": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-AMILinuxarm64Builder-git-9631389E",
    "Platform": "Linux",
    "Version": {
     "Ref": "AMILinuxarm64BuildergitVersion036A7A85"
    },
    "Data": "{\"name\":\"Git\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecuteBash\",\"inputs\":{\"commands\":[\"set -ex\",\"add-apt-repository ppa:git-core/ppa\",\"apt-get update\",\"DEBIAN_FRONTEND=noninteractive apt-get install -y git\"]}}]}]}",
    "Description": "Install latest version of git"
   }
  },
  "AMILinuxarm64BuilderGitHubActionsRunnerVersion208149D0": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-AMILinuxarm64Builder-GitHubActionsRunner-6B8B4FCE",
    "VersionedData": {
     "platform": "Linux",
     "data": {
      "name": "GitHub Actions Runner",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecuteBash",
          "inputs": {
           "commands": [
            "set -ex",
            "RUNNER_VERSION=`curl -w \"%{redirect_url}\" -fsS https://github.com/actions/runner/releases/latest | grep -oE \"[^/v]+$\"`",
            "curl -fsSLO \"https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-linux-arm64-${RUNNER_VERSION}.tar.gz\"",
            "tar xzf \"actions-runner-linux-arm64-${RUNNER_VERSION}.tar.gz\"",
            "rm actions-runner-linux-arm64-${RUNNER_VERSION}.tar.gz",
            "./bin/installdependencies.sh"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of GitHub Actions Runner"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxarm64BuilderGitHubActionsRunnerComponent2D6B2EA8": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-AMILinuxarm64Builder-GitHubActionsRunner-6B8B4FCE",
    "Platform": "Linux",
    "Version": {
     "Ref": "AMILinuxarm64BuilderGitHubActionsRunnerVersion208149D0"
    },
    "Data": "{\"name\":\"GitHub Actions Runner\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecuteBash\",\"inputs\":{\"commands\":[\"set -ex\",\"RUNNER_VERSION=`curl -w \\\"%{redirect_url}\\\" -fsS https://github.com/actions/runner/releases/latest | grep -oE \\\"[^/v]+$\\\"`\",\"curl -fsSLO \\\"https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-linux-arm64-${RUNNER_VERSION}.tar.gz\\\"\",\"tar xzf \\\"actions-runner-linux-arm64-${RUNNER_VERSION}.tar.gz\\\"\",\"rm actions-runner-linux-arm64-${RUNNER_VERSION}.tar.gz\",\"./bin/installdependencies.sh\"]}}]}]}",
    "Description": "Install latest version of GitHub Actions Runner"
   }
  },
  "AMILinuxarm64BuilderDockerVersionD5DFBE4A": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-AMILinuxarm64Builder-Docker-9D417EF3",
    "VersionedData": {
     "platform": "Linux",
     "data": {
      "name": "Docker",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecuteBash",
          "inputs": {
           "commands": [
            "set -ex",
            "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker.gpg",
            "echo   \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu   $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null",
            "apt-get update",
            "DEBIAN_FRONTEND=noninteractive apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin",
            "usermod -aG docker runner",
            "ln -s /usr/libexec/docker/cli-plugins/docker-compose /usr/bin/docker-compose"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of Docker"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxarm64BuilderDockerComponent51BA7F92": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-AMILinuxarm64Builder-Docker-9D417EF3",
    "Platform": "Linux",
    "Version": {
     "Ref": "AMILinuxarm64BuilderDockerVersionD5DFBE4A"
    },
    "Data": "{\"name\":\"Docker\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecuteBash\",\"inputs\":{\"commands\":[\"set -ex\",\"curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker.gpg\",\"echo   \\\"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu   $(lsb_release -cs) stable\\\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\",\"apt-get update\",\"DEBIAN_FRONTEND=noninteractive apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin\",\"usermod -aG docker runner\",\"ln -s /usr/libexec/docker/cli-plugins/docker-compose /usr/bin/docker-compose\"]}}]}]}",
    "Description": "Install latest version of Docker"
   }
  },
  "AMILinuxarm64BuilderLaunchtemplate8F5EFF44": {
   "Type": "AWS::EC2::LaunchTemplate",
   "Properties": {
    "LaunchTemplateData": {
     "TagSpecifications": [
      {
       "ResourceType": "instance",
       "Tags": [
        {
         "Key": "Name",
         "Value": "github-runners-test/AMI Linux arm64 Builder/Launch template"
        }
       ]
      },
      {
       "ResourceType": "volume",
       "Tags": [
        {
         "Key": "Name",
         "Value": "github-runners-test/AMI Linux arm64 Builder/Launch template"
        }
       ]
      }
     ]
    },
    "TagSpecifications": [
     {
      "ResourceType": "launch-template",
      "Tags": [
       {
        "Key": "Name",
        "Value": "github-runners-test/AMI Linux arm64 Builder/Launch template"
       }
      ]
     }
    ]
   }
  },
  "AMILinuxarm64BuilderDistribution77B3BD53": {
   "Type": "AWS::ImageBuilder::DistributionConfiguration",
   "Properties": {
    "Distributions": [
     {
      "AmiDistributionConfiguration": {
       "Name": "github-runners-test-AMILinuxarm64Builder-3F449283-{{ imagebuilder:buildDate }}",
       "AmiTags": {
        "Name": "AMI Linux arm64 Builder",
        "GitHubRunners:Stack": "github-runners-test",
        "GitHubRunners:Builder": "github-runners-test/AMI Linux arm64 Builder"
       }
      },
      "LaunchTemplateConfigurations": [
       {
        "LaunchTemplateId": {
         "Ref": "AMILinuxarm64BuilderLaunchtemplate8F5EFF44"
        }
       }
      ],
      "Region": {
       "Ref": "AWS::Region"
      }
     }
    ],
    "Name": "github-runners-test-AMILinuxarm64Builder-3F449283",
    "Description": "Build AMI for GitHub Actions runner github-runners-test/AMI Linux arm64 Builder (Linux/ARM64)"
   }
  },
  "AMILinuxarm64BuilderAmiRecipeVersion429E7646": {
   "Type": "Custom::ImageBuilder-ImageRecipe-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "ImageRecipe",
    "ObjectName": "github-runners-test-AMILinuxarm64Builder-AmiRecipe-9167B5EF",
    "VersionedData": {
     "platform": "Linux",
     "components": [
      {
       "componentArn": {
        "Fn::GetAtt": [
         "AMILinuxarm64BuilderUpgradepackagesandinstallbasicsComponentBE33D1FC",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "AMILinuxarm64BuilderUserComponent938F2367",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "AMILinuxarm64BuilderAWSCLIComponent597EC392",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "AMILinuxarm64BuilderGitHubCLIComponentD2BEF6D6",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "AMILinuxarm64BuildergitComponent2DD770C7",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "AMILinuxarm64BuilderGitHubActionsRunnerComponent2D6B2EA8",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "AMILinuxarm64BuilderDockerComponent51BA7F92",
         "Arn"
        ]
       }
      }
     ],
     "parentAmi": {
      "Ref": "SsmParameterValueawsservicecanonicalubuntuserverfocalstablecurrentarm64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter"
     }
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "AMILinuxarm64BuilderAmiRecipe6A6ED38F": {
   "Type": "AWS::ImageBuilder::ImageRecipe",
   "Properties": {
    "Components": [
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "AMILinuxarm64BuilderUpgradepackagesandinstallbasicsComponentBE33D1FC",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "AMILinuxarm64BuilderUserComponent938F2367",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "AMILinuxarm64BuilderAWSCLIComponent597EC392",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "AMILinuxarm64BuilderGitHubCLIComponentD2BEF6D6",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "AMILinuxarm64BuildergitComponent2DD770C7",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "AMILinuxarm64BuilderGitHubActionsRunnerComponent2D6B2EA8",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "AMILinuxarm64BuilderDockerComponent51BA7F92",
        "Arn"
       ]
      }
     }
    ],
    "Name": "github-runners-test-AMILinuxarm64Builder-AmiRecipe-9167B5EF",
    "ParentImage": {
     "Ref": "SsmParameterValueawsservicecanonicalubuntuserverfocalstablecurrentarm64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "Version": {
     "Ref": "AMILinuxarm64BuilderAmiRecipeVersion429E7646"
    },
    "WorkingDirectory": "/home/runner"
   }
  },
  "AMILinuxarm64BuilderLog3F9BB6F0": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/imagebuilder/github-runners-test-AMILinuxarm64Builder-AmiRecipe-9167B5EF",
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AMILinuxarm64BuilderRole40D54E29": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "ec2.",
           {
            "Ref": "AWS::URLSuffix"
           }
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/EC2InstanceProfileForImageBuilder"
       ]
      ]
     }
    ]
   }
  },
  "AMILinuxarm64BuilderInstanceProfileCE3B6B09": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "AMILinuxarm64BuilderRole40D54E29"
     }
    ]
   }
  },
  "AMILinuxarm64BuilderInfrastructure80FA16D6": {
   "Type": "AWS::ImageBuilder::InfrastructureConfiguration",
   "Properties": {
    "InstanceProfileName": {
     "Ref": "AMILinuxarm64BuilderInstanceProfileCE3B6B09"
    },
    "Name": "github-runners-test-AMILinuxarm64Builder-3F449283",
    "Description": "Build AMI for GitHub Actions runner github-runners-test/AMI Linux arm64 Builder (Linux/ARM64)",
    "InstanceTypes": [
     "m6g.large"
    ],
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "AMILinuxarm64BuilderSG94315968",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   }
  },
  "AMILinuxarm64BuilderImageA637431C": {
   "Type": "AWS::ImageBuilder::Image",
   "Properties": {
    "InfrastructureConfigurationArn": {
     "Fn::GetAtt": [
      "AMILinuxarm64BuilderInfrastructure80FA16D6",
      "Arn"
     ]
    },
    "DistributionConfigurationArn": {
     "Fn::GetAtt": [
      "AMILinuxarm64BuilderDistribution77B3BD53",
      "Arn"
     ]
    },
    "ImageRecipeArn": {
     "Fn::GetAtt": [
      "AMILinuxarm64BuilderAmiRecipe6A6ED38F",
      "Arn"
     ]
    },
    "ImageTestsConfiguration": {
     "ImageTestsEnabled": false
    }
   },
   "DependsOn": [
    "AMILinuxarm64BuilderInfrastructure80FA16D6",
    "AMILinuxarm64BuilderLog3F9BB6F0"
   ]
  },
  "AMILinuxarm64BuilderPipelineECE006B6": {
   "Type": "AWS::ImageBuilder::ImagePipeline",
   "Properties": {
    "InfrastructureConfigurationArn": {
     "Fn::GetAtt": [
      "AMILinuxarm64BuilderInfrastructure80FA16D6",
      "Arn"
     ]
    },
    "Name": "github-runners-test-AMILinuxarm64Builder-3F449283",
    "Description": "Build AMI for GitHub Actions runner github-runners-test/AMI Linux arm64 Builder (Linux/ARM64)",
    "DistributionConfigurationArn": {
     "Fn::GetAtt": [
      "AMILinuxarm64BuilderDistribution77B3BD53",
      "Arn"
     ]
    },
    "ImageRecipeArn": {
     "Fn::GetAtt": [
      "AMILinuxarm64BuilderAmiRecipe6A6ED38F",
      "Arn"
     ]
    },
    "ImageTestsConfiguration": {
     "ImageTestsEnabled": false
    },
    "Schedule": {
     "PipelineExecutionStartCondition": "EXPRESSION_MATCH_ONLY",
     "ScheduleExpression": "rate(7 days)"
    }
   },
   "DependsOn": [
    "AMILinuxarm64BuilderInfrastructure80FA16D6",
    "AMILinuxarm64BuilderLog3F9BB6F0"
   ]
  },
  "AMILinuxarm64BuilderDeleteAMISchedule72E5EB47": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Delete old AMIs for github-runners-test/AMI Linux arm64 Builder",
    "ScheduleExpression": "rate(1 day)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "deleteamidcc036c8876b451ea2c1552f9e06e9e1BE713303",
        "Arn"
       ]
      },
      "Id": "Target0",
      "Input": {
       "Fn::Join": [
        "",
        [
         "{\"RequestType\":\"Scheduled\",\"LaunchTemplateId\":\"",
         {
          "Ref": "AMILinuxarm64BuilderLaunchtemplate8F5EFF44"
         },
         "\",\"StackName\":\"github-runners-test\",\"BuilderName\":\"github-runners-test/AMI Linux arm64 Builder\"}"
        ]
       ]
      }
     }
    ]
   }
  },
  "AMILinuxarm64BuilderDeleteAMIScheduleAllowEventRulegithubrunnerstestdeleteamidcc036c8876b451ea2c1552f9e06e9e147BECA88A6D69EB4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteamidcc036c8876b451ea2c1552f9e06e9e1BE713303",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "AMILinuxarm64BuilderDeleteAMISchedule72E5EB47",
      "Arn"
     ]
    }
   }
  },
  "AMILinuxarm64BuilderAMIDeleter27E72E27": {
   "Type": "Custom::AmiDeleter",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "deleteamidcc036c8876b451ea2c1552f9e06e9e1BE713303",
      "Arn"
     ]
    },
    "StackName": "github-runners-test",
    "BuilderName": "github-runners-test/AMI Linux arm64 Builder"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "EC2Linuxarm64SG550ECD6C": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "github-runners-test/EC2 Linux arm64/SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "EC2Linuxarm64Role242F68FF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "ec2.",
           {
            "Ref": "AWS::URLSuffix"
           }
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     }
    ]
   }
  },
  "EC2Linuxarm64RoleDefaultPolicyDE9193C3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "states:SendTaskFailure",
        "states:SendTaskSuccess",
        "states:SendTaskHeartbeat"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EC2Linuxarm64Logs577E371E",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EC2Linuxarm64RoleDefaultPolicyDE9193C3",
    "Roles": [
     {
      "Ref": "EC2Linuxarm64Role242F68FF"
     }
    ]
   }
  },
  "EC2Linuxarm64Logs577E371E": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "EC2Linuxarm64InstanceProfile1E6F8D53": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "EC2Linuxarm64Role242F68FF"
     }
    ]
   }
  },
  "WindowsEC2BuilderSGE3F67842": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "github-runners-test/Windows EC2 Builder/SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "WindowsEC2BuilderCloudWatchagentVersion05F51F3E": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-WindowsEC2Builder-CloudWatchagent-E8246DA5",
    "VersionedData": {
     "platform": "Windows",
     "data": {
      "name": "CloudWatch agent",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecutePowerShell",
          "inputs": {
           "commands": [
            "$ErrorActionPreference = 'Stop'",
            "Start-Process msiexec.exe -Wait -ArgumentList '/i https://s3.amazonaws.com/amazoncloudwatch-agent/windows/amd64/latest/amazon-cloudwatch-agent.msi /qn'"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of CloudWatch agent for sending logs to CloudWatch"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "WindowsEC2BuilderCloudWatchagentComponent834C8193": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-WindowsEC2Builder-CloudWatchagent-E8246DA5",
    "Platform": "Windows",
    "Version": {
     "Ref": "WindowsEC2BuilderCloudWatchagentVersion05F51F3E"
    },
    "Data": "{\"name\":\"CloudWatch agent\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecutePowerShell\",\"inputs\":{\"commands\":[\"$ErrorActionPreference = 'Stop'\",\"Start-Process msiexec.exe -Wait -ArgumentList '/i https://s3.amazonaws.com/amazoncloudwatch-agent/windows/amd64/latest/amazon-cloudwatch-agent.msi /qn'\"]}}]}]}",
    "Description": "Install latest version of CloudWatch agent for sending logs to CloudWatch"
   }
  },
  "WindowsEC2BuilderAWSCLIVersion930FE37C": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-WindowsEC2Builder-AWSCLI-746065A3",
    "VersionedData": {
     "platform": "Windows",
     "data": {
      "name": "AWS CLI",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecutePowerShell",
          "inputs": {
           "commands": [
            "$ErrorActionPreference = 'Stop'",
            "Start-Process msiexec.exe -Wait -ArgumentList '/i https://awscli.amazonaws.com/AWSCLIV2.msi /qn'"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of AWS CLI"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "WindowsEC2BuilderAWSCLIComponent074653A7": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-WindowsEC2Builder-AWSCLI-746065A3",
    "Platform": "Windows",
    "Version": {
     "Ref": "WindowsEC2BuilderAWSCLIVersion930FE37C"
    },
    "Data": "{\"name\":\"AWS CLI\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecutePowerShell\",\"inputs\":{\"commands\":[\"$ErrorActionPreference = 'Stop'\",\"Start-Process msiexec.exe -Wait -ArgumentList '/i https://awscli.amazonaws.com/AWSCLIV2.msi /qn'\"]}}]}]}",
    "Description": "Install latest version of AWS CLI"
   }
  },
  "WindowsEC2BuilderGitHubCLIVersionF5632391": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-WindowsEC2Builder-GitHubCLI-0934FC13",
    "VersionedData": {
     "platform": "Windows",
     "data": {
      "name": "GitHub CLI",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecutePowerShell",
          "inputs": {
           "commands": [
            "$ErrorActionPreference = 'Stop'",
            "$ProgressPreference = 'SilentlyContinue'",
            "cmd /c curl -w \"%{redirect_url}\" -fsS https://github.com/cli/cli/releases/latest > $Env:TEMP\\latest-gh",
            "$LatestUrl = Get-Content $Env:TEMP\\latest-gh",
            "$GH_VERSION = ($LatestUrl -Split '/')[-1].substring(1)",
            "$ProgressPreference = 'SilentlyContinue'",
            "Invoke-WebRequest -UseBasicParsing -Uri \"https://github.com/cli/cli/releases/download/v${GH_VERSION}/gh_${GH_VERSION}_windows_amd64.msi\" -OutFile gh.msi",
            "Start-Process msiexec.exe -Wait -ArgumentList '/i gh.msi /qn'",
            "del gh.msi"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of gh"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "WindowsEC2BuilderGitHubCLIComponentF6EB908A": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-WindowsEC2Builder-GitHubCLI-0934FC13",
    "Platform": "Windows",
    "Version": {
     "Ref": "WindowsEC2BuilderGitHubCLIVersionF5632391"
    },
    "Data": "{\"name\":\"GitHub CLI\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecutePowerShell\",\"inputs\":{\"commands\":[\"$ErrorActionPreference = 'Stop'\",\"$ProgressPreference = 'SilentlyContinue'\",\"cmd /c curl -w \\\"%{redirect_url}\\\" -fsS https://github.com/cli/cli/releases/latest > $Env:TEMP\\\\latest-gh\",\"$LatestUrl = Get-Content $Env:TEMP\\\\latest-gh\",\"$GH_VERSION = ($LatestUrl -Split '/')[-1].substring(1)\",\"$ProgressPreference = 'SilentlyContinue'\",\"Invoke-WebRequest -UseBasicParsing -Uri \\\"https://github.com/cli/cli/releases/download/v${GH_VERSION}/gh_${GH_VERSION}_windows_amd64.msi\\\" -OutFile gh.msi\",\"Start-Process msiexec.exe -Wait -ArgumentList '/i gh.msi /qn'\",\"del gh.msi\"]}}]}]}",
    "Description": "Install latest version of gh"
   }
  },
  "WindowsEC2BuildergitVersion01214F59": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-WindowsEC2Builder-git-A42589DA",
    "VersionedData": {
     "platform": "Windows",
     "data": {
      "name": "Git",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecutePowerShell",
          "inputs": {
           "commands": [
            "$ErrorActionPreference = 'Stop'",
            "$ProgressPreference = 'SilentlyContinue'",
            "cmd /c curl -w \"%{redirect_url}\" -fsS https://github.com/git-for-windows/git/releases/latest > $Env:TEMP\\latest-git",
            "$LatestUrl = Get-Content $Env:TEMP\\latest-git",
            "$GIT_VERSION = ($LatestUrl -Split '/')[-1].substring(1)",
            "$GIT_VERSION_SHORT = ($GIT_VERSION -Split '.windows.')[0]",
            "Invoke-WebRequest -UseBasicParsing -Uri https://github.com/git-for-windows/git/releases/download/v${GIT_VERSION}/Git-${GIT_VERSION_SHORT}-64-bit.exe -OutFile git-setup.exe",
            "Start-Process git-setup.exe -Wait -ArgumentList '/VERYSILENT'",
            "del git-setup.exe"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of git"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "WindowsEC2BuildergitComponentA98B99F3": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-WindowsEC2Builder-git-A42589DA",
    "Platform": "Windows",
    "Version": {
     "Ref": "WindowsEC2BuildergitVersion01214F59"
    },
    "Data": "{\"name\":\"Git\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecutePowerShell\",\"inputs\":{\"commands\":[\"$ErrorActionPreference = 'Stop'\",\"$ProgressPreference = 'SilentlyContinue'\",\"cmd /c curl -w \\\"%{redirect_url}\\\" -fsS https://github.com/git-for-windows/git/releases/latest > $Env:TEMP\\\\latest-git\",\"$LatestUrl = Get-Content $Env:TEMP\\\\latest-git\",\"$GIT_VERSION = ($LatestUrl -Split '/')[-1].substring(1)\",\"$GIT_VERSION_SHORT = ($GIT_VERSION -Split '.windows.')[0]\",\"Invoke-WebRequest -UseBasicParsing -Uri https://github.com/git-for-windows/git/releases/download/v${GIT_VERSION}/Git-${GIT_VERSION_SHORT}-64-bit.exe -OutFile git-setup.exe\",\"Start-Process git-setup.exe -Wait -ArgumentList '/VERYSILENT'\",\"del git-setup.exe\"]}}]}]}",
    "Description": "Install latest version of git"
   }
  },
  "WindowsEC2BuilderGitHubActionsRunnerVersionC3E347C0": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-WindowsEC2Builder-GitHubActionsRunner-8AAFE191",
    "VersionedData": {
     "platform": "Windows",
     "data": {
      "name": "GitHub Actions Runner",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecutePowerShell",
          "inputs": {
           "commands": [
            "$ErrorActionPreference = 'Stop'",
            "$ProgressPreference = 'SilentlyContinue'",
            "cmd /c curl -w \"%{redirect_url}\" -fsS https://github.com/actions/runner/releases/latest > $Env:TEMP\\latest-gha",
            "$LatestUrl = Get-Content $Env:TEMP\\latest-gha",
            "$RUNNER_VERSION = ($LatestUrl -Split '/')[-1].substring(1)",
            "Invoke-WebRequest -UseBasicParsing -Uri \"https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-win-x64-${RUNNER_VERSION}.zip\" -OutFile actions.zip",
            "Expand-Archive actions.zip -DestinationPath C:\\actions",
            "del actions.zip"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of GitHub Actions Runner"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "WindowsEC2BuilderGitHubActionsRunnerComponent1741EAC0": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-WindowsEC2Builder-GitHubActionsRunner-8AAFE191",
    "Platform": "Windows",
    "Version": {
     "Ref": "WindowsEC2BuilderGitHubActionsRunnerVersionC3E347C0"
    },
    "Data": "{\"name\":\"GitHub Actions Runner\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecutePowerShell\",\"inputs\":{\"commands\":[\"$ErrorActionPreference = 'Stop'\",\"$ProgressPreference = 'SilentlyContinue'\",\"cmd /c curl -w \\\"%{redirect_url}\\\" -fsS https://github.com/actions/runner/releases/latest > $Env:TEMP\\\\latest-gha\",\"$LatestUrl = Get-Content $Env:TEMP\\\\latest-gha\",\"$RUNNER_VERSION = ($LatestUrl -Split '/')[-1].substring(1)\",\"Invoke-WebRequest -UseBasicParsing -Uri \\\"https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-win-x64-${RUNNER_VERSION}.zip\\\" -OutFile actions.zip\",\"Expand-Archive actions.zip -DestinationPath C:\\\\actions\",\"del actions.zip\"]}}]}]}",
    "Description": "Install latest version of GitHub Actions Runner"
   }
  },
  "WindowsEC2BuilderDockerVersionB1C9C41B": {
   "Type": "Custom::ImageBuilder-Component-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "Component",
    "ObjectName": "github-runners-test-WindowsEC2Builder-Docker-0AB6BE75",
    "VersionedData": {
     "platform": "Windows",
     "data": {
      "name": "Docker",
      "schemaVersion": "1.0",
      "phases": [
       {
        "name": "build",
        "steps": [
         {
          "name": "Run",
          "action": "ExecutePowerShell",
          "inputs": {
           "commands": [
            "$ErrorActionPreference = 'Stop'",
            "$ProgressPreference = 'SilentlyContinue'",
            "Invoke-WebRequest -UseBasicParsing -Uri https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe -OutFile docker-setup.exe",
            "Start-Process 'docker-setup.exe' -Wait -ArgumentList '/install --quiet --accept-license'",
            "del docker-setup.exe",
            "cmd /c curl -w \"%{redirect_url}\" -fsS https://github.com/docker/compose/releases/latest > $Env:TEMP\\latest-docker-compose",
            "$LatestUrl = Get-Content $Env:TEMP\\latest-docker-compose",
            "$LatestDockerCompose = ($LatestUrl -Split '/')[-1]",
            "Invoke-WebRequest -UseBasicParsing -Uri  \"https://github.com/docker/compose/releases/download/${LatestDockerCompose}/docker-compose-Windows-x86_64.exe\" -OutFile $Env:ProgramFiles\\Docker\\docker-compose.exe",
            "copy $Env:ProgramFiles\\Docker\\docker-compose.exe $Env:ProgramFiles\\Docker\\cli-plugins\\docker-compose.exe"
           ]
          }
         }
        ]
       }
      ]
     },
     "description": "Install latest version of Docker"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "WindowsEC2BuilderDockerComponent0CDF16CB": {
   "Type": "AWS::ImageBuilder::Component",
   "Properties": {
    "Name": "github-runners-test-WindowsEC2Builder-Docker-0AB6BE75",
    "Platform": "Windows",
    "Version": {
     "Ref": "WindowsEC2BuilderDockerVersionB1C9C41B"
    },
    "Data": "{\"name\":\"Docker\",\"schemaVersion\":\"1.0\",\"phases\":[{\"name\":\"build\",\"steps\":[{\"name\":\"Run\",\"action\":\"ExecutePowerShell\",\"inputs\":{\"commands\":[\"$ErrorActionPreference = 'Stop'\",\"$ProgressPreference = 'SilentlyContinue'\",\"Invoke-WebRequest -UseBasicParsing -Uri https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe -OutFile docker-setup.exe\",\"Start-Process 'docker-setup.exe' -Wait -ArgumentList '/install --quiet --accept-license'\",\"del docker-setup.exe\",\"cmd /c curl -w \\\"%{redirect_url}\\\" -fsS https://github.com/docker/compose/releases/latest > $Env:TEMP\\\\latest-docker-compose\",\"$LatestUrl = Get-Content $Env:TEMP\\\\latest-docker-compose\",\"$LatestDockerCompose = ($LatestUrl -Split '/')[-1]\",\"Invoke-WebRequest -UseBasicParsing -Uri  \\\"https://github.com/docker/compose/releases/download/${LatestDockerCompose}/docker-compose-Windows-x86_64.exe\\\" -OutFile $Env:ProgramFiles\\\\Docker\\\\docker-compose.exe\",\"copy $Env:ProgramFiles\\\\Docker\\\\docker-compose.exe $Env:ProgramFiles\\\\Docker\\\\cli-plugins\\\\docker-compose.exe\"]}}]}]}",
    "Description": "Install latest version of Docker"
   }
  },
  "WindowsEC2BuilderLaunchtemplate0A66E9C2": {
   "Type": "AWS::EC2::LaunchTemplate",
   "Properties": {
    "LaunchTemplateData": {
     "TagSpecifications": [
      {
       "ResourceType": "instance",
       "Tags": [
        {
         "Key": "Name",
         "Value": "github-runners-test/Windows EC2 Builder/Launch template"
        }
       ]
      },
      {
       "ResourceType": "volume",
       "Tags": [
        {
         "Key": "Name",
         "Value": "github-runners-test/Windows EC2 Builder/Launch template"
        }
       ]
      }
     ]
    },
    "TagSpecifications": [
     {
      "ResourceType": "launch-template",
      "Tags": [
       {
        "Key": "Name",
        "Value": "github-runners-test/Windows EC2 Builder/Launch template"
       }
      ]
     }
    ]
   }
  },
  "WindowsEC2BuilderDistributionC6CA152B": {
   "Type": "AWS::ImageBuilder::DistributionConfiguration",
   "Properties": {
    "Distributions": [
     {
      "AmiDistributionConfiguration": {
       "Name": "github-runners-test-WindowsEC2Builder-5FAF8285-{{ imagebuilder:buildDate }}",
       "AmiTags": {
        "Name": "Windows EC2 Builder",
        "GitHubRunners:Stack": "github-runners-test",
        "GitHubRunners:Builder": "github-runners-test/Windows EC2 Builder"
       }
      },
      "LaunchTemplateConfigurations": [
       {
        "LaunchTemplateId": {
         "Ref": "WindowsEC2BuilderLaunchtemplate0A66E9C2"
        }
       }
      ],
      "Region": {
       "Ref": "AWS::Region"
      }
     }
    ],
    "Name": "github-runners-test-WindowsEC2Builder-5FAF8285",
    "Description": "Build AMI for GitHub Actions runner github-runners-test/Windows EC2 Builder (Windows/X86_64)"
   }
  },
  "WindowsEC2BuilderAmiRecipeVersionEE5C2F0C": {
   "Type": "Custom::ImageBuilder-ImageRecipe-Version",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awsimagebuilderversionerdcc036c8876b451ea2c1552f9e06e9e1591B871E",
      "Arn"
     ]
    },
    "ObjectType": "ImageRecipe",
    "ObjectName": "github-runners-test-WindowsEC2Builder-AmiRecipe-BEDA5750",
    "VersionedData": {
     "platform": "Windows",
     "components": [
      {
       "componentArn": {
        "Fn::GetAtt": [
         "WindowsEC2BuilderCloudWatchagentComponent834C8193",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "WindowsEC2BuilderAWSCLIComponent074653A7",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "WindowsEC2BuilderGitHubCLIComponentF6EB908A",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "WindowsEC2BuildergitComponentA98B99F3",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "WindowsEC2BuilderGitHubActionsRunnerComponent1741EAC0",
         "Arn"
        ]
       }
      },
      {
       "componentArn": {
        "Fn::GetAtt": [
         "WindowsEC2BuilderDockerComponent0CDF16CB",
         "Arn"
        ]
       }
      }
     ],
     "parentAmi": {
      "Ref": "SsmParameterValueawsserviceamiwindowslatestWindowsServer2022EnglishFullContainersLatestC96584B6F00A464EAD1953AFF4B05118Parameter"
     }
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "WindowsEC2BuilderAmiRecipe41A137FF": {
   "Type": "AWS::ImageBuilder::ImageRecipe",
   "Properties": {
    "Components": [
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "WindowsEC2BuilderCloudWatchagentComponent834C8193",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "WindowsEC2BuilderAWSCLIComponent074653A7",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "WindowsEC2BuilderGitHubCLIComponentF6EB908A",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "WindowsEC2BuildergitComponentA98B99F3",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "WindowsEC2BuilderGitHubActionsRunnerComponent1741EAC0",
        "Arn"
       ]
      }
     },
     {
      "ComponentArn": {
       "Fn::GetAtt": [
        "WindowsEC2BuilderDockerComponent0CDF16CB",
        "Arn"
       ]
      }
     }
    ],
    "Name": "github-runners-test-WindowsEC2Builder-AmiRecipe-BEDA5750",
    "ParentImage": {
     "Ref": "SsmParameterValueawsserviceamiwindowslatestWindowsServer2022EnglishFullContainersLatestC96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "Version": {
     "Ref": "WindowsEC2BuilderAmiRecipeVersionEE5C2F0C"
    },
    "WorkingDirectory": "C:/"
   }
  },
  "WindowsEC2BuilderLog486ECFAD": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/imagebuilder/github-runners-test-WindowsEC2Builder-AmiRecipe-BEDA5750",
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "WindowsEC2BuilderRole1BA7D3E7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "ec2.",
           {
            "Ref": "AWS::URLSuffix"
           }
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/EC2InstanceProfileForImageBuilder"
       ]
      ]
     }
    ]
   }
  },
  "WindowsEC2BuilderInstanceProfileA8DBA763": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "WindowsEC2BuilderRole1BA7D3E7"
     }
    ]
   }
  },
  "WindowsEC2BuilderInfrastructure757D4FD7": {
   "Type": "AWS::ImageBuilder::InfrastructureConfiguration",
   "Properties": {
    "InstanceProfileName": {
     "Ref": "WindowsEC2BuilderInstanceProfileA8DBA763"
    },
    "Name": "github-runners-test-WindowsEC2Builder-5FAF8285",
    "Description": "Build AMI for GitHub Actions runner github-runners-test/Windows EC2 Builder (Windows/X86_64)",
    "InstanceTypes": [
     "m5.large"
    ],
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "WindowsEC2BuilderSGE3F67842",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   }
  },
  "WindowsEC2BuilderImage6E6F4F1F": {
   "Type": "AWS::ImageBuilder::Image",
   "Properties": {
    "InfrastructureConfigurationArn": {
     "Fn::GetAtt": [
      "WindowsEC2BuilderInfrastructure757D4FD7",
      "Arn"
     ]
    },
    "DistributionConfigurationArn": {
     "Fn::GetAtt": [
      "WindowsEC2BuilderDistributionC6CA152B",
      "Arn"
     ]
    },
    "ImageRecipeArn": {
     "Fn::GetAtt": [
      "WindowsEC2BuilderAmiRecipe41A137FF",
      "Arn"
     ]
    },
    "ImageTestsConfiguration": {
     "ImageTestsEnabled": false
    }
   },
   "DependsOn": [
    "WindowsEC2BuilderInfrastructure757D4FD7",
    "WindowsEC2BuilderLog486ECFAD"
   ]
  },
  "WindowsEC2BuilderPipelineC4625CBC": {
   "Type": "AWS::ImageBuilder::ImagePipeline",
   "Properties": {
    "InfrastructureConfigurationArn": {
     "Fn::GetAtt": [
      "WindowsEC2BuilderInfrastructure757D4FD7",
      "Arn"
     ]
    },
    "Name": "github-runners-test-WindowsEC2Builder-5FAF8285",
    "Description": "Build AMI for GitHub Actions runner github-runners-test/Windows EC2 Builder (Windows/X86_64)",
    "DistributionConfigurationArn": {
     "Fn::GetAtt": [
      "WindowsEC2BuilderDistributionC6CA152B",
      "Arn"
     ]
    },
    "ImageRecipeArn": {
     "Fn::GetAtt": [
      "WindowsEC2BuilderAmiRecipe41A137FF",
      "Arn"
     ]
    },
    "ImageTestsConfiguration": {
     "ImageTestsEnabled": false
    },
    "Schedule": {
     "PipelineExecutionStartCondition": "EXPRESSION_MATCH_ONLY",
     "ScheduleExpression": "rate(7 days)"
    }
   },
   "DependsOn": [
    "WindowsEC2BuilderInfrastructure757D4FD7",
    "WindowsEC2BuilderLog486ECFAD"
   ]
  },
  "WindowsEC2BuilderDeleteAMISchedule52E66C5D": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Delete old AMIs for github-runners-test/Windows EC2 Builder",
    "ScheduleExpression": "rate(1 day)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "deleteamidcc036c8876b451ea2c1552f9e06e9e1BE713303",
        "Arn"
       ]
      },
      "Id": "Target0",
      "Input": {
       "Fn::Join": [
        "",
        [
         "{\"RequestType\":\"Scheduled\",\"LaunchTemplateId\":\"",
         {
          "Ref": "WindowsEC2BuilderLaunchtemplate0A66E9C2"
         },
         "\",\"StackName\":\"github-runners-test\",\"BuilderName\":\"github-runners-test/Windows EC2 Builder\"}"
        ]
       ]
      }
     }
    ]
   }
  },
  "WindowsEC2BuilderDeleteAMIScheduleAllowEventRulegithubrunnerstestdeleteamidcc036c8876b451ea2c1552f9e06e9e147BECA882F03ABC6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteamidcc036c8876b451ea2c1552f9e06e9e1BE713303",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "WindowsEC2BuilderDeleteAMISchedule52E66C5D",
      "Arn"
     ]
    }
   }
  },
  "WindowsEC2BuilderAMIDeleterF9643905": {
   "Type": "Custom::AmiDeleter",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "deleteamidcc036c8876b451ea2c1552f9e06e9e1BE713303",
      "Arn"
     ]
    },
    "StackName": "github-runners-test",
    "BuilderName": "github-runners-test/Windows EC2 Builder"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "EC2WindowsSG13E24976": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "github-runners-test/EC2 Windows/SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "EC2WindowsRoleC0D850D2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "ec2.",
           {
            "Ref": "AWS::URLSuffix"
           }
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     }
    ]
   }
  },
  "EC2WindowsRoleDefaultPolicyB6A15409": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "states:SendTaskFailure",
        "states:SendTaskSuccess",
        "states:SendTaskHeartbeat"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EC2WindowsLogsDC1F2ABF",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EC2WindowsRoleDefaultPolicyB6A15409",
    "Roles": [
     {
      "Ref": "EC2WindowsRoleC0D850D2"
     }
    ]
   }
  },
  "EC2WindowsLogsDC1F2ABF": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "EC2WindowsInstanceProfileDCA59D9C": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "EC2WindowsRoleC0D850D2"
     }
    ]
   }
  },
  "runnersSecretsWebhook7AF0D74E": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "ExcludePunctuation": true,
     "GenerateStringKey": "webhookSecret",
     "IncludeSpace": false,
     "SecretStringTemplate": "{}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "runnersSecretsGitHubEFD96479": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "ExcludePunctuation": true,
     "GenerateStringKey": "dummy",
     "IncludeSpace": false,
     "SecretStringTemplate": "{\"domain\":\"github.com\",\"appId\":\"\",\"personalAuthToken\":\"\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "runnersSecretsGitHubPrivateKey79498F91": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "SecretString": "-----BEGIN RSA PRIVATE KEY-----\n...\n-----END RSA PRIVATE KEY-----"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "runnersSecretsSetup692A93B1": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "ExcludePunctuation": true,
     "GenerateStringKey": "token",
     "IncludeSpace": false,
     "SecretStringTemplate": "{\"token\":\"\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "runnerstokenretrieverServiceRole6099F71C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "runnerstokenretrieverServiceRoleDefaultPolicy24965D29": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersSecretsGitHubEFD96479"
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersSecretsGitHubPrivateKey79498F91"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "runnerstokenretrieverServiceRoleDefaultPolicy24965D29",
    "Roles": [
     {
      "Ref": "runnerstokenretrieverServiceRole6099F71C"
     }
    ]
   }
  },
  "runnerstokenretrieverD5E8392A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "dda30e7424c20b095605eb182184d3c33d9f632cc4fb81f61fd7ec8e1a8beae9.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "runnerstokenretrieverServiceRole6099F71C",
      "Arn"
     ]
    },
    "Description": "Get token from GitHub Actions used to start new self-hosted runner",
    "Environment": {
     "Variables": {
      "GITHUB_SECRET_ARN": {
       "Ref": "runnersSecretsGitHubEFD96479"
      },
      "GITHUB_PRIVATE_KEY_SECRET_ARN": {
       "Ref": "runnersSecretsGitHubPrivateKey79498F91"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Timeout": 30
   },
   "DependsOn": [
    "runnerstokenretrieverServiceRoleDefaultPolicy24965D29",
    "runnerstokenretrieverServiceRole6099F71C"
   ]
  },
  "runnerstokenretrieverLogRetention05A536AD": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "runnerstokenretrieverD5E8392A"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "runnersdeleterunnerServiceRole35856967": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "runnersdeleterunnerServiceRoleDefaultPolicyECFB6BF7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersSecretsGitHubEFD96479"
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersSecretsGitHubPrivateKey79498F91"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "runnersdeleterunnerServiceRoleDefaultPolicyECFB6BF7",
    "Roles": [
     {
      "Ref": "runnersdeleterunnerServiceRole35856967"
     }
    ]
   }
  },
  "runnersdeleterunner7F8D5293": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c1a512bd5a611f0c2a786809620fc9e86818f9f7bd5bb3e5544b49755d37c433.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "runnersdeleterunnerServiceRole35856967",
      "Arn"
     ]
    },
    "Description": "Delete GitHub Actions runner on error",
    "Environment": {
     "Variables": {
      "GITHUB_SECRET_ARN": {
       "Ref": "runnersSecretsGitHubEFD96479"
      },
      "GITHUB_PRIVATE_KEY_SECRET_ARN": {
       "Ref": "runnersSecretsGitHubPrivateKey79498F91"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Timeout": 30
   },
   "DependsOn": [
    "runnersdeleterunnerServiceRoleDefaultPolicyECFB6BF7",
    "runnersdeleterunnerServiceRole35856967"
   ]
  },
  "runnersdeleterunnerLogRetention76F47082": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "runnersdeleterunner7F8D5293"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "runnersRunnerOrchestratorRole5D220AD7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::FindInMap": [
          "ServiceprincipalMap",
          {
           "Ref": "AWS::Region"
          },
          "states"
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "runnersRunnerOrchestratorRoleDefaultPolicyD1C26D61": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "runnerstokenretrieverD5E8392A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "runnerstokenretrieverD5E8392A",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "runnersdeleterunner7F8D5293",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "runnersdeleterunner7F8D5293",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:StartBuild",
        "codebuild:StopBuild",
        "codebuild:BatchGetBuilds",
        "codebuild:BatchGetReports"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildx64CodeBuild7DC01A1E",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "events:PutTargets",
        "events:PutRule",
        "events:DescribeRule"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":events:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":rule/StepFunctionsGetEventForCodeBuildStartBuildRule"
         ]
        ]
       }
      },
      {
       "Action": [
        "codebuild:StartBuild",
        "codebuild:StopBuild",
        "codebuild:BatchGetBuilds",
        "codebuild:BatchGetReports"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildARMCodeBuildC5F301F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "codebuild:StartBuild",
        "codebuild:StopBuild",
        "codebuild:BatchGetBuilds",
        "codebuild:BatchGetReports"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildWindowsCodeBuildC39F35C1",
         "Arn"
        ]
       }
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "LambdaFunction9233991D",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "LambdaFunction9233991D",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "LambdaARMFunctionDD4B5FF7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "LambdaARMFunctionDD4B5FF7",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "ecs:RunTask",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Fn::Select": [
            1,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargatetaskFDFF3302"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            2,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargatetaskFDFF3302"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargatetaskFDFF3302"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargatetaskFDFF3302"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            0,
            {
             "Fn::Split": [
              "/",
              {
               "Fn::Select": [
                5,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Ref": "FargatetaskFDFF3302"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          },
          "/",
          {
           "Fn::Select": [
            1,
            {
             "Fn::Split": [
              "/",
              {
               "Fn::Select": [
                5,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Ref": "FargatetaskFDFF3302"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         ]
        ]
       }
      },
      {
       "Action": [
        "ecs:StopTask",
        "ecs:DescribeTasks"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "FargatetaskTaskRoleEFFCDAF8",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "FargatetaskExecutionRole88A42307",
          "Arn"
         ]
        }
       ]
      },
      {
       "Action": [
        "events:PutTargets",
        "events:PutRule",
        "events:DescribeRule"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":events:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":rule/StepFunctionsGetEventsForECSTaskRule"
         ]
        ]
       }
      },
      {
       "Action": "ecs:RunTask",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Fn::Select": [
            1,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "Fargatex64spottask4C8B023D"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            2,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "Fargatex64spottask4C8B023D"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "Fargatex64spottask4C8B023D"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "Fargatex64spottask4C8B023D"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            0,
            {
             "Fn::Split": [
              "/",
              {
               "Fn::Select": [
                5,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Ref": "Fargatex64spottask4C8B023D"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          },
          "/",
          {
           "Fn::Select": [
            1,
            {
             "Fn::Split": [
              "/",
              {
               "Fn::Select": [
                5,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Ref": "Fargatex64spottask4C8B023D"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         ]
        ]
       }
      },
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Fargatex64spottaskTaskRole02893C25",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "Fargatex64spottaskExecutionRoleD0E0B7D6",
          "Arn"
         ]
        }
       ]
      },
      {
       "Action": "ecs:RunTask",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Fn::Select": [
            1,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "Fargatearm64taskECD67399"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            2,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "Fargatearm64taskECD67399"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "Fargatearm64taskECD67399"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "Fargatearm64taskECD67399"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            0,
            {
             "Fn::Split": [
              "/",
              {
               "Fn::Select": [
                5,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Ref": "Fargatearm64taskECD67399"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          },
          "/",
          {
           "Fn::Select": [
            1,
            {
             "Fn::Split": [
              "/",
              {
               "Fn::Select": [
                5,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Ref": "Fargatearm64taskECD67399"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         ]
        ]
       }
      },
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Fargatearm64taskTaskRoleD3C2CD58",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "Fargatearm64taskExecutionRoleD10B61DC",
          "Arn"
         ]
        }
       ]
      },
      {
       "Action": "ecs:RunTask",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Fn::Select": [
            1,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "Fargatearm64spottaskD21E60F2"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            2,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "Fargatearm64spottaskD21E60F2"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "Fargatearm64spottaskD21E60F2"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "Fargatearm64spottaskD21E60F2"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            0,
            {
             "Fn::Split": [
              "/",
              {
               "Fn::Select": [
                5,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Ref": "Fargatearm64spottaskD21E60F2"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          },
          "/",
          {
           "Fn::Select": [
            1,
            {
             "Fn::Split": [
              "/",
              {
               "Fn::Select": [
                5,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Ref": "Fargatearm64spottaskD21E60F2"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         ]
        ]
       }
      },
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Fargatearm64spottaskTaskRole0F078C81",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "Fargatearm64spottaskExecutionRole90E5A05B",
          "Arn"
         ]
        }
       ]
      },
      {
       "Action": "ecs:RunTask",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Fn::Select": [
            1,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargateWindowstask9F9B942D"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            2,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargateWindowstask9F9B942D"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargateWindowstask9F9B942D"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargateWindowstask9F9B942D"
              }
             ]
            }
           ]
          },
          ":",
          {
           "Fn::Select": [
            0,
            {
             "Fn::Split": [
              "/",
              {
               "Fn::Select": [
                5,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Ref": "FargateWindowstask9F9B942D"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          },
          "/",
          {
           "Fn::Select": [
            1,
            {
             "Fn::Split": [
              "/",
              {
               "Fn::Select": [
                5,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Ref": "FargateWindowstask9F9B942D"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         ]
        ]
       }
      },
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "FargateWindowstaskTaskRole364508C8",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "FargateWindowstaskExecutionRoleEE562927",
          "Arn"
         ]
        }
       ]
      },
      {
       "Action": "ec2:runInstances",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "iam:PassRole",
       "Condition": {
        "StringEquals": {
         "iam:PassedToService": "ec2.amazonaws.com"
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EC2LinuxRole8B6519A2",
         "Arn"
        ]
       }
      },
      {
       "Action": "ec2:createTags",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ec2:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":*"
         ]
        ]
       }
      },
      {
       "Action": "iam:CreateServiceLinkedRole",
       "Condition": {
        "StringEquals": {
         "iam:AWSServiceName": "spot.amazonaws.com"
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "iam:PassRole",
       "Condition": {
        "StringEquals": {
         "iam:PassedToService": "ec2.amazonaws.com"
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EC2SpotLinuxRole86333E5D",
         "Arn"
        ]
       }
      },
      {
       "Action": "iam:PassRole",
       "Condition": {
        "StringEquals": {
         "iam:PassedToService": "ec2.amazonaws.com"
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EC2Linuxarm64Role242F68FF",
         "Arn"
        ]
       }
      },
      {
       "Action": "iam:PassRole",
       "Condition": {
        "StringEquals": {
         "iam:PassedToService": "ec2.amazonaws.com"
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EC2WindowsRoleC0D850D2",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "runnersRunnerOrchestratorRoleDefaultPolicyD1C26D61",
    "Roles": [
     {
      "Ref": "runnersRunnerOrchestratorRole5D220AD7"
     }
    ]
   }
  },
  "runnersRunnerOrchestratorF9B66EBA": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "RoleArn": {
     "Fn::GetAtt": [
      "runnersRunnerOrchestratorRole5D220AD7",
      "Arn"
     ]
    },
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"Is self hosted?\",\"States\":{\"Is self hosted?\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.labels.self-hosted\",\"IsPresent\":false,\"Next\":\"No\"}],\"Default\":\"Get Runner Token\"},\"Get Runner Token\":{\"Next\":\"Error Catcher\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.runner\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "runnerstokenretrieverD5E8392A",
         "Arn"
        ]
       },
       "\"},\"Error Catcher\":{\"Type\":\"Parallel\",\"ResultPath\":\"$.result\",\"End\":true,\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"ResultPath\":\"$.error\",\"Next\":\"Delete Runner\"}],\"Branches\":[{\"StartAt\":\"Choose provider\",\"States\":{\"Choose provider\":{\"Type\":\"Choice\",\"Choices\":[{\"And\":[{\"Variable\":\"$.labels.codebuild-x64\",\"IsPresent\":true}],\"Next\":\"codebuild-x64\"},{\"And\":[{\"Variable\":\"$.labels.codebuild\",\"IsPresent\":true},{\"Variable\":\"$.labels.linux\",\"IsPresent\":true},{\"Variable\":\"$.labels.arm64\",\"IsPresent\":true}],\"Next\":\"codebuild, linux, arm64\"},{\"And\":[{\"Variable\":\"$.labels.codebuild\",\"IsPresent\":true},{\"Variable\":\"$.labels.windows\",\"IsPresent\":true},{\"Variable\":\"$.labels.x64\",\"IsPresent\":true}],\"Next\":\"codebuild, windows, x64\"},{\"And\":[{\"Variable\":\"$.labels.lambda\",\"IsPresent\":true},{\"Variable\":\"$.labels.x64\",\"IsPresent\":true}],\"Next\":\"lambda, x64\"},{\"And\":[{\"Variable\":\"$.labels.lambda\",\"IsPresent\":true},{\"Variable\":\"$.labels.arm64\",\"IsPresent\":true}],\"Next\":\"lambda, arm64\"},{\"And\":[{\"Variable\":\"$.labels.fargate\",\"IsPresent\":true},{\"Variable\":\"$.labels.linux\",\"IsPresent\":true},{\"Variable\":\"$.labels.x64\",\"IsPresent\":true}],\"Next\":\"fargate, linux, x64\"},{\"And\":[{\"Variable\":\"$.labels.fargate-spot\",\"IsPresent\":true},{\"Variable\":\"$.labels.linux\",\"IsPresent\":true},{\"Variable\":\"$.labels.x64\",\"IsPresent\":true}],\"Next\":\"fargate-spot, linux, x64\"},{\"And\":[{\"Variable\":\"$.labels.fargate\",\"IsPresent\":true},{\"Variable\":\"$.labels.linux\",\"IsPresent\":true},{\"Variable\":\"$.labels.arm64\",\"IsPresent\":true}],\"Next\":\"fargate, linux, arm64\"},{\"And\":[{\"Variable\":\"$.labels.fargate-spot\",\"IsPresent\":true},{\"Variable\":\"$.labels.linux\",\"IsPresent\":true},{\"Variable\":\"$.labels.arm64\",\"IsPresent\":true}],\"Next\":\"fargate-spot, linux, arm64\"},{\"And\":[{\"Variable\":\"$.labels.fargate\",\"IsPresent\":true},{\"Variable\":\"$.labels.windows\",\"IsPresent\":true},{\"Variable\":\"$.labels.x64\",\"IsPresent\":true}],\"Next\":\"fargate, windows, x64\"},{\"And\":[{\"Variable\":\"$.labels.ec2\",\"IsPresent\":true},{\"Variable\":\"$.labels.linux\",\"IsPresent\":true},{\"Variable\":\"$.labels.x64\",\"IsPresent\":true}],\"Next\":\"ec2, linux, x64 data\"},{\"And\":[{\"Variable\":\"$.labels.ec2-spot\",\"IsPresent\":true},{\"Variable\":\"$.labels.linux\",\"IsPresent\":true},{\"Variable\":\"$.labels.x64\",\"IsPresent\":true}],\"Next\":\"ec2-spot, linux, x64 data\"},{\"And\":[{\"Variable\":\"$.labels.ec2\",\"IsPresent\":true},{\"Variable\":\"$.labels.linux\",\"IsPresent\":true},{\"Variable\":\"$.labels.arm64\",\"IsPresent\":true}],\"Next\":\"ec2, linux, arm64 data\"},{\"And\":[{\"Variable\":\"$.labels.ec2\",\"IsPresent\":true},{\"Variable\":\"$.labels.windows\",\"IsPresent\":true},{\"Variable\":\"$.labels.x64\",\"IsPresent\":true}],\"Next\":\"ec2, windows, x64 data\"}],\"Default\":\"Unknown label\"},\"Unknown label\":{\"Type\":\"Succeed\"},\"codebuild-x64\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::codebuild:startBuild.sync\",\"Parameters\":{\"ProjectName\":\"",
       {
        "Ref": "CodeBuildx64CodeBuild7DC01A1E"
       },
       "\",\"EnvironmentVariablesOverride\":[{\"Name\":\"RUNNER_TOKEN\",\"Type\":\"PLAINTEXT\",\"Value.$\":\"$.runner.token\"},{\"Name\":\"RUNNER_NAME\",\"Type\":\"PLAINTEXT\",\"Value.$\":\"$$.Execution.Name\"},{\"Name\":\"RUNNER_LABEL\",\"Type\":\"PLAINTEXT\",\"Value\":\"codebuild-x64\"},{\"Name\":\"GITHUB_DOMAIN\",\"Type\":\"PLAINTEXT\",\"Value.$\":\"$.runner.domain\"},{\"Name\":\"OWNER\",\"Type\":\"PLAINTEXT\",\"Value.$\":\"$.owner\"},{\"Name\":\"REPO\",\"Type\":\"PLAINTEXT\",\"Value.$\":\"$.repo\"}]}},\"codebuild, linux, arm64\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::codebuild:startBuild.sync\",\"Parameters\":{\"ProjectName\":\"",
       {
        "Ref": "CodeBuildARMCodeBuildC5F301F2"
       },
       "\",\"EnvironmentVariablesOverride\":[{\"Name\":\"RUNNER_TOKEN\",\"Type\":\"PLAINTEXT\",\"Value.$\":\"$.runner.token\"},{\"Name\":\"RUNNER_NAME\",\"Type\":\"PLAINTEXT\",\"Value.$\":\"$$.Execution.Name\"},{\"Name\":\"RUNNER_LABEL\",\"Type\":\"PLAINTEXT\",\"Value\":\"codebuild,linux,arm64\"},{\"Name\":\"GITHUB_DOMAIN\",\"Type\":\"PLAINTEXT\",\"Value.$\":\"$.runner.domain\"},{\"Name\":\"OWNER\",\"Type\":\"PLAINTEXT\",\"Value.$\":\"$.owner\"},{\"Name\":\"REPO\",\"Type\":\"PLAINTEXT\",\"Value.$\":\"$.repo\"}]}},\"codebuild, windows, x64\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::codebuild:startBuild.sync\",\"Parameters\":{\"ProjectName\":\"",
       {
        "Ref": "CodeBuildWindowsCodeBuildC39F35C1"
       },
       "\",\"EnvironmentVariablesOverride\":[{\"Name\":\"RUNNER_TOKEN\",\"Type\":\"PLAINTEXT\",\"Value.$\":\"$.runner.token\"},{\"Name\":\"RUNNER_NAME\",\"Type\":\"PLAINTEXT\",\"Value.$\":\"$$.Execution.Name\"},{\"Name\":\"RUNNER_LABEL\",\"Type\":\"PLAINTEXT\",\"Value\":\"codebuild,windows,x64\"},{\"Name\":\"GITHUB_DOMAIN\",\"Type\":\"PLAINTEXT\",\"Value.$\":\"$.runner.domain\"},{\"Name\":\"OWNER\",\"Type\":\"PLAINTEXT\",\"Value.$\":\"$.owner\"},{\"Name\":\"REPO\",\"Type\":\"PLAINTEXT\",\"Value.$\":\"$.repo\"}]}},\"lambda, x64\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "LambdaFunction9233991D",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"token.$\":\"$.runner.token\",\"runnerName.$\":\"$$.Execution.Name\",\"label\":\"lambda,x64\",\"githubDomain.$\":\"$.runner.domain\",\"owner.$\":\"$.owner\",\"repo.$\":\"$.repo\"}}},\"lambda, arm64\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "LambdaARMFunctionDD4B5FF7",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"token.$\":\"$.runner.token\",\"runnerName.$\":\"$$.Execution.Name\",\"label\":\"lambda,arm64\",\"githubDomain.$\":\"$.runner.domain\",\"owner.$\":\"$.owner\",\"repo.$\":\"$.repo\"}}},\"fargate, linux, x64\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
       {
        "Fn::GetAtt": [
         "cluster611F8AFF",
         "Arn"
        ]
       },
       "\",\"TaskDefinition\":\"githubrunnerstestFargatetaskA755E0CE\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"AssignPublicIp\":\"ENABLED\",\"Subnets\":[\"",
       {
        "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
       },
       "\",\"",
       {
        "Ref": "VpcPublicSubnet2Subnet691E08A3"
       },
       "\"],\"SecurityGroups\":[\"",
       {
        "Fn::GetAtt": [
         "FargatesecuritygroupAFCAFD34",
         "GroupId"
        ]
       },
       "\"]}},\"Overrides\":{\"ContainerOverrides\":[{\"Name\":\"runner\",\"Environment\":[{\"Name\":\"RUNNER_TOKEN\",\"Value.$\":\"$.runner.token\"},{\"Name\":\"RUNNER_NAME\",\"Value.$\":\"$$.Execution.Name\"},{\"Name\":\"RUNNER_LABEL\",\"Value\":\"fargate,linux,x64\"},{\"Name\":\"GITHUB_DOMAIN\",\"Value.$\":\"$.runner.domain\"},{\"Name\":\"OWNER\",\"Value.$\":\"$.owner\"},{\"Name\":\"REPO\",\"Value.$\":\"$.repo\"}]}]},\"EnableExecuteCommand\":true,\"CapacityProviderStrategy\":[{\"CapacityProvider\":\"FARGATE\"}]}},\"fargate-spot, linux, x64\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
       {
        "Fn::GetAtt": [
         "cluster611F8AFF",
         "Arn"
        ]
       },
       "\",\"TaskDefinition\":\"githubrunnerstestFargatex64spottask7B2E300E\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"AssignPublicIp\":\"ENABLED\",\"Subnets\":[\"",
       {
        "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
       },
       "\",\"",
       {
        "Ref": "VpcPublicSubnet2Subnet691E08A3"
       },
       "\"],\"SecurityGroups\":[\"",
       {
        "Fn::GetAtt": [
         "Fargatex64spotsecuritygroup2A9F4299",
         "GroupId"
        ]
       },
       "\"]}},\"Overrides\":{\"ContainerOverrides\":[{\"Name\":\"runner\",\"Environment\":[{\"Name\":\"RUNNER_TOKEN\",\"Value.$\":\"$.runner.token\"},{\"Name\":\"RUNNER_NAME\",\"Value.$\":\"$$.Execution.Name\"},{\"Name\":\"RUNNER_LABEL\",\"Value\":\"fargate-spot,linux,x64\"},{\"Name\":\"GITHUB_DOMAIN\",\"Value.$\":\"$.runner.domain\"},{\"Name\":\"OWNER\",\"Value.$\":\"$.owner\"},{\"Name\":\"REPO\",\"Value.$\":\"$.repo\"}]}]},\"EnableExecuteCommand\":true,\"CapacityProviderStrategy\":[{\"CapacityProvider\":\"FARGATE_SPOT\"}]}},\"fargate, linux, arm64\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
       {
        "Fn::GetAtt": [
         "cluster611F8AFF",
         "Arn"
        ]
       },
       "\",\"TaskDefinition\":\"githubrunnerstestFargatearm64task6B95C05B\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"AssignPublicIp\":\"ENABLED\",\"Subnets\":[\"",
       {
        "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
       },
       "\",\"",
       {
        "Ref": "VpcPublicSubnet2Subnet691E08A3"
       },
       "\"],\"SecurityGroups\":[\"",
       {
        "Fn::GetAtt": [
         "Fargatearm64securitygroup08ABAD9E",
         "GroupId"
        ]
       },
       "\"]}},\"Overrides\":{\"ContainerOverrides\":[{\"Name\":\"runner\",\"Environment\":[{\"Name\":\"RUNNER_TOKEN\",\"Value.$\":\"$.runner.token\"},{\"Name\":\"RUNNER_NAME\",\"Value.$\":\"$$.Execution.Name\"},{\"Name\":\"RUNNER_LABEL\",\"Value\":\"fargate,linux,arm64\"},{\"Name\":\"GITHUB_DOMAIN\",\"Value.$\":\"$.runner.domain\"},{\"Name\":\"OWNER\",\"Value.$\":\"$.owner\"},{\"Name\":\"REPO\",\"Value.$\":\"$.repo\"}]}]},\"EnableExecuteCommand\":true,\"CapacityProviderStrategy\":[{\"CapacityProvider\":\"FARGATE\"}]}},\"fargate-spot, linux, arm64\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
       {
        "Fn::GetAtt": [
         "cluster611F8AFF",
         "Arn"
        ]
       },
       "\",\"TaskDefinition\":\"githubrunnerstestFargatearm64spottaskF9ADF192\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"AssignPublicIp\":\"ENABLED\",\"Subnets\":[\"",
       {
        "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
       },
       "\",\"",
       {
        "Ref": "VpcPublicSubnet2Subnet691E08A3"
       },
       "\"],\"SecurityGroups\":[\"",
       {
        "Fn::GetAtt": [
         "Fargatearm64spotsecuritygroup20C885E4",
         "GroupId"
        ]
       },
       "\"]}},\"Overrides\":{\"ContainerOverrides\":[{\"Name\":\"runner\",\"Environment\":[{\"Name\":\"RUNNER_TOKEN\",\"Value.$\":\"$.runner.token\"},{\"Name\":\"RUNNER_NAME\",\"Value.$\":\"$$.Execution.Name\"},{\"Name\":\"RUNNER_LABEL\",\"Value\":\"fargate-spot,linux,arm64\"},{\"Name\":\"GITHUB_DOMAIN\",\"Value.$\":\"$.runner.domain\"},{\"Name\":\"OWNER\",\"Value.$\":\"$.owner\"},{\"Name\":\"REPO\",\"Value.$\":\"$.repo\"}]}]},\"EnableExecuteCommand\":true,\"CapacityProviderStrategy\":[{\"CapacityProvider\":\"FARGATE\"}]}},\"fargate, windows, x64\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
       {
        "Fn::GetAtt": [
         "cluster611F8AFF",
         "Arn"
        ]
       },
       "\",\"TaskDefinition\":\"githubrunnerstestFargateWindowstask95BB2245\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"AssignPublicIp\":\"ENABLED\",\"Subnets\":[\"",
       {
        "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
       },
       "\",\"",
       {
        "Ref": "VpcPublicSubnet2Subnet691E08A3"
       },
       "\"],\"SecurityGroups\":[\"",
       {
        "Fn::GetAtt": [
         "FargateWindowssecuritygroupE684A7B0",
         "GroupId"
        ]
       },
       "\"]}},\"Overrides\":{\"ContainerOverrides\":[{\"Name\":\"runner\",\"Environment\":[{\"Name\":\"RUNNER_TOKEN\",\"Value.$\":\"$.runner.token\"},{\"Name\":\"RUNNER_NAME\",\"Value.$\":\"$$.Execution.Name\"},{\"Name\":\"RUNNER_LABEL\",\"Value\":\"fargate,windows,x64\"},{\"Name\":\"GITHUB_DOMAIN\",\"Value.$\":\"$.runner.domain\"},{\"Name\":\"OWNER\",\"Value.$\":\"$.owner\"},{\"Name\":\"REPO\",\"Value.$\":\"$.repo\"}]}]},\"EnableExecuteCommand\":false,\"CapacityProviderStrategy\":[{\"CapacityProvider\":\"FARGATE\"}]}},\"ec2, linux, x64 data\":{\"Type\":\"Pass\",\"ResultPath\":\"$.ec2\",\"Parameters\":{\"userdataTemplate\":\"#!/bin/bash -x\\nTASK_TOKEN=\\\"{}\\\"\\nheartbeat () \\\\{\\n  while true; do\\n    aws stepfunctions send-task-heartbeat --task-token \\\"$TASK_TOKEN\\\"\\n    sleep 60\\n  done\\n\\\\}\\nsetup_logs () \\\\{\\n  cat <<EOF > /tmp/log.conf || exit 1\\n  \\\\{\\n    \\\"logs\\\": \\\\{\\n      \\\"log_stream_name\\\": \\\"unknown\\\",\\n      \\\"logs_collected\\\": \\\\{\\n        \\\"files\\\": \\\\{\\n          \\\"collect_list\\\": [\\n            \\\\{\\n              \\\"file_path\\\": \\\"/var/log/runner.log\\\",\\n              \\\"log_group_name\\\": \\\"{}\\\",\\n              \\\"log_stream_name\\\": \\\"{}\\\",\\n              \\\"timezone\\\": \\\"UTC\\\"\\n            \\\\}\\n          ]\\n        \\\\}\\n      \\\\}\\n    \\\\}\\n  \\\\}\\nEOF\\n  /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/tmp/log.conf || exit 2\\n\\\\}\\naction () \\\\{\\n  sudo -Hu runner /home/runner/config.sh --unattended --url \\\"https://{}/{}/{}\\\" --token \\\"{}\\\" --ephemeral --work _work --labels \\\"{}\\\" {} --name \\\"{}\\\" || exit 1\\n  sudo --preserve-env=AWS_REGION -Hu runner /home/runner/run.sh || exit 2\\n\\\\}\\nheartbeat &\\nif setup_logs && action | tee /var/log/runner.log 2>&1; then\\n  aws stepfunctions send-task-success --task-token \\\"$TASK_TOKEN\\\" --task-output '\\\\{\\\"ok\\\": true\\\\}'\\nelse\\n  aws stepfunctions send-task-failure --task-token \\\"$TASK_TOKEN\\\"\\nfi\\npoweroff\\n\"},\"Next\":\"ec2, linux, x64\"},\"ec2, linux, x64\":{\"End\":true,\"Type\":\"Task\",\"HeartbeatSeconds\":300,\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::aws-sdk:ec2:runInstances.waitForTaskToken\",\"Parameters\":{\"LaunchTemplate\":{\"LaunchTemplateId\":\"",
       {
        "Ref": "AMILinuxBuilderLaunchtemplateA29452C4"
       },
       "\"},\"MinCount\":1,\"MaxCount\":1,\"InstanceType\":\"m5.large\",\"UserData.$\":\"States.Base64Encode(States.Format($.ec2.userdataTemplate, $$.Task.Token, '",
       {
        "Ref": "EC2LinuxLogsC4CD8F14"
       },
       "', $$.Execution.Name, $.runner.domain, $.owner, $.repo, $.runner.token, 'ec2,linux,x64', '', $$.Execution.Name))\",\"InstanceInitiatedShutdownBehavior\":\"terminate\",\"IamInstanceProfile\":{\"Arn\":\"",
       {
        "Fn::GetAtt": [
         "EC2LinuxInstanceProfile2D2BB473",
         "Arn"
        ]
       },
       "\"},\"MetadataOptions\":{\"HttpTokens\":\"required\"},\"SecurityGroupIds\":[\"",
       {
        "Fn::GetAtt": [
         "EC2LinuxSGF5B89300",
         "GroupId"
        ]
       },
       "\"],\"SubnetId\":\"",
       {
        "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
       },
       "\",\"BlockDeviceMappings\":[{\"DeviceName\":\"/dev/sda1\",\"Ebs\":{\"DeleteOnTermination\":true,\"VolumeSize\":30}}]}},\"ec2-spot, linux, x64 data\":{\"Type\":\"Pass\",\"ResultPath\":\"$.ec2\",\"Parameters\":{\"userdataTemplate\":\"#!/bin/bash -x\\nTASK_TOKEN=\\\"{}\\\"\\nheartbeat () \\\\{\\n  while true; do\\n    aws stepfunctions send-task-heartbeat --task-token \\\"$TASK_TOKEN\\\"\\n    sleep 60\\n  done\\n\\\\}\\nsetup_logs () \\\\{\\n  cat <<EOF > /tmp/log.conf || exit 1\\n  \\\\{\\n    \\\"logs\\\": \\\\{\\n      \\\"log_stream_name\\\": \\\"unknown\\\",\\n      \\\"logs_collected\\\": \\\\{\\n        \\\"files\\\": \\\\{\\n          \\\"collect_list\\\": [\\n            \\\\{\\n              \\\"file_path\\\": \\\"/var/log/runner.log\\\",\\n              \\\"log_group_name\\\": \\\"{}\\\",\\n              \\\"log_stream_name\\\": \\\"{}\\\",\\n              \\\"timezone\\\": \\\"UTC\\\"\\n            \\\\}\\n          ]\\n        \\\\}\\n      \\\\}\\n    \\\\}\\n  \\\\}\\nEOF\\n  /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/tmp/log.conf || exit 2\\n\\\\}\\naction () \\\\{\\n  sudo -Hu runner /home/runner/config.sh --unattended --url \\\"https://{}/{}/{}\\\" --token \\\"{}\\\" --ephemeral --work _work --labels \\\"{}\\\" {} --name \\\"{}\\\" || exit 1\\n  sudo --preserve-env=AWS_REGION -Hu runner /home/runner/run.sh || exit 2\\n\\\\}\\nheartbeat &\\nif setup_logs && action | tee /var/log/runner.log 2>&1; then\\n  aws stepfunctions send-task-success --task-token \\\"$TASK_TOKEN\\\" --task-output '\\\\{\\\"ok\\\": true\\\\}'\\nelse\\n  aws stepfunctions send-task-failure --task-token \\\"$TASK_TOKEN\\\"\\nfi\\npoweroff\\n\"},\"Next\":\"ec2-spot, linux, x64\"},\"ec2-spot, linux, x64\":{\"End\":true,\"Type\":\"Task\",\"HeartbeatSeconds\":300,\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::aws-sdk:ec2:runInstances.waitForTaskToken\",\"Parameters\":{\"LaunchTemplate\":{\"LaunchTemplateId\":\"",
       {
        "Ref": "AMILinuxBuilderLaunchtemplateA29452C4"
       },
       "\"},\"MinCount\":1,\"MaxCount\":1,\"InstanceType\":\"m5.large\",\"UserData.$\":\"States.Base64Encode(States.Format($.ec2.userdataTemplate, $$.Task.Token, '",
       {
        "Ref": "EC2SpotLinuxLogsF78D5F0E"
       },
       "', $$.Execution.Name, $.runner.domain, $.owner, $.repo, $.runner.token, 'ec2-spot,linux,x64', '', $$.Execution.Name))\",\"InstanceInitiatedShutdownBehavior\":\"terminate\",\"IamInstanceProfile\":{\"Arn\":\"",
       {
        "Fn::GetAtt": [
         "EC2SpotLinuxInstanceProfileB12320D4",
         "Arn"
        ]
       },
       "\"},\"MetadataOptions\":{\"HttpTokens\":\"required\"},\"SecurityGroupIds\":[\"",
       {
        "Fn::GetAtt": [
         "EC2SpotLinuxSG8D846B64",
         "GroupId"
        ]
       },
       "\"],\"SubnetId\":\"",
       {
        "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
       },
       "\",\"BlockDeviceMappings\":[{\"DeviceName\":\"/dev/sda1\",\"Ebs\":{\"DeleteOnTermination\":true,\"VolumeSize\":30}}],\"InstanceMarketOptions\":{\"MarketType\":\"spot\",\"SpotOptions\":{\"SpotInstanceType\":\"one-time\"}}}},\"ec2, linux, arm64 data\":{\"Type\":\"Pass\",\"ResultPath\":\"$.ec2\",\"Parameters\":{\"userdataTemplate\":\"#!/bin/bash -x\\nTASK_TOKEN=\\\"{}\\\"\\nheartbeat () \\\\{\\n  while true; do\\n    aws stepfunctions send-task-heartbeat --task-token \\\"$TASK_TOKEN\\\"\\n    sleep 60\\n  done\\n\\\\}\\nsetup_logs () \\\\{\\n  cat <<EOF > /tmp/log.conf || exit 1\\n  \\\\{\\n    \\\"logs\\\": \\\\{\\n      \\\"log_stream_name\\\": \\\"unknown\\\",\\n      \\\"logs_collected\\\": \\\\{\\n        \\\"files\\\": \\\\{\\n          \\\"collect_list\\\": [\\n            \\\\{\\n              \\\"file_path\\\": \\\"/var/log/runner.log\\\",\\n              \\\"log_group_name\\\": \\\"{}\\\",\\n              \\\"log_stream_name\\\": \\\"{}\\\",\\n              \\\"timezone\\\": \\\"UTC\\\"\\n            \\\\}\\n          ]\\n        \\\\}\\n      \\\\}\\n    \\\\}\\n  \\\\}\\nEOF\\n  /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/tmp/log.conf || exit 2\\n\\\\}\\naction () \\\\{\\n  sudo -Hu runner /home/runner/config.sh --unattended --url \\\"https://{}/{}/{}\\\" --token \\\"{}\\\" --ephemeral --work _work --labels \\\"{}\\\" {} --name \\\"{}\\\" || exit 1\\n  sudo --preserve-env=AWS_REGION -Hu runner /home/runner/run.sh || exit 2\\n\\\\}\\nheartbeat &\\nif setup_logs && action | tee /var/log/runner.log 2>&1; then\\n  aws stepfunctions send-task-success --task-token \\\"$TASK_TOKEN\\\" --task-output '\\\\{\\\"ok\\\": true\\\\}'\\nelse\\n  aws stepfunctions send-task-failure --task-token \\\"$TASK_TOKEN\\\"\\nfi\\npoweroff\\n\"},\"Next\":\"ec2, linux, arm64\"},\"ec2, linux, arm64\":{\"End\":true,\"Type\":\"Task\",\"HeartbeatSeconds\":300,\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::aws-sdk:ec2:runInstances.waitForTaskToken\",\"Parameters\":{\"LaunchTemplate\":{\"LaunchTemplateId\":\"",
       {
        "Ref": "AMILinuxarm64BuilderLaunchtemplate8F5EFF44"
       },
       "\"},\"MinCount\":1,\"MaxCount\":1,\"InstanceType\":\"m6g.large\",\"UserData.$\":\"States.Base64Encode(States.Format($.ec2.userdataTemplate, $$.Task.Token, '",
       {
        "Ref": "EC2Linuxarm64Logs577E371E"
       },
       "', $$.Execution.Name, $.runner.domain, $.owner, $.repo, $.runner.token, 'ec2,linux,arm64', '', $$.Execution.Name))\",\"InstanceInitiatedShutdownBehavior\":\"terminate\",\"IamInstanceProfile\":{\"Arn\":\"",
       {
        "Fn::GetAtt": [
         "EC2Linuxarm64InstanceProfile1E6F8D53",
         "Arn"
        ]
       },
       "\"},\"MetadataOptions\":{\"HttpTokens\":\"required\"},\"SecurityGroupIds\":[\"",
       {
        "Fn::GetAtt": [
         "EC2Linuxarm64SG550ECD6C",
         "GroupId"
        ]
       },
       "\"],\"SubnetId\":\"",
       {
        "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
       },
       "\",\"BlockDeviceMappings\":[{\"DeviceName\":\"/dev/sda1\",\"Ebs\":{\"DeleteOnTermination\":true,\"VolumeSize\":30}}]}},\"ec2, windows, x64 data\":{\"Type\":\"Pass\",\"ResultPath\":\"$.ec2\",\"Parameters\":{\"userdataTemplate\":\"<powershell>\\n$TASK_TOKEN = \\\"{}\\\"\\nStart-Job -ScriptBlock \\\\{\\n  while (1) \\\\{\\n    aws stepfunctions send-task-heartbeat --task-token \\\"$using:TASK_TOKEN\\\"\\n    sleep 60\\n  \\\\}\\n\\\\}\\nfunction setup_logs () \\\\{\\n  echo '\\\\{\\n    \\\"logs\\\": \\\\{\\n      \\\"log_stream_name\\\": \\\"unknown\\\",\\n      \\\"logs_collected\\\": \\\\{\\n        \\\"files\\\": \\\\{\\n         \\\"collect_list\\\": [\\n            \\\\{\\n              \\\"file_path\\\": \\\"/actions/runner.log\\\",\\n              \\\"log_group_name\\\": \\\"{}\\\",\\n              \\\"log_stream_name\\\": \\\"{}\\\",\\n              \\\"timezone\\\": \\\"UTC\\\"\\n            \\\\}\\n          ]\\n        \\\\}\\n      \\\\}\\n    \\\\}\\n  \\\\}' | Out-File -Encoding ASCII $Env:TEMP/log.conf\\n  & \\\"C:/Program Files/Amazon/AmazonCloudWatchAgent/amazon-cloudwatch-agent-ctl.ps1\\\" -a fetch-config -m ec2 -s -c file:$Env:TEMP/log.conf\\n\\\\}\\nfunction action () \\\\{\\n  cd /actions\\n  ./config.cmd --unattended --url \\\"https://{}/{}/{}\\\" --token \\\"{}\\\" --ephemeral --work _work --labels \\\"{}\\\" {} --name \\\"{}\\\" 2>&1 | Out-File -Encoding ASCII -Append /actions/runner.log\\n  if ($LASTEXITCODE -ne 0) \\\\{ return 1 \\\\}\\n  ./run.cmd 2>&1 | Out-File -Encoding ASCII -Append /actions/runner.log\\n  if ($LASTEXITCODE -ne 0) \\\\{ return 2 \\\\}\\n  return 0\\n\\\\}\\nsetup_logs\\n$r = action\\nif ($r -eq 0) \\\\{\\n  aws stepfunctions send-task-success --task-token \\\"$TASK_TOKEN\\\" --task-output '\\\\{ \\\\}'\\n\\\\} else \\\\{\\n  aws stepfunctions send-task-failure --task-token \\\"$TASK_TOKEN\\\"\\n\\\\}\\nStop-Computer -ComputerName localhost -Force\\n</powershell>\\n\"},\"Next\":\"ec2, windows, x64\"},\"ec2, windows, x64\":{\"End\":true,\"Type\":\"Task\",\"HeartbeatSeconds\":300,\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::aws-sdk:ec2:runInstances.waitForTaskToken\",\"Parameters\":{\"LaunchTemplate\":{\"LaunchTemplateId\":\"",
       {
        "Ref": "WindowsEC2BuilderLaunchtemplate0A66E9C2"
       },
       "\"},\"MinCount\":1,\"MaxCount\":1,\"InstanceType\":\"m5.large\",\"UserData.$\":\"States.Base64Encode(States.Format($.ec2.userdataTemplate, $$.Task.Token, '",
       {
        "Ref": "EC2WindowsLogsDC1F2ABF"
       },
       "', $$.Execution.Name, $.runner.domain, $.owner, $.repo, $.runner.token, 'ec2,windows,x64', '', $$.Execution.Name))\",\"InstanceInitiatedShutdownBehavior\":\"terminate\",\"IamInstanceProfile\":{\"Arn\":\"",
       {
        "Fn::GetAtt": [
         "EC2WindowsInstanceProfileDCA59D9C",
         "Arn"
        ]
       },
       "\"},\"MetadataOptions\":{\"HttpTokens\":\"required\"},\"SecurityGroupIds\":[\"",
       {
        "Fn::GetAtt": [
         "EC2WindowsSG13E24976",
         "GroupId"
        ]
       },
       "\"],\"SubnetId\":\"",
       {
        "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
       },
       "\",\"BlockDeviceMappings\":[{\"DeviceName\":\"/dev/sda1\",\"Ebs\":{\"DeleteOnTermination\":true,\"VolumeSize\":30}}]}}}},{\"StartAt\":\"Wait\",\"States\":{\"Wait\":{\"Type\":\"Wait\",\"Seconds\":600,\"Next\":\"Delete Idle Runner\"},\"Delete Idle Runner\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.delete\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "runnersdeleterunner7F8D5293",
         "Arn"
        ]
       },
       "\",\"Parameters\":{\"runnerName.$\":\"$$.Execution.Name\",\"owner.$\":\"$.owner\",\"repo.$\":\"$.repo\",\"runId.$\":\"$.runId\",\"installationId.$\":\"$.installationId\",\"idleOnly\":true}}}}]},\"Delete Runner\":{\"Next\":\"Runner Failed\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"RunnerBusy\"],\"IntervalSeconds\":60,\"MaxAttempts\":60,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":\"$.delete\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "runnersdeleterunner7F8D5293",
         "Arn"
        ]
       },
       "\",\"Parameters\":{\"runnerName.$\":\"$$.Execution.Name\",\"owner.$\":\"$.owner\",\"repo.$\":\"$.repo\",\"runId.$\":\"$.runId\",\"installationId.$\":\"$.installationId\",\"idleOnly\":false}},\"Runner Failed\":{\"Type\":\"Fail\"},\"No\":{\"Type\":\"Succeed\"}}}"
      ]
     ]
    }
   },
   "DependsOn": [
    "runnersRunnerOrchestratorRoleDefaultPolicyD1C26D61",
    "runnersRunnerOrchestratorRole5D220AD7"
   ]
  },
  "runnersWebhookHandlerwebhookhandlerServiceRole03DB58D2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "runnersWebhookHandlerwebhookhandlerServiceRoleDefaultPolicy1600452C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersSecretsWebhook7AF0D74E"
       }
      },
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersRunnerOrchestratorF9B66EBA"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "runnersWebhookHandlerwebhookhandlerServiceRoleDefaultPolicy1600452C",
    "Roles": [
     {
      "Ref": "runnersWebhookHandlerwebhookhandlerServiceRole03DB58D2"
     }
    ]
   }
  },
  "runnersWebhookHandlerwebhookhandler22779A81": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "709fef0716eee2709012f6546e06fe02accd7dca0ce8cb276f2b374f3cb12252.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "runnersWebhookHandlerwebhookhandlerServiceRole03DB58D2",
      "Arn"
     ]
    },
    "Description": "Handle GitHub webhook and start runner orchestrator",
    "Environment": {
     "Variables": {
      "STEP_FUNCTION_ARN": {
       "Ref": "runnersRunnerOrchestratorF9B66EBA"
      },
      "WEBHOOK_SECRET_ARN": {
       "Ref": "runnersSecretsWebhook7AF0D74E"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Timeout": 30
   },
   "DependsOn": [
    "runnersWebhookHandlerwebhookhandlerServiceRoleDefaultPolicy1600452C",
    "runnersWebhookHandlerwebhookhandlerServiceRole03DB58D2"
   ]
  },
  "runnersWebhookHandlerwebhookhandlerLogRetention0F5ED260": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "runnersWebhookHandlerwebhookhandler22779A81"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "runnersWebhookHandlerwebhookhandlerFunctionUrlC8FB3D17": {
   "Type": "AWS::Lambda::Url",
   "Properties": {
    "AuthType": "NONE",
    "TargetFunctionArn": {
     "Fn::GetAtt": [
      "runnersWebhookHandlerwebhookhandler22779A81",
      "Arn"
     ]
    }
   }
  },
  "runnersWebhookHandlerwebhookhandlerinvokefunctionurl871AC245": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunctionUrl",
    "FunctionName": {
     "Fn::GetAtt": [
      "runnersWebhookHandlerwebhookhandler22779A81",
      "Arn"
     ]
    },
    "Principal": "*",
    "FunctionUrlAuthType": "NONE"
   }
  },
  "runnerssetupServiceRole588BFE9A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "runnerssetupServiceRoleDefaultPolicy40EF213B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:PutSecretValue",
        "secretsmanager:UpdateSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersSecretsWebhook7AF0D74E"
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersSecretsGitHubEFD96479"
       }
      },
      {
       "Action": [
        "secretsmanager:PutSecretValue",
        "secretsmanager:UpdateSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersSecretsGitHubEFD96479"
       }
      },
      {
       "Action": [
        "secretsmanager:PutSecretValue",
        "secretsmanager:UpdateSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersSecretsGitHubPrivateKey79498F91"
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersSecretsSetup692A93B1"
       }
      },
      {
       "Action": [
        "secretsmanager:PutSecretValue",
        "secretsmanager:UpdateSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersSecretsSetup692A93B1"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "runnerssetupServiceRoleDefaultPolicy40EF213B",
    "Roles": [
     {
      "Ref": "runnerssetupServiceRole588BFE9A"
     }
    ]
   }
  },
  "runnerssetup9896CB59": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "baa64813d9b2397b608cc3063c7f634cbbc91698ce3bef41052bee7cab26dfa0.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "runnerssetupServiceRole588BFE9A",
      "Arn"
     ]
    },
    "Description": "Setup GitHub Actions integration with self-hosted runners",
    "Environment": {
     "Variables": {
      "SETUP_SECRET_ARN": {
       "Ref": "runnersSecretsSetup692A93B1"
      },
      "WEBHOOK_SECRET_ARN": {
       "Ref": "runnersSecretsWebhook7AF0D74E"
      },
      "GITHUB_SECRET_ARN": {
       "Ref": "runnersSecretsGitHubEFD96479"
      },
      "GITHUB_PRIVATE_KEY_SECRET_ARN": {
       "Ref": "runnersSecretsGitHubPrivateKey79498F91"
      },
      "WEBHOOK_URL": {
       "Fn::GetAtt": [
        "runnersWebhookHandlerwebhookhandlerFunctionUrlC8FB3D17",
        "FunctionUrl"
       ]
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Timeout": 180
   },
   "DependsOn": [
    "runnerssetupServiceRoleDefaultPolicy40EF213B",
    "runnerssetupServiceRole588BFE9A"
   ]
  },
  "runnerssetupLogRetentionA9A82D27": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "runnerssetup9896CB59"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "runnerssetupFunctionUrlB8BC43E8": {
   "Type": "AWS::Lambda::Url",
   "Properties": {
    "AuthType": "NONE",
    "TargetFunctionArn": {
     "Fn::GetAtt": [
      "runnerssetup9896CB59",
      "Arn"
     ]
    }
   }
  },
  "runnerssetupinvokefunctionurl5F3B865C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunctionUrl",
    "FunctionName": {
     "Fn::GetAtt": [
      "runnerssetup9896CB59",
      "Arn"
     ]
    },
    "Principal": "*",
    "FunctionUrlAuthType": "NONE"
   }
  },
  "runnersstatusServiceRole71A1ADB6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "runnersstatusServiceRoleDefaultPolicyBD4E619B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ecr:DescribeImages",
       "Effect": "Allow",
       "Resource": {
        "Ref": "CodeBuildImageBuilderB8638EC8"
       }
      },
      {
       "Action": "ecr:DescribeImages",
       "Effect": "Allow",
       "Resource": {
        "Ref": "CodeBuildImageBuilderarmBuilder755EB37D"
       }
      },
      {
       "Action": "ecr:DescribeImages",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Select": [
            0,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::Select": [
                1,
                {
                 "Fn::Split": [
                  "/",
                  {
                   "Fn::GetAtt": [
                    "WindowsImageBuilderImage7065BB07",
                    "ImageUri"
                   ]
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         ]
        ]
       }
      },
      {
       "Action": "ecr:DescribeImages",
       "Effect": "Allow",
       "Resource": {
        "Ref": "LambdaImageBuilderx64Builder42F384AF"
       }
      },
      {
       "Action": "ecr:DescribeImages",
       "Effect": "Allow",
       "Resource": {
        "Ref": "LambdaImageBuilderzBuilder235DD147"
       }
      },
      {
       "Action": "ecr:DescribeImages",
       "Effect": "Allow",
       "Resource": {
        "Ref": "FargatebuilderBuilder0834CD0B"
       }
      },
      {
       "Action": "ecr:DescribeImages",
       "Effect": "Allow",
       "Resource": {
        "Ref": "FargatebuilderarmBuilder48D1AF5A"
       }
      },
      {
       "Action": "ec2:DescribeLaunchTemplateVersions",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "cloudformation:DescribeStackResource",
       "Effect": "Allow",
       "Resource": {
        "Ref": "AWS::StackId"
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersSecretsWebhook7AF0D74E"
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersSecretsGitHubEFD96479"
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersSecretsGitHubPrivateKey79498F91"
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersSecretsSetup692A93B1"
       }
      },
      {
       "Action": [
        "states:ListExecutions",
        "states:ListStateMachines"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "runnersRunnerOrchestratorF9B66EBA"
       }
      },
      {
       "Action": [
        "states:DescribeExecution",
        "states:DescribeStateMachineForExecution",
        "states:GetExecutionHistory"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":states:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":execution:",
          {
           "Fn::Select": [
            6,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "runnersRunnerOrchestratorF9B66EBA"
              }
             ]
            }
           ]
          },
          ":*"
         ]
        ]
       }
      },
      {
       "Action": [
        "states:ListActivities",
        "states:DescribeStateMachine",
        "states:DescribeActivity"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "runnersstatusServiceRoleDefaultPolicyBD4E619B",
    "Roles": [
     {
      "Ref": "runnersstatusServiceRole71A1ADB6"
     }
    ]
   }
  },
  "runnersstatus1A5771C0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "165e1c4dfb9c46dd1e0d52c192374a9a1c16c01851d1aee4b48b5dc58bf31df0.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "runnersstatusServiceRole71A1ADB6",
      "Arn"
     ]
    },
    "Description": "Provide user with status about self-hosted GitHub Actions runners",
    "Environment": {
     "Variables": {
      "WEBHOOK_SECRET_ARN": {
       "Ref": "runnersSecretsWebhook7AF0D74E"
      },
      "GITHUB_SECRET_ARN": {
       "Ref": "runnersSecretsGitHubEFD96479"
      },
      "GITHUB_PRIVATE_KEY_SECRET_ARN": {
       "Ref": "runnersSecretsGitHubPrivateKey79498F91"
      },
      "SETUP_SECRET_ARN": {
       "Ref": "runnersSecretsSetup692A93B1"
      },
      "WEBHOOK_URL": {
       "Fn::GetAtt": [
        "runnersWebhookHandlerwebhookhandlerFunctionUrlC8FB3D17",
        "FunctionUrl"
       ]
      },
      "WEBHOOK_HANDLER_ARN": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::GetAtt": [
           "runnersWebhookHandlerwebhookhandler22779A81",
           "Arn"
          ]
         },
         ":$LATEST"
        ]
       ]
      },
      "STEP_FUNCTION_ARN": {
       "Ref": "runnersRunnerOrchestratorF9B66EBA"
      },
      "STEP_FUNCTION_LOG_GROUP": "",
      "SETUP_FUNCTION_URL": {
       "Fn::GetAtt": [
        "runnerssetupFunctionUrlB8BC43E8",
        "FunctionUrl"
       ]
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
      "LOGICAL_ID": "runnersstatus1A5771C0",
      "STACK_NAME": "github-runners-test"
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Timeout": 180
   },
   "DependsOn": [
    "runnersstatusServiceRoleDefaultPolicyBD4E619B",
    "runnersstatusServiceRole71A1ADB6"
   ],
   "Metadata": {
    "providers": [
     {
      "type": "CodeBuildRunner",
      "labels": [
       "codebuild-x64"
      ],
      "roleArn": {
       "Fn::GetAtt": [
        "CodeBuildx64CodeBuildRole32E5C764",
        "Arn"
       ]
      },
      "image": {
       "imageRepository": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "CodeBuildImageBuilderB8638EC8"
              }
             ]
            }
           ]
          },
          ".dkr.ecr.",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "CodeBuildImageBuilderB8638EC8"
              }
             ]
            }
           ]
          },
          ".",
          {
           "Ref": "AWS::URLSuffix"
          },
          "/",
          {
           "Fn::GetAtt": [
            "CodeBuildImageBuilderB8638EC8",
            "Name"
           ]
          }
         ]
        ]
       },
       "imageTag": "latest",
       "imageBuilderLogGroup": {
        "Ref": "CodeBuildImageBuilderLogsE4CADFCC"
       }
      }
     },
     {
      "type": "CodeBuildRunner",
      "labels": [
       "codebuild",
       "linux",
       "arm64"
      ],
      "roleArn": {
       "Fn::GetAtt": [
        "CodeBuildARMCodeBuildRole74DB4985",
        "Arn"
       ]
      },
      "image": {
       "imageRepository": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "CodeBuildImageBuilderarmBuilder755EB37D"
              }
             ]
            }
           ]
          },
          ".dkr.ecr.",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "CodeBuildImageBuilderarmBuilder755EB37D"
              }
             ]
            }
           ]
          },
          ".",
          {
           "Ref": "AWS::URLSuffix"
          },
          "/",
          {
           "Fn::GetAtt": [
            "CodeBuildImageBuilderarmBuilder755EB37D",
            "Name"
           ]
          }
         ]
        ]
       },
       "imageTag": "latest",
       "imageBuilderLogGroup": {
        "Ref": "CodeBuildImageBuilderarmLogs5A60CB81"
       }
      }
     },
     {
      "type": "CodeBuildRunner",
      "labels": [
       "codebuild",
       "windows",
       "x64"
      ],
      "roleArn": {
       "Fn::GetAtt": [
        "CodeBuildWindowsCodeBuildRoleDC93697E",
        "Arn"
       ]
      },
      "image": {
       "imageRepository": {
        "Fn::Join": [
         "",
         [
          {
           "Ref": "AWS::AccountId"
          },
          ".dkr.ecr.",
          {
           "Ref": "AWS::Region"
          },
          ".",
          {
           "Ref": "AWS::URLSuffix"
          },
          "/",
          {
           "Fn::Select": [
            0,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::Select": [
                1,
                {
                 "Fn::Split": [
                  "/",
                  {
                   "Fn::GetAtt": [
                    "WindowsImageBuilderImage7065BB07",
                    "ImageUri"
                   ]
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         ]
        ]
       },
       "imageTag": "latest",
       "imageBuilderLogGroup": {
        "Ref": "WindowsImageBuilderLog0E03408E"
       }
      }
     },
     {
      "type": "LambdaRunner",
      "labels": [
       "lambda",
       "x64"
      ],
      "roleArn": {
       "Fn::GetAtt": [
        "LambdaFunctionServiceRoleB1826A50",
        "Arn"
       ]
      },
      "image": {
       "imageRepository": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "LambdaImageBuilderx64Builder42F384AF"
              }
             ]
            }
           ]
          },
          ".dkr.ecr.",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "LambdaImageBuilderx64Builder42F384AF"
              }
             ]
            }
           ]
          },
          ".",
          {
           "Ref": "AWS::URLSuffix"
          },
          "/",
          {
           "Fn::GetAtt": [
            "LambdaImageBuilderx64Builder42F384AF",
            "Name"
           ]
          }
         ]
        ]
       },
       "imageTag": "latest",
       "imageBuilderLogGroup": {
        "Ref": "LambdaImageBuilderx64Logs1C003BB4"
       }
      }
     },
     {
      "type": "LambdaRunner",
      "labels": [
       "lambda",
       "arm64"
      ],
      "roleArn": {
       "Fn::GetAtt": [
        "LambdaARMFunctionServiceRole136069A0",
        "Arn"
       ]
      },
      "image": {
       "imageRepository": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "LambdaImageBuilderzBuilder235DD147"
              }
             ]
            }
           ]
          },
          ".dkr.ecr.",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "LambdaImageBuilderzBuilder235DD147"
              }
             ]
            }
           ]
          },
          ".",
          {
           "Ref": "AWS::URLSuffix"
          },
          "/",
          {
           "Fn::GetAtt": [
            "LambdaImageBuilderzBuilder235DD147",
            "Name"
           ]
          }
         ]
        ]
       },
       "imageTag": "latest",
       "imageBuilderLogGroup": {
        "Ref": "LambdaImageBuilderzLogsC9FB42C8"
       }
      }
     },
     {
      "type": "FargateRunner",
      "labels": [
       "fargate",
       "linux",
       "x64"
      ],
      "vpcArn": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":ec2:",
         {
          "Ref": "AWS::Region"
         },
         ":",
         {
          "Ref": "AWS::AccountId"
         },
         ":vpc/",
         {
          "Ref": "Vpc8378EB38"
         }
        ]
       ]
      },
      "securityGroups": [
       {
        "Fn::GetAtt": [
         "FargatesecuritygroupAFCAFD34",
         "GroupId"
        ]
       }
      ],
      "roleArn": {
       "Fn::GetAtt": [
        "FargatetaskTaskRoleEFFCDAF8",
        "Arn"
       ]
      },
      "image": {
       "imageRepository": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargatebuilderBuilder0834CD0B"
              }
             ]
            }
           ]
          },
          ".dkr.ecr.",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargatebuilderBuilder0834CD0B"
              }
             ]
            }
           ]
          },
          ".",
          {
           "Ref": "AWS::URLSuffix"
          },
          "/",
          {
           "Fn::GetAtt": [
            "FargatebuilderBuilder0834CD0B",
            "Name"
           ]
          }
         ]
        ]
       },
       "imageTag": "latest",
       "imageBuilderLogGroup": {
        "Ref": "FargatebuilderLogs2F794091"
       }
      }
     },
     {
      "type": "FargateRunner",
      "labels": [
       "fargate-spot",
       "linux",
       "x64"
      ],
      "vpcArn": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":ec2:",
         {
          "Ref": "AWS::Region"
         },
         ":",
         {
          "Ref": "AWS::AccountId"
         },
         ":vpc/",
         {
          "Ref": "Vpc8378EB38"
         }
        ]
       ]
      },
      "securityGroups": [
       {
        "Fn::GetAtt": [
         "Fargatex64spotsecuritygroup2A9F4299",
         "GroupId"
        ]
       }
      ],
      "roleArn": {
       "Fn::GetAtt": [
        "Fargatex64spottaskTaskRole02893C25",
        "Arn"
       ]
      },
      "image": {
       "imageRepository": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargatebuilderBuilder0834CD0B"
              }
             ]
            }
           ]
          },
          ".dkr.ecr.",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargatebuilderBuilder0834CD0B"
              }
             ]
            }
           ]
          },
          ".",
          {
           "Ref": "AWS::URLSuffix"
          },
          "/",
          {
           "Fn::GetAtt": [
            "FargatebuilderBuilder0834CD0B",
            "Name"
           ]
          }
         ]
        ]
       },
       "imageTag": "latest",
       "imageBuilderLogGroup": {
        "Ref": "FargatebuilderLogs2F794091"
       }
      }
     },
     {
      "type": "FargateRunner",
      "labels": [
       "fargate",
       "linux",
       "arm64"
      ],
      "vpcArn": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":ec2:",
         {
          "Ref": "AWS::Region"
         },
         ":",
         {
          "Ref": "AWS::AccountId"
         },
         ":vpc/",
         {
          "Ref": "Vpc8378EB38"
         }
        ]
       ]
      },
      "securityGroups": [
       {
        "Fn::GetAtt": [
         "Fargatearm64securitygroup08ABAD9E",
         "GroupId"
        ]
       }
      ],
      "roleArn": {
       "Fn::GetAtt": [
        "Fargatearm64taskTaskRoleD3C2CD58",
        "Arn"
       ]
      },
      "image": {
       "imageRepository": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargatebuilderarmBuilder48D1AF5A"
              }
             ]
            }
           ]
          },
          ".dkr.ecr.",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargatebuilderarmBuilder48D1AF5A"
              }
             ]
            }
           ]
          },
          ".",
          {
           "Ref": "AWS::URLSuffix"
          },
          "/",
          {
           "Fn::GetAtt": [
            "FargatebuilderarmBuilder48D1AF5A",
            "Name"
           ]
          }
         ]
        ]
       },
       "imageTag": "latest",
       "imageBuilderLogGroup": {
        "Ref": "FargatebuilderarmLogs63D60F4D"
       }
      }
     },
     {
      "type": "FargateRunner",
      "labels": [
       "fargate-spot",
       "linux",
       "arm64"
      ],
      "vpcArn": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":ec2:",
         {
          "Ref": "AWS::Region"
         },
         ":",
         {
          "Ref": "AWS::AccountId"
         },
         ":vpc/",
         {
          "Ref": "Vpc8378EB38"
         }
        ]
       ]
      },
      "securityGroups": [
       {
        "Fn::GetAtt": [
         "Fargatearm64spotsecuritygroup20C885E4",
         "GroupId"
        ]
       }
      ],
      "roleArn": {
       "Fn::GetAtt": [
        "Fargatearm64spottaskTaskRole0F078C81",
        "Arn"
       ]
      },
      "image": {
       "imageRepository": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargatebuilderarmBuilder48D1AF5A"
              }
             ]
            }
           ]
          },
          ".dkr.ecr.",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "FargatebuilderarmBuilder48D1AF5A"
              }
             ]
            }
           ]
          },
          ".",
          {
           "Ref": "AWS::URLSuffix"
          },
          "/",
          {
           "Fn::GetAtt": [
            "FargatebuilderarmBuilder48D1AF5A",
            "Name"
           ]
          }
         ]
        ]
       },
       "imageTag": "latest",
       "imageBuilderLogGroup": {
        "Ref": "FargatebuilderarmLogs63D60F4D"
       }
      }
     },
     {
      "type": "FargateRunner",
      "labels": [
       "fargate",
       "windows",
       "x64"
      ],
      "vpcArn": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":ec2:",
         {
          "Ref": "AWS::Region"
         },
         ":",
         {
          "Ref": "AWS::AccountId"
         },
         ":vpc/",
         {
          "Ref": "Vpc8378EB38"
         }
        ]
       ]
      },
      "securityGroups": [
       {
        "Fn::GetAtt": [
         "FargateWindowssecuritygroupE684A7B0",
         "GroupId"
        ]
       }
      ],
      "roleArn": {
       "Fn::GetAtt": [
        "FargateWindowstaskTaskRole364508C8",
        "Arn"
       ]
      },
      "image": {
       "imageRepository": {
        "Fn::Join": [
         "",
         [
          {
           "Ref": "AWS::AccountId"
          },
          ".dkr.ecr.",
          {
           "Ref": "AWS::Region"
          },
          ".",
          {
           "Ref": "AWS::URLSuffix"
          },
          "/",
          {
           "Fn::Select": [
            0,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::Select": [
                1,
                {
                 "Fn::Split": [
                  "/",
                  {
                   "Fn::GetAtt": [
                    "WindowsImageBuilderImage7065BB07",
                    "ImageUri"
                   ]
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         ]
        ]
       },
       "imageTag": "latest",
       "imageBuilderLogGroup": {
        "Ref": "WindowsImageBuilderLog0E03408E"
       }
      }
     },
     {
      "type": "Ec2Runner",
      "labels": [
       "ec2",
       "linux",
       "x64"
      ],
      "securityGroups": [
       {
        "Fn::GetAtt": [
         "EC2LinuxSGF5B89300",
         "GroupId"
        ]
       }
      ],
      "roleArn": {
       "Fn::GetAtt": [
        "EC2LinuxRole8B6519A2",
        "Arn"
       ]
      },
      "ami": {
       "launchTemplate": {
        "Ref": "AMILinuxBuilderLaunchtemplateA29452C4"
       },
       "amiBuilderLogGroup": {
        "Ref": "AMILinuxBuilderLogAA902D79"
       }
      }
     },
     {
      "type": "Ec2Runner",
      "labels": [
       "ec2-spot",
       "linux",
       "x64"
      ],
      "securityGroups": [
       {
        "Fn::GetAtt": [
         "EC2SpotLinuxSG8D846B64",
         "GroupId"
        ]
       }
      ],
      "roleArn": {
       "Fn::GetAtt": [
        "EC2SpotLinuxRole86333E5D",
        "Arn"
       ]
      },
      "ami": {
       "launchTemplate": {
        "Ref": "AMILinuxBuilderLaunchtemplateA29452C4"
       },
       "amiBuilderLogGroup": {
        "Ref": "AMILinuxBuilderLogAA902D79"
       }
      }
     },
     {
      "type": "Ec2Runner",
      "labels": [
       "ec2",
       "linux",
       "arm64"
      ],
      "securityGroups": [
       {
        "Fn::GetAtt": [
         "EC2Linuxarm64SG550ECD6C",
         "GroupId"
        ]
       }
      ],
      "roleArn": {
       "Fn::GetAtt": [
        "EC2Linuxarm64Role242F68FF",
        "Arn"
       ]
      },
      "ami": {
       "launchTemplate": {
        "Ref": "AMILinuxarm64BuilderLaunchtemplate8F5EFF44"
       },
       "amiBuilderLogGroup": {
        "Ref": "AMILinuxarm64BuilderLog3F9BB6F0"
       }
      }
     },
     {
      "type": "Ec2Runner",
      "labels": [
       "ec2",
       "windows",
       "x64"
      ],
      "securityGroups": [
       {
        "Fn::GetAtt": [
         "EC2WindowsSG13E24976",
         "GroupId"
        ]
       }
      ],
      "roleArn": {
       "Fn::GetAtt": [
        "EC2WindowsRoleC0D850D2",
        "Arn"
       ]
      },
      "ami": {
       "launchTemplate": {
        "Ref": "WindowsEC2BuilderLaunchtemplate0A66E9C2"
       },
       "amiBuilderLogGroup": {
        "Ref": "WindowsEC2BuilderLog486ECFAD"
       }
      }
     }
    ]
   }
  },
  "runnersstatusLogRetention8EB4A773": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "runnersstatus1A5771C0"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   }
  }
 },
 "Parameters": {
  "SsmParameterValueawsservicecanonicalubuntuserverfocalstablecurrentamd64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/canonical/ubuntu/server/focal/stable/current/amd64/hvm/ebs-gp2/ami-id"
  },
  "SsmParameterValueawsservicecanonicalubuntuserverfocalstablecurrentarm64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/canonical/ubuntu/server/focal/stable/current/arm64/hvm/ebs-gp2/ami-id"
  },
  "SsmParameterValueawsserviceamiwindowslatestWindowsServer2022EnglishFullContainersLatestC96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-windows-latest/Windows_Server-2022-English-Full-ContainersLatest"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Outputs": {
  "runnersstatuscommand4A30F0F5": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "aws --region ",
      {
       "Ref": "AWS::Region"
      },
      " lambda invoke --function-name ",
      {
       "Ref": "runnersstatus1A5771C0"
      },
      " status.json"
     ]
    ]
   }
  }
 },
 "Mappings": {
  "ServiceprincipalMap": {
   "af-south-1": {
    "states": "states.af-south-1.amazonaws.com"
   },
   "ap-east-1": {
    "states": "states.ap-east-1.amazonaws.com"
   },
   "ap-northeast-1": {
    "states": "states.ap-northeast-1.amazonaws.com"
   },
   "ap-northeast-2": {
    "states": "states.ap-northeast-2.amazonaws.com"
   },
   "ap-northeast-3": {
    "states": "states.ap-northeast-3.amazonaws.com"
   },
   "ap-south-1": {
    "states": "states.ap-south-1.amazonaws.com"
   },
   "ap-southeast-1": {
    "states": "states.ap-southeast-1.amazonaws.com"
   },
   "ap-southeast-2": {
    "states": "states.ap-southeast-2.amazonaws.com"
   },
   "ap-southeast-3": {
    "states": "states.ap-southeast-3.amazonaws.com"
   },
   "ca-central-1": {
    "states": "states.ca-central-1.amazonaws.com"
   },
   "cn-north-1": {
    "states": "states.cn-north-1.amazonaws.com"
   },
   "cn-northwest-1": {
    "states": "states.cn-northwest-1.amazonaws.com"
   },
   "eu-central-1": {
    "states": "states.eu-central-1.amazonaws.com"
   },
   "eu-north-1": {
    "states": "states.eu-north-1.amazonaws.com"
   },
   "eu-south-1": {
    "states": "states.eu-south-1.amazonaws.com"
   },
   "eu-south-2": {
    "states": "states.eu-south-2.amazonaws.com"
   },
   "eu-west-1": {
    "states": "states.eu-west-1.amazonaws.com"
   },
   "eu-west-2": {
    "states": "states.eu-west-2.amazonaws.com"
   },
   "eu-west-3": {
    "states": "states.eu-west-3.amazonaws.com"
   },
   "me-south-1": {
    "states": "states.me-south-1.amazonaws.com"
   },
   "sa-east-1": {
    "states": "states.sa-east-1.amazonaws.com"
   },
   "us-east-1": {
    "states": "states.us-east-1.amazonaws.com"
   },
   "us-east-2": {
    "states": "states.us-east-2.amazonaws.com"
   },
   "us-gov-east-1": {
    "states": "states.us-gov-east-1.amazonaws.com"
   },
   "us-gov-west-1": {
    "states": "states.us-gov-west-1.amazonaws.com"
   },
   "us-iso-east-1": {
    "states": "states.amazonaws.com"
   },
   "us-iso-west-1": {
    "states": "states.amazonaws.com"
   },
   "us-isob-east-1": {
    "states": "states.amazonaws.com"
   },
   "us-west-1": {
    "states": "states.us-west-1.amazonaws.com"
   },
   "us-west-2": {
    "states": "states.us-west-2.amazonaws.com"
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}